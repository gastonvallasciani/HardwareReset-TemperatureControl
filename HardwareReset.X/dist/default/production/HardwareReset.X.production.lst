

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jan 26 10:14:54 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.41
    41                           ; Generated 25/01/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F46K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	nvCOMRAM
    76  00002A                     __pnvCOMRAM:
    77                           	opt stack 0
    78  00002A                     _TMR2_InterruptHandler:
    79                           	opt stack 0
    80  00002A                     	ds	2
    81  0000                     _CCPR5H	set	3926
    82  0000                     _CCPR5L	set	3925
    83  0000                     _CCP5CON	set	3924
    84  0000                     _ANSELA	set	3896
    85  0000                     _ANSELE	set	3900
    86  0000                     _ANSELD	set	3899
    87  0000                     _ANSELB	set	3897
    88  0000                     _ANSELC	set	3898
    89  0000                     _TXREG1	set	4013
    90  0000                     _RCREG1	set	4014
    91  0000                     _RCSTA1bits	set	4011
    92  0000                     _SPBRGH1	set	4016
    93  0000                     _SPBRG1	set	4015
    94  0000                     _TXSTA1	set	4012
    95  0000                     _RCSTA1	set	4011
    96  0000                     _BAUDCON1	set	4024
    97  0000                     _LATAbits	set	3977
    98  0000                     _LATDbits	set	3980
    99  0000                     _ADCON0bits	set	4034
   100  0000                     _ADRESH	set	4036
   101  0000                     _ADRESL	set	4035
   102  0000                     _ADCON2	set	4032
   103  0000                     _ADCON1	set	4033
   104  0000                     _ADCON0	set	4034
   105  0000                     _INTCON2bits	set	4081
   106  0000                     _WPUB	set	3937
   107  0000                     _TRISD	set	3989
   108  0000                     _TRISC	set	3988
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISA	set	3986
   111  0000                     _TRISE	set	3990
   112  0000                     _LATC	set	3979
   113  0000                     _LATB	set	3978
   114  0000                     _LATA	set	3977
   115  0000                     _LATD	set	3980
   116  0000                     _LATE	set	3981
   117  0000                     _INTCONbits	set	4082
   118  0000                     _RCONbits	set	4048
   119  0000                     _OSCTUNE	set	3995
   120  0000                     _OSCCON2	set	4050
   121  0000                     _OSCCON	set	4051
   122  0000                     _T2CONbits	set	4026
   123  0000                     _PIE1bits	set	3997
   124  0000                     _PIR1bits	set	3998
   125  0000                     _TMR2	set	4028
   126  0000                     _PR2	set	4027
   127  0000                     _T2CON	set	4026
   128                           
   129                           ; #config settings
   130  0000                     
   131                           	psect	cinit
   132  0002DC                     __pcinit:
   133                           	opt stack 0
   134  0002DC                     start_initialization:
   135                           	opt stack 0
   136  0002DC                     __initialization:
   137                           	opt stack 0
   138                           
   139                           ; Clear objects allocated to COMRAM (20 bytes)
   140  0002DC  EE00  F016         	lfsr	0,__pbssCOMRAM
   141  0002E0  0E14               	movlw	20
   142  0002E2                     clear_0:
   143  0002E2  6AEE               	clrf	postinc0,c
   144  0002E4  06E8               	decf	wreg,f,c
   145  0002E6  E1FD               	bnz	clear_0
   146  0002E8                     end_of_initialization:
   147                           	opt stack 0
   148  0002E8                     __end_of__initialization:
   149                           	opt stack 0
   150  0002E8  902C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   151  0002EA  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   152  0002EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   153  0002EE  6EF8               	movwf	tblptru,c
   154  0002F0  0100               	movlb	0
   155  0002F2  EFB5  F001         	goto	_main	;jump to C main() function
   156                           tblptru	equ	0xFF8
   157                           postinc0	equ	0xFEE
   158                           wreg	equ	0xFE8
   159                           
   160                           	psect	bssCOMRAM
   161  000016                     __pbssCOMRAM:
   162                           	opt stack 0
   163  000016                     TempAcquisition@TEMPL:
   164                           	opt stack 0
   165  000016                     	ds	2
   166  000018                     TempAcquisition@TEMPH:
   167                           	opt stack 0
   168  000018                     	ds	2
   169  00001A                     TMR2_Tick@State:
   170                           	opt stack 0
   171  00001A                     	ds	2
   172  00001C                     TMR2_Tick@Hard_OFF:
   173                           	opt stack 0
   174  00001C                     	ds	2
   175  00001E                     TMR2_Tick@Hard_ON:
   176                           	opt stack 0
   177  00001E                     	ds	2
   178  000020                     TMR2_Tick@min:
   179                           	opt stack 0
   180  000020                     	ds	2
   181  000022                     TMR2_Tick@seg:
   182                           	opt stack 0
   183  000022                     	ds	2
   184  000024                     _TempCounter:
   185                           	opt stack 0
   186  000024                     	ds	2
   187  000026                     TMR2_ISR@CountCallBack:
   188                           	opt stack 0
   189  000026                     	ds	2
   190  000028                     TempAcquisition@TEMPERATURA:
   191                           	opt stack 0
   192  000028                     	ds	2
   193                           tblptru	equ	0xFF8
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           
   197                           	psect	cstackCOMRAM
   198  000001                     __pcstackCOMRAM:
   199                           	opt stack 0
   200  000001                     ??_TMR2_Tick:
   201  000001                     
   202                           ; 1 bytes @ 0x0
   203  000001                     	ds	1
   204  000002                     ??_INTERRUPT_InterruptManager:
   205                           
   206                           ; 1 bytes @ 0x1
   207  000002                     	ds	14
   208  000010                     ??_ADC_SelectChannel:
   209  000010                     ?_ADC_GetConversion:
   210                           	opt stack 0
   211  000010                     ?___wmul:
   212                           	opt stack 0
   213  000010                     EUSART1_Write@txData:
   214                           	opt stack 0
   215  000010                     TMR2_SetInterruptHandler@InterruptHandler:
   216                           	opt stack 0
   217  000010                     ___wmul@multiplier:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0xF
   221  000010                     	ds	1
   222  000011                     ADC_SelectChannel@channel:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x10
   226  000011                     	ds	1
   227  000012                     ??_ADC_GetConversion:
   228  000012                     ___wmul@multiplicand:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x11
   232  000012                     	ds	2
   233  000014                     ADC_GetConversion@channel:
   234                           	opt stack 0
   235  000014                     ___wmul@product:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x13
   239  000014                     	ds	2
   240  000016                     tblptru	equ	0xFF8
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           
   244                           ; 1 bytes @ 0x15
   245 ;;
   246 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   247 ;;
   248 ;; *************** function _main *****************
   249 ;; Defined at:
   250 ;;		line 56 in file "main.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;		None
   253 ;; Auto vars:     Size  Location     Type
   254 ;;		None
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   259 ;; Tracked objects:
   260 ;;		On entry : 0/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   268 ;;Total ram usage:        0 bytes
   269 ;; Hardware stack levels required when called:    8
   270 ;; This function calls:
   271 ;;		_InitHardware
   272 ;;		_MainTask
   273 ;;		_SYSTEM_Initialize
   274 ;; This function is called by:
   275 ;;		Startup code after reset
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           	psect	text0
   280  00036A                     __ptext0:
   281                           	opt stack 0
   282  00036A                     _main:
   283                           	opt stack 23
   284                           
   285                           ;main.c: 59: SYSTEM_Initialize();
   286                           
   287                           ;incstack = 0
   288  00036A  EC51  F001         	call	_SYSTEM_Initialize	;wreg free
   289                           
   290                           ;main.c: 79: (INTCONbits.GIE = 1);
   291  00036E  8EF2               	bsf	intcon,7,c	;volatile
   292                           
   293                           ;main.c: 82: (INTCONbits.PEIE = 1);
   294  000370  8CF2               	bsf	intcon,6,c	;volatile
   295                           
   296                           ;main.c: 84: InitHardware();
   297  000372  EC60  F001         	call	_InitHardware	;wreg free
   298  000376                     l1195:
   299                           
   300                           ;main.c: 94: {
   301                           ;main.c: 95: MainTask();
   302  000376  ECD0  F001         	call	_MainTask	;wreg free
   303  00037A  D7FD               	goto	l1195
   304  00037C                     __end_of_main:
   305                           	opt stack 0
   306                           tblptru	equ	0xFF8
   307                           intcon	equ	0xFF2
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           
   311 ;; *************** function _SYSTEM_Initialize *****************
   312 ;; Defined at:
   313 ;;		line 111 in file "mcc_generated_files/mcc.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;Total ram usage:        0 bytes
   332 ;; Hardware stack levels used:    1
   333 ;; Hardware stack levels required when called:    6
   334 ;; This function calls:
   335 ;;		_ADC_Initialize
   336 ;;		_CCP5_Initialize
   337 ;;		_EUSART1_Initialize
   338 ;;		_INTERRUPT_Initialize
   339 ;;		_OSCILLATOR_Initialize
   340 ;;		_PIN_MANAGER_Initialize
   341 ;;		_TMR2_Initialize
   342 ;; This function is called by:
   343 ;;		_main
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text1
   348  0002A2                     __ptext1:
   349                           	opt stack 0
   350  0002A2                     _SYSTEM_Initialize:
   351                           	opt stack 24
   352                           
   353                           ;mcc.c: 114: INTERRUPT_Initialize();
   354                           
   355                           ;incstack = 0
   356  0002A2  ECD5  F001         	call	_INTERRUPT_Initialize	;wreg free
   357                           
   358                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   359  0002A6  ECD0  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   360                           
   361                           ;mcc.c: 116: OSCILLATOR_Initialize();
   362  0002AA  ECBE  F001         	call	_OSCILLATOR_Initialize	;wreg free
   363                           
   364                           ;mcc.c: 117: TMR2_Initialize();
   365  0002AE  EC20  F001         	call	_TMR2_Initialize	;wreg free
   366                           
   367                           ;mcc.c: 118: CCP5_Initialize();
   368  0002B2  ECAB  F001         	call	_CCP5_Initialize	;wreg free
   369                           
   370                           ;mcc.c: 119: ADC_Initialize();
   371  0002B6  EC88  F001         	call	_ADC_Initialize	;wreg free
   372                           
   373                           ;mcc.c: 120: EUSART1_Initialize();
   374  0002BA  ECA0  F001         	call	_EUSART1_Initialize	;wreg free
   375  0002BE  0012               	return		;funcret
   376  0002C0                     __end_of_SYSTEM_Initialize:
   377                           	opt stack 0
   378                           tblptru	equ	0xFF8
   379                           intcon	equ	0xFF2
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           
   383 ;; *************** function _TMR2_Initialize *****************
   384 ;; Defined at:
   385 ;;		line 65 in file "mcc_generated_files/tmr2.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels used:    1
   405 ;; Hardware stack levels required when called:    5
   406 ;; This function calls:
   407 ;;		_TMR2_SetInterruptHandler
   408 ;;		_TMR2_StartTimer
   409 ;; This function is called by:
   410 ;;		_SYSTEM_Initialize
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text2
   415  000240                     __ptext2:
   416                           	opt stack 0
   417  000240                     _TMR2_Initialize:
   418                           	opt stack 24
   419                           
   420                           ;tmr2.c: 70: T2CON = 0x01;
   421                           
   422                           ;incstack = 0
   423  000240  0E01               	movlw	1
   424  000242  6EBA               	movwf	4026,c	;volatile
   425                           
   426                           ;tmr2.c: 73: PR2 = 0x31;
   427  000244  0E31               	movlw	49
   428  000246  6EBB               	movwf	4027,c	;volatile
   429                           
   430                           ;tmr2.c: 76: TMR2 = 0x00;
   431  000248  0E00               	movlw	0
   432  00024A  6EBC               	movwf	4028,c	;volatile
   433                           
   434                           ;tmr2.c: 79: PIR1bits.TMR2IF = 0;
   435  00024C  929E               	bcf	3998,1,c	;volatile
   436                           
   437                           ;tmr2.c: 82: PIE1bits.TMR2IE = 1;
   438  00024E  829D               	bsf	3997,1,c	;volatile
   439                           
   440                           ;tmr2.c: 85: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
   441  000250  0EB6               	movlw	low _TMR2_DefaultInterruptHandler
   442  000252  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   443  000254  0E03               	movlw	high _TMR2_DefaultInterruptHandler
   444  000256  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   445  000258  ECCB  F001         	call	_TMR2_SetInterruptHandler	;wreg free
   446                           
   447                           ;tmr2.c: 88: TMR2_StartTimer();
   448  00025C  ECD3  F001         	call	_TMR2_StartTimer	;wreg free
   449  000260  0012               	return		;funcret
   450  000262                     __end_of_TMR2_Initialize:
   451                           	opt stack 0
   452                           tblptru	equ	0xFF8
   453                           intcon	equ	0xFF2
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           
   457 ;; *************** function _TMR2_StartTimer *****************
   458 ;; Defined at:
   459 ;;		line 91 in file "mcc_generated_files/tmr2.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		None
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; Hardware stack levels required when called:    4
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_TMR2_Initialize
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text3
   488  0003A6                     __ptext3:
   489                           	opt stack 0
   490  0003A6                     _TMR2_StartTimer:
   491                           	opt stack 24
   492                           
   493                           ;tmr2.c: 94: T2CONbits.TMR2ON = 1;
   494                           
   495                           ;incstack = 0
   496  0003A6  84BA               	bsf	4026,2,c	;volatile
   497  0003A8  0012               	return		;funcret
   498  0003AA                     __end_of_TMR2_StartTimer:
   499                           	opt stack 0
   500                           tblptru	equ	0xFF8
   501                           intcon	equ	0xFF2
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           
   505 ;; *************** function _PIN_MANAGER_Initialize *****************
   506 ;; Defined at:
   507 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, status,2
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;Total ram usage:        0 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; Hardware stack levels required when called:    4
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_SYSTEM_Initialize
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text4
   536  0001A0                     __ptext4:
   537                           	opt stack 0
   538  0001A0                     _PIN_MANAGER_Initialize:
   539                           	opt stack 25
   540                           
   541                           ;pin_manager.c: 56: LATE = 0x00;
   542                           
   543                           ;incstack = 0
   544  0001A0  0E00               	movlw	0
   545  0001A2  6E8D               	movwf	3981,c	;volatile
   546                           
   547                           ;pin_manager.c: 57: LATD = 0x00;
   548  0001A4  0E00               	movlw	0
   549  0001A6  6E8C               	movwf	3980,c	;volatile
   550                           
   551                           ;pin_manager.c: 58: LATA = 0x00;
   552  0001A8  0E00               	movlw	0
   553  0001AA  6E89               	movwf	3977,c	;volatile
   554                           
   555                           ;pin_manager.c: 59: LATB = 0x00;
   556  0001AC  0E00               	movlw	0
   557  0001AE  6E8A               	movwf	3978,c	;volatile
   558                           
   559                           ;pin_manager.c: 60: LATC = 0x00;
   560  0001B0  0E00               	movlw	0
   561  0001B2  6E8B               	movwf	3979,c	;volatile
   562                           
   563                           ;pin_manager.c: 65: TRISE = 0x07;
   564  0001B4  0E07               	movlw	7
   565  0001B6  6E96               	movwf	3990,c	;volatile
   566                           
   567                           ;pin_manager.c: 66: TRISA = 0xFE;
   568  0001B8  0EFE               	movlw	254
   569  0001BA  6E92               	movwf	3986,c	;volatile
   570                           
   571                           ;pin_manager.c: 67: TRISB = 0xFF;
   572  0001BC  6893               	setf	3987,c	;volatile
   573                           
   574                           ;pin_manager.c: 68: TRISC = 0xBF;
   575  0001BE  0EBF               	movlw	191
   576  0001C0  6E94               	movwf	3988,c	;volatile
   577                           
   578                           ;pin_manager.c: 69: TRISD = 0x3F;
   579  0001C2  0E3F               	movlw	63
   580  0001C4  6E95               	movwf	3989,c	;volatile
   581                           
   582                           ;pin_manager.c: 74: ANSELC = 0xBC;
   583  0001C6  0EBC               	movlw	188
   584  0001C8  010F               	movlb	15	; () banked
   585  0001CA  6F3A               	movwf	58,b	;volatile
   586                           
   587                           ;pin_manager.c: 75: ANSELB = 0x3F;
   588  0001CC  0E3F               	movlw	63
   589  0001CE  010F               	movlb	15	; () banked
   590  0001D0  6F39               	movwf	57,b	;volatile
   591                           
   592                           ;pin_manager.c: 76: ANSELD = 0x3F;
   593  0001D2  0E3F               	movlw	63
   594  0001D4  010F               	movlb	15	; () banked
   595  0001D6  6F3B               	movwf	59,b	;volatile
   596                           
   597                           ;pin_manager.c: 77: ANSELE = 0x07;
   598  0001D8  0E07               	movlw	7
   599  0001DA  010F               	movlb	15	; () banked
   600  0001DC  6F3C               	movwf	60,b	;volatile
   601                           
   602                           ;pin_manager.c: 78: ANSELA = 0x2E;
   603  0001DE  0E2E               	movlw	46
   604  0001E0  010F               	movlb	15	; () banked
   605  0001E2  6F38               	movwf	56,b	;volatile
   606                           
   607                           ; BSR set to: 15
   608                           ;pin_manager.c: 83: WPUB = 0xFF;
   609  0001E4  6861               	setf	3937,c	;volatile
   610                           
   611                           ; BSR set to: 15
   612                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
   613  0001E6  9EF1               	bcf	intcon2,7,c	;volatile
   614                           
   615                           ; BSR set to: 15
   616  0001E8  0012               	return		;funcret
   617  0001EA                     __end_of_PIN_MANAGER_Initialize:
   618                           	opt stack 0
   619                           tblptru	equ	0xFF8
   620                           intcon	equ	0xFF2
   621                           intcon2	equ	0xFF1
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           
   625 ;; *************** function _OSCILLATOR_Initialize *****************
   626 ;; Defined at:
   627 ;;		line 123 in file "mcc_generated_files/mcc.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    4
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_SYSTEM_Initialize
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text5
   656  00037C                     __ptext5:
   657                           	opt stack 0
   658  00037C                     _OSCILLATOR_Initialize:
   659                           	opt stack 25
   660                           
   661                           ;mcc.c: 126: OSCCON = 0x70;
   662                           
   663                           ; BSR set to: 15
   664                           ;incstack = 0
   665  00037C  0E70               	movlw	112
   666  00037E  6ED3               	movwf	4051,c	;volatile
   667                           
   668                           ;mcc.c: 128: OSCCON2 = 0x04;
   669  000380  0E04               	movlw	4
   670  000382  6ED2               	movwf	4050,c	;volatile
   671                           
   672                           ;mcc.c: 130: OSCTUNE = 0x00;
   673  000384  0E00               	movlw	0
   674  000386  6E9B               	movwf	3995,c	;volatile
   675  000388  0012               	return		;funcret
   676  00038A                     __end_of_OSCILLATOR_Initialize:
   677                           	opt stack 0
   678                           tblptru	equ	0xFF8
   679                           intcon	equ	0xFF2
   680                           intcon2	equ	0xFF1
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           
   684 ;; *************** function _INTERRUPT_Initialize *****************
   685 ;; Defined at:
   686 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		None
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    4
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_SYSTEM_Initialize
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text6
   715  0003AA                     __ptext6:
   716                           	opt stack 0
   717  0003AA                     _INTERRUPT_Initialize:
   718                           	opt stack 25
   719                           
   720                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
   721                           
   722                           ;incstack = 0
   723  0003AA  9ED0               	bcf	4048,7,c	;volatile
   724  0003AC  0012               	return		;funcret
   725  0003AE                     __end_of_INTERRUPT_Initialize:
   726                           	opt stack 0
   727                           tblptru	equ	0xFF8
   728                           intcon	equ	0xFF2
   729                           intcon2	equ	0xFF1
   730                           postinc0	equ	0xFEE
   731                           wreg	equ	0xFE8
   732                           
   733 ;; *************** function _EUSART1_Initialize *****************
   734 ;; Defined at:
   735 ;;		line 55 in file "mcc_generated_files/eusart1.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    4
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_SYSTEM_Initialize
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text7
   764  000340                     __ptext7:
   765                           	opt stack 0
   766  000340                     _EUSART1_Initialize:
   767                           	opt stack 25
   768                           
   769                           ;eusart1.c: 60: BAUDCON1 = 0x08;
   770                           
   771                           ;incstack = 0
   772  000340  0E08               	movlw	8
   773  000342  6EB8               	movwf	4024,c	;volatile
   774                           
   775                           ;eusart1.c: 63: RCSTA1 = 0x80;
   776  000344  0E80               	movlw	128
   777  000346  6EAB               	movwf	4011,c	;volatile
   778                           
   779                           ;eusart1.c: 66: TXSTA1 = 0x24;
   780  000348  0E24               	movlw	36
   781  00034A  6EAC               	movwf	4012,c	;volatile
   782                           
   783                           ;eusart1.c: 69: SPBRG1 = 0xA0;
   784  00034C  0EA0               	movlw	160
   785  00034E  6EAF               	movwf	4015,c	;volatile
   786                           
   787                           ;eusart1.c: 72: SPBRGH1 = 0x01;
   788  000350  0E01               	movlw	1
   789  000352  6EB0               	movwf	4016,c	;volatile
   790  000354  0012               	return		;funcret
   791  000356                     __end_of_EUSART1_Initialize:
   792                           	opt stack 0
   793                           tblptru	equ	0xFF8
   794                           intcon	equ	0xFF2
   795                           intcon2	equ	0xFF1
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           
   799 ;; *************** function _CCP5_Initialize *****************
   800 ;; Defined at:
   801 ;;		line 57 in file "mcc_generated_files/ccp5.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, status,2
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;Total ram usage:        0 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    4
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_SYSTEM_Initialize
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text8
   830  000356                     __ptext8:
   831                           	opt stack 0
   832  000356                     _CCP5_Initialize:
   833                           	opt stack 25
   834                           
   835                           ;ccp5.c: 60: CCP5CON = 0x00;
   836                           
   837                           ;incstack = 0
   838  000356  0E00               	movlw	0
   839  000358  010F               	movlb	15	; () banked
   840  00035A  6F54               	movwf	84,b	;volatile
   841                           
   842                           ;ccp5.c: 62: CCPR5L = 0x00;
   843  00035C  0E00               	movlw	0
   844  00035E  010F               	movlb	15	; () banked
   845  000360  6F55               	movwf	85,b	;volatile
   846                           
   847                           ;ccp5.c: 64: CCPR5H = 0x00;
   848  000362  0E00               	movlw	0
   849  000364  010F               	movlb	15	; () banked
   850  000366  6F56               	movwf	86,b	;volatile
   851                           
   852                           ; BSR set to: 15
   853  000368  0012               	return		;funcret
   854  00036A                     __end_of_CCP5_Initialize:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           intcon	equ	0xFF2
   858                           intcon2	equ	0xFF1
   859                           postinc0	equ	0xFEE
   860                           wreg	equ	0xFE8
   861                           
   862 ;; *************** function _ADC_Initialize *****************
   863 ;; Defined at:
   864 ;;		line 58 in file "mcc_generated_files/adc.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    4
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_SYSTEM_Initialize
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text9
   893  000310                     __ptext9:
   894                           	opt stack 0
   895  000310                     _ADC_Initialize:
   896                           	opt stack 25
   897                           
   898                           ;adc.c: 63: ADCON0 = 0x01;
   899                           
   900                           ; BSR set to: 15
   901                           ;incstack = 0
   902  000310  0E01               	movlw	1
   903  000312  6EC2               	movwf	4034,c	;volatile
   904                           
   905                           ;adc.c: 66: ADCON1 = 0x00;
   906  000314  0E00               	movlw	0
   907  000316  6EC1               	movwf	4033,c	;volatile
   908                           
   909                           ;adc.c: 69: ADCON2 = 0x0E;
   910  000318  0E0E               	movlw	14
   911  00031A  6EC0               	movwf	4032,c	;volatile
   912                           
   913                           ;adc.c: 72: ADRESL = 0x00;
   914  00031C  0E00               	movlw	0
   915  00031E  6EC3               	movwf	4035,c	;volatile
   916                           
   917                           ;adc.c: 75: ADRESH = 0x00;
   918  000320  0E00               	movlw	0
   919  000322  6EC4               	movwf	4036,c	;volatile
   920                           
   921                           ;adc.c: 78: PIE1bits.ADIE = 1;
   922  000324  8C9D               	bsf	3997,6,c	;volatile
   923  000326  0012               	return		;funcret
   924  000328                     __end_of_ADC_Initialize:
   925                           	opt stack 0
   926                           tblptru	equ	0xFF8
   927                           intcon	equ	0xFF2
   928                           intcon2	equ	0xFF1
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           
   932 ;; *************** function _MainTask *****************
   933 ;; Defined at:
   934 ;;		line 27 in file "tasks.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    7
   955 ;; This function calls:
   956 ;;		_TempUpdate
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text10
   963  0003A0                     __ptext10:
   964                           	opt stack 0
   965  0003A0                     _MainTask:
   966                           	opt stack 23
   967                           
   968                           ;tasks.c: 29: TempUpdate();
   969                           
   970                           ;incstack = 0
   971  0003A0  EC7B  F001         	call	_TempUpdate	;wreg free
   972  0003A4  0012               	return		;funcret
   973  0003A6                     __end_of_MainTask:
   974                           	opt stack 0
   975                           tblptru	equ	0xFF8
   976                           intcon	equ	0xFF2
   977                           intcon2	equ	0xFF1
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           
   981 ;; *************** function _TempUpdate *****************
   982 ;; Defined at:
   983 ;;		line 73 in file "tasks.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    6
  1004 ;; This function calls:
  1005 ;;		_TempAcquisition
  1006 ;; This function is called by:
  1007 ;;		_MainTask
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text11
  1012  0002F6                     __ptext11:
  1013                           	opt stack 0
  1014  0002F6                     _TempUpdate:
  1015                           	opt stack 23
  1016                           
  1017                           ;tasks.c: 75: if (TempCounter > 10*10*10*1)
  1018                           
  1019                           ;incstack = 0
  1020  0002F6  0EE9               	movlw	233
  1021  0002F8  5C24               	subwf	_TempCounter,w,c
  1022  0002FA  0E03               	movlw	3
  1023  0002FC  5825               	subwfb	_TempCounter+1,w,c
  1024  0002FE  A0D8               	btfss	status,0,c
  1025  000300  0012               	return	
  1026                           
  1027                           ;tasks.c: 76: {
  1028                           ;tasks.c: 77: TempAcquisition();
  1029  000302  ECA2  F000         	call	_TempAcquisition	;wreg free
  1030                           
  1031                           ;tasks.c: 78: TempCounter = 0;
  1032  000306  0E00               	movlw	0
  1033  000308  6E25               	movwf	_TempCounter+1,c
  1034  00030A  0E00               	movlw	0
  1035  00030C  6E24               	movwf	_TempCounter,c
  1036  00030E  0012               	return	
  1037  000310                     __end_of_TempUpdate:
  1038                           	opt stack 0
  1039                           tblptru	equ	0xFF8
  1040                           intcon	equ	0xFF2
  1041                           intcon2	equ	0xFF1
  1042                           postinc0	equ	0xFEE
  1043                           wreg	equ	0xFE8
  1044                           status	equ	0xFD8
  1045                           
  1046 ;; *************** function _TempAcquisition *****************
  1047 ;; Defined at:
  1048 ;;		line 81 in file "tasks.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    5
  1069 ;; This function calls:
  1070 ;;		_ADC_GetConversion
  1071 ;;		_EUSART1_Write
  1072 ;;		___wmul
  1073 ;; This function is called by:
  1074 ;;		_TempUpdate
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text12
  1079  000144                     __ptext12:
  1080                           	opt stack 0
  1081  000144                     _TempAcquisition:
  1082                           	opt stack 23
  1083                           
  1084                           ;tasks.c: 83: static uint16_t TEMPERATURA=0;
  1085                           ;tasks.c: 84: static uint16_t TEMPH=0;
  1086                           ;tasks.c: 85: static uint16_t TEMPL=0;
  1087                           ;tasks.c: 87: TEMPERATURA = ADC_GetConversion(TEMP_SENSOR);
  1088                           
  1089                           ;incstack = 0
  1090  000144  0E02               	movlw	2
  1091  000146  ECF5  F000         	call	_ADC_GetConversion
  1092  00014A  C010  F028         	movff	?_ADC_GetConversion,TempAcquisition@TEMPERATURA
  1093  00014E  C011  F029         	movff	?_ADC_GetConversion+1,TempAcquisition@TEMPERATURA+1
  1094                           
  1095                           ;tasks.c: 89: TEMPH = 0x00FF*TEMPERATURA;
  1096  000152  C028  F010         	movff	TempAcquisition@TEMPERATURA,___wmul@multiplier
  1097  000156  C029  F011         	movff	TempAcquisition@TEMPERATURA+1,___wmul@multiplier+1
  1098  00015A  0E00               	movlw	0
  1099  00015C  6E13               	movwf	___wmul@multiplicand+1,c
  1100  00015E  6812               	setf	___wmul@multiplicand,c
  1101  000160  EC0D  F001         	call	___wmul	;wreg free
  1102  000164  C010  F018         	movff	?___wmul,TempAcquisition@TEMPH
  1103  000168  C011  F019         	movff	?___wmul+1,TempAcquisition@TEMPH+1
  1104                           
  1105                           ;tasks.c: 90: TEMPL = (0xFF00*TEMPERATURA)>>8;
  1106  00016C  C028  F010         	movff	TempAcquisition@TEMPERATURA,___wmul@multiplier
  1107  000170  C029  F011         	movff	TempAcquisition@TEMPERATURA+1,___wmul@multiplier+1
  1108  000174  0EFF               	movlw	255
  1109  000176  6E13               	movwf	___wmul@multiplicand+1,c
  1110  000178  0E00               	movlw	0
  1111  00017A  6E12               	movwf	___wmul@multiplicand,c
  1112  00017C  EC0D  F001         	call	___wmul	;wreg free
  1113  000180  5011               	movf	?___wmul+1,w,c
  1114  000182  6E16               	movwf	TempAcquisition@TEMPL,c
  1115  000184  6A17               	clrf	TempAcquisition@TEMPL+1,c
  1116                           
  1117                           ;tasks.c: 92: EUSART1_Write(1);
  1118  000186  0E01               	movlw	1
  1119  000188  ECC5  F001         	call	_EUSART1_Write
  1120                           
  1121                           ;tasks.c: 93: EUSART1_Write(TEMPL);
  1122  00018C  5016               	movf	TempAcquisition@TEMPL,w,c
  1123  00018E  ECC5  F001         	call	_EUSART1_Write
  1124                           
  1125                           ;tasks.c: 94: EUSART1_Write(TEMPH);
  1126  000192  5018               	movf	TempAcquisition@TEMPH,w,c
  1127  000194  ECC5  F001         	call	_EUSART1_Write
  1128                           
  1129                           ;tasks.c: 95: EUSART1_Write(1);
  1130  000198  0E01               	movlw	1
  1131  00019A  ECC5  F001         	call	_EUSART1_Write
  1132  00019E  0012               	return		;funcret
  1133  0001A0                     __end_of_TempAcquisition:
  1134                           	opt stack 0
  1135                           tblptru	equ	0xFF8
  1136                           intcon	equ	0xFF2
  1137                           intcon2	equ	0xFF1
  1138                           postinc0	equ	0xFEE
  1139                           wreg	equ	0xFE8
  1140                           status	equ	0xFD8
  1141                           
  1142 ;; *************** function ___wmul *****************
  1143 ;; Defined at:
  1144 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\Umul16.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  multiplier      2   15[COMRAM] unsigned int 
  1147 ;;  multiplicand    2   17[COMRAM] unsigned int 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  product         2   19[COMRAM] unsigned int 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  2   15[COMRAM] unsigned int 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, status,0, prodl, prodh
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;Total ram usage:        6 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    4
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_TempAcquisition
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text13
  1174  00021A                     __ptext13:
  1175                           	opt stack 0
  1176  00021A                     ___wmul:
  1177                           	opt stack 23
  1178                           
  1179                           ;incstack = 0
  1180  00021A  5010               	movf	___wmul@multiplier,w,c
  1181  00021C  0212               	mulwf	___wmul@multiplicand,c
  1182  00021E  CFF3 F014          	movff	prodl,___wmul@product
  1183  000222  CFF4 F015          	movff	prodh,___wmul@product+1
  1184  000226  5010               	movf	___wmul@multiplier,w,c
  1185  000228  0213               	mulwf	___wmul@multiplicand+1,c
  1186  00022A  50F3               	movf	prodl,w,c
  1187  00022C  2615               	addwf	___wmul@product+1,f,c
  1188  00022E  5011               	movf	___wmul@multiplier+1,w,c
  1189  000230  0212               	mulwf	___wmul@multiplicand,c
  1190  000232  50F3               	movf	prodl,w,c
  1191  000234  2615               	addwf	___wmul@product+1,f,c
  1192  000236  C014  F010         	movff	___wmul@product,?___wmul
  1193  00023A  C015  F011         	movff	___wmul@product+1,?___wmul+1
  1194  00023E  0012               	return	
  1195  000240                     __end_of___wmul:
  1196                           	opt stack 0
  1197                           tblptru	equ	0xFF8
  1198                           prodh	equ	0xFF4
  1199                           prodl	equ	0xFF3
  1200                           intcon	equ	0xFF2
  1201                           intcon2	equ	0xFF1
  1202                           postinc0	equ	0xFEE
  1203                           wreg	equ	0xFE8
  1204                           status	equ	0xFD8
  1205                           
  1206 ;; *************** function _EUSART1_Write *****************
  1207 ;; Defined at:
  1208 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  txData          1    wreg     unsigned char 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  txData          1   15[COMRAM] unsigned char 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;Total ram usage:        1 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    4
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_TempAcquisition
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text14
  1237  00038A                     __ptext14:
  1238                           	opt stack 0
  1239  00038A                     _EUSART1_Write:
  1240                           	opt stack 23
  1241                           
  1242                           ;incstack = 0
  1243                           ;EUSART1_Write@txData stored from wreg
  1244  00038A  6E10               	movwf	EUSART1_Write@txData,c
  1245  00038C                     l312:
  1246  00038C  A89E               	btfss	3998,4,c	;volatile
  1247  00038E  D7FE               	goto	l312
  1248                           
  1249                           ;eusart1.c: 101: }
  1250                           ;eusart1.c: 103: TXREG1 = txData;
  1251  000390  C010  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1252  000394  0012               	return		;funcret
  1253  000396                     __end_of_EUSART1_Write:
  1254                           	opt stack 0
  1255                           tblptru	equ	0xFF8
  1256                           prodh	equ	0xFF4
  1257                           prodl	equ	0xFF3
  1258                           intcon	equ	0xFF2
  1259                           intcon2	equ	0xFF1
  1260                           postinc0	equ	0xFEE
  1261                           wreg	equ	0xFE8
  1262                           status	equ	0xFD8
  1263                           
  1264 ;; *************** function _ADC_GetConversion *****************
  1265 ;; Defined at:
  1266 ;;		line 108 in file "mcc_generated_files/adc.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  channel         1    wreg     enum E6986
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  channel         1   19[COMRAM] enum E6986
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  2   15[COMRAM] unsigned int 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;Total ram usage:        5 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    4
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_TempAcquisition
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text15
  1295  0001EA                     __ptext15:
  1296                           	opt stack 0
  1297  0001EA                     _ADC_GetConversion:
  1298                           	opt stack 23
  1299                           
  1300                           ;incstack = 0
  1301                           ;ADC_GetConversion@channel stored from wreg
  1302  0001EA  6E14               	movwf	ADC_GetConversion@channel,c
  1303                           
  1304                           ;adc.c: 111: ADCON0bits.CHS = channel;
  1305  0001EC  C014  F012         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  1306  0001F0  4612               	rlncf	??_ADC_GetConversion,f,c
  1307  0001F2  4612               	rlncf	??_ADC_GetConversion,f,c
  1308  0001F4  50C2               	movf	4034,w,c	;volatile
  1309  0001F6  1812               	xorwf	??_ADC_GetConversion,w,c
  1310  0001F8  0B83               	andlw	-125
  1311  0001FA  1812               	xorwf	??_ADC_GetConversion,w,c
  1312  0001FC  6EC2               	movwf	4034,c	;volatile
  1313                           
  1314                           ;adc.c: 114: ADCON0bits.ADON = 1;
  1315  0001FE  80C2               	bsf	4034,0,c	;volatile
  1316                           
  1317                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
  1318  000200  82C2               	bsf	4034,1,c	;volatile
  1319  000202                     l178:
  1320  000202  B2C2               	btfsc	4034,1,c	;volatile
  1321  000204  D7FE               	goto	l178
  1322                           
  1323                           ;adc.c: 122: }
  1324                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
  1325  000206  50C4               	movf	4036,w,c	;volatile
  1326  000208  6E13               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  1327  00020A  6A12               	clrf	??_ADC_GetConversion& (0+255),c
  1328  00020C  50C3               	movf	4035,w,c	;volatile
  1329  00020E  2412               	addwf	??_ADC_GetConversion,w,c
  1330  000210  6E10               	movwf	?_ADC_GetConversion,c
  1331  000212  0E00               	movlw	0
  1332  000214  2013               	addwfc	??_ADC_GetConversion+1,w,c
  1333  000216  6E11               	movwf	?_ADC_GetConversion+1,c
  1334  000218  0012               	return	
  1335  00021A                     __end_of_ADC_GetConversion:
  1336                           	opt stack 0
  1337                           tblptru	equ	0xFF8
  1338                           prodh	equ	0xFF4
  1339                           prodl	equ	0xFF3
  1340                           intcon	equ	0xFF2
  1341                           intcon2	equ	0xFF1
  1342                           postinc0	equ	0xFEE
  1343                           wreg	equ	0xFE8
  1344                           status	equ	0xFD8
  1345                           
  1346 ;; *************** function _InitHardware *****************
  1347 ;; Defined at:
  1348 ;;		line 14 in file "tasks.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;Total ram usage:        0 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    5
  1369 ;; This function calls:
  1370 ;;		_ADC_SelectChannel
  1371 ;;		_ADC_StartConversion
  1372 ;;		_TMR2_SetInterruptHandler
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text16
  1379  0002C0                     __ptext16:
  1380                           	opt stack 0
  1381  0002C0                     _InitHardware:
  1382                           	opt stack 25
  1383                           
  1384                           ;tasks.c: 16: TMR2_SetInterruptHandler(TMR2_Tick);
  1385                           
  1386                           ;incstack = 0
  1387  0002C0  0E9E               	movlw	low _TMR2_Tick
  1388  0002C2  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1389  0002C4  0E00               	movlw	high _TMR2_Tick
  1390  0002C6  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1391  0002C8  ECCB  F001         	call	_TMR2_SetInterruptHandler	;wreg free
  1392                           
  1393                           ;tasks.c: 18: ADC_SelectChannel(TEMP_SENSOR);
  1394  0002CC  0E02               	movlw	2
  1395  0002CE  EC94  F001         	call	_ADC_SelectChannel
  1396                           
  1397                           ;tasks.c: 20: do { LATDbits.LATD7 = 1; } while(0);
  1398  0002D2  8E8C               	bsf	3980,7,c	;volatile
  1399                           
  1400                           ;tasks.c: 21: do { LATDbits.LATD6 = 1; } while(0);
  1401  0002D4  8C8C               	bsf	3980,6,c	;volatile
  1402                           
  1403                           ;tasks.c: 23: ADC_StartConversion();
  1404  0002D6  ECD7  F001         	call	_ADC_StartConversion	;wreg free
  1405  0002DA  0012               	return		;funcret
  1406  0002DC                     __end_of_InitHardware:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           prodh	equ	0xFF4
  1410                           prodl	equ	0xFF3
  1411                           intcon	equ	0xFF2
  1412                           intcon2	equ	0xFF1
  1413                           postinc0	equ	0xFEE
  1414                           wreg	equ	0xFE8
  1415                           status	equ	0xFD8
  1416                           
  1417 ;; *************** function _TMR2_SetInterruptHandler *****************
  1418 ;; Defined at:
  1419 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  InterruptHan    2   15[COMRAM] PTR void 
  1422 ;;		 -> TMR2_Tick(1), TMR2_DefaultInterruptHandler(1), 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;Total ram usage:        2 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    4
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_TMR2_Initialize
  1445 ;;		_InitHardware
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text17
  1450  000396                     __ptext17:
  1451                           	opt stack 0
  1452  000396                     _TMR2_SetInterruptHandler:
  1453                           	opt stack 24
  1454                           
  1455                           ;tmr2.c: 152: TMR2_InterruptHandler = InterruptHandler;
  1456                           
  1457                           ;incstack = 0
  1458  000396  C010  F02A         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1459  00039A  C011  F02B         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1460  00039E  0012               	return		;funcret
  1461  0003A0                     __end_of_TMR2_SetInterruptHandler:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           prodh	equ	0xFF4
  1465                           prodl	equ	0xFF3
  1466                           intcon	equ	0xFF2
  1467                           intcon2	equ	0xFF1
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _ADC_StartConversion *****************
  1473 ;; Defined at:
  1474 ;;		line 89 in file "mcc_generated_files/adc.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		None
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    4
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_InitHardware
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text18
  1503  0003AE                     __ptext18:
  1504                           	opt stack 0
  1505  0003AE                     _ADC_StartConversion:
  1506                           	opt stack 25
  1507                           
  1508                           ;adc.c: 92: ADCON0bits.GO_nDONE = 1;
  1509                           
  1510                           ;incstack = 0
  1511  0003AE  82C2               	bsf	4034,1,c	;volatile
  1512  0003B0  0012               	return		;funcret
  1513  0003B2                     __end_of_ADC_StartConversion:
  1514                           	opt stack 0
  1515                           tblptru	equ	0xFF8
  1516                           prodh	equ	0xFF4
  1517                           prodl	equ	0xFF3
  1518                           intcon	equ	0xFF2
  1519                           intcon2	equ	0xFF1
  1520                           postinc0	equ	0xFEE
  1521                           wreg	equ	0xFE8
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _ADC_SelectChannel *****************
  1525 ;; Defined at:
  1526 ;;		line 81 in file "mcc_generated_files/adc.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  channel         1    wreg     enum E6986
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  channel         1   16[COMRAM] enum E6986
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;Total ram usage:        2 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    4
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_InitHardware
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text19
  1555  000328                     __ptext19:
  1556                           	opt stack 0
  1557  000328                     _ADC_SelectChannel:
  1558                           	opt stack 25
  1559                           
  1560                           ;incstack = 0
  1561                           ;ADC_SelectChannel@channel stored from wreg
  1562  000328  6E11               	movwf	ADC_SelectChannel@channel,c
  1563                           
  1564                           ;adc.c: 84: ADCON0bits.CHS = channel;
  1565  00032A  C011  F010         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  1566  00032E  4610               	rlncf	??_ADC_SelectChannel,f,c
  1567  000330  4610               	rlncf	??_ADC_SelectChannel,f,c
  1568  000332  50C2               	movf	4034,w,c	;volatile
  1569  000334  1810               	xorwf	??_ADC_SelectChannel,w,c
  1570  000336  0B83               	andlw	-125
  1571  000338  1810               	xorwf	??_ADC_SelectChannel,w,c
  1572  00033A  6EC2               	movwf	4034,c	;volatile
  1573                           
  1574                           ;adc.c: 86: ADCON0bits.ADON = 1;
  1575  00033C  80C2               	bsf	4034,0,c	;volatile
  1576  00033E  0012               	return		;funcret
  1577  000340                     __end_of_ADC_SelectChannel:
  1578                           	opt stack 0
  1579                           tblptru	equ	0xFF8
  1580                           prodh	equ	0xFF4
  1581                           prodl	equ	0xFF3
  1582                           intcon	equ	0xFF2
  1583                           intcon2	equ	0xFF1
  1584                           postinc0	equ	0xFEE
  1585                           wreg	equ	0xFE8
  1586                           status	equ	0xFD8
  1587                           
  1588 ;; *************** function _INTERRUPT_InterruptManager *****************
  1589 ;; Defined at:
  1590 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;Total ram usage:       14 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    3
  1611 ;; This function calls:
  1612 ;;		_ADC_ISR
  1613 ;;		_TMR2_ISR
  1614 ;; This function is called by:
  1615 ;;		Interrupt level 2
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	intcode
  1620  000008                     __pintcode:
  1621                           	opt stack 0
  1622  000008                     _INTERRUPT_InterruptManager:
  1623                           	opt stack 23
  1624                           
  1625                           ;incstack = 0
  1626  000008  822C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1627  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
  1628  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1629  000012  CFE9 F004          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1630  000016  CFEA F005          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1631  00001A  CFE1 F006          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1632  00001E  CFE2 F007          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1633  000022  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1634  000026  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1635  00002A  CFF3 F00A          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1636  00002E  CFF4 F00B          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1637  000032  CFF6 F00C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1638  000036  CFF7 F00D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1639  00003A  CFF8 F00E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1640  00003E  CFF5 F00F          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1641                           
  1642                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  1643  000042  BCF2               	btfsc	intcon,6,c	;volatile
  1644  000044  AC9D               	btfss	3997,6,c	;volatile
  1645  000046  D005               	goto	i2l100
  1646  000048  AC9E               	btfss	3998,6,c	;volatile
  1647  00004A  D003               	goto	i2l100
  1648                           
  1649                           ;interrupt_manager.c: 61: {
  1650                           ;interrupt_manager.c: 62: ADC_ISR();
  1651  00004C  ECD9  F001         	call	_ADC_ISR	;wreg free
  1652                           
  1653                           ;interrupt_manager.c: 63: }
  1654  000050  D006               	goto	i2l104
  1655  000052                     i2l100:
  1656                           
  1657                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  1658  000052  BCF2               	btfsc	intcon,6,c	;volatile
  1659  000054  A29D               	btfss	3997,1,c	;volatile
  1660  000056  D003               	goto	i2l104
  1661  000058  B29E               	btfsc	3998,1,c	;volatile
  1662                           
  1663                           ;interrupt_manager.c: 65: {
  1664                           ;interrupt_manager.c: 66: TMR2_ISR();
  1665  00005A  EC31  F001         	call	_TMR2_ISR	;wreg free
  1666  00005E                     i2l104:
  1667  00005E  C00F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1668  000062  C00E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1669  000066  C00D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1670  00006A  C00C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1671  00006E  C00B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1672  000072  C00A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1673  000076  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1674  00007A  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1675  00007E  C007  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1676  000082  C006  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1677  000086  C005  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1678  00008A  C004  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1679  00008E  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1680  000092  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1681  000096  922C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1682  000098  0011               	retfie		f
  1683  00009A                     __end_of_INTERRUPT_InterruptManager:
  1684                           	opt stack 0
  1685                           pclatu	equ	0xFFB
  1686                           pclath	equ	0xFFA
  1687                           tblptru	equ	0xFF8
  1688                           tblptrh	equ	0xFF7
  1689                           tblptrl	equ	0xFF6
  1690                           tablat	equ	0xFF5
  1691                           prodh	equ	0xFF4
  1692                           prodl	equ	0xFF3
  1693                           intcon	equ	0xFF2
  1694                           intcon2	equ	0xFF1
  1695                           postinc0	equ	0xFEE
  1696                           fsr0h	equ	0xFEA
  1697                           fsr0l	equ	0xFE9
  1698                           wreg	equ	0xFE8
  1699                           fsr1h	equ	0xFE2
  1700                           fsr1l	equ	0xFE1
  1701                           fsr2h	equ	0xFDA
  1702                           fsr2l	equ	0xFD9
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function _TMR2_ISR *****************
  1706 ;; Defined at:
  1707 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;Total ram usage:        0 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    2
  1728 ;; This function calls:
  1729 ;;		_TMR2_CallBack
  1730 ;; This function is called by:
  1731 ;;		_INTERRUPT_InterruptManager
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text21
  1736  000262                     __ptext21:
  1737                           	opt stack 0
  1738  000262                     _TMR2_ISR:
  1739                           	opt stack 23
  1740                           
  1741                           ;tmr2.c: 125: static volatile unsigned int CountCallBack = 0;
  1742                           ;tmr2.c: 127: PIR1bits.TMR2IF = 0;
  1743                           
  1744                           ;incstack = 0
  1745  000262  929E               	bcf	3998,1,c	;volatile
  1746                           
  1747                           ;tmr2.c: 130: if (++CountCallBack >= 20)
  1748  000264  4A26               	infsnz	TMR2_ISR@CountCallBack,f,c	;volatile
  1749  000266  2A27               	incf	TMR2_ISR@CountCallBack+1,f,c	;volatile
  1750  000268  5027               	movf	TMR2_ISR@CountCallBack+1,w,c	;volatile
  1751  00026A  E104               	bnz	i2u13_40
  1752  00026C  0E14               	movlw	20
  1753  00026E  5C26               	subwf	TMR2_ISR@CountCallBack,w,c	;volatile
  1754  000270  A0D8               	btfss	status,0,c
  1755  000272  0012               	return	
  1756  000274                     i2u13_40:
  1757                           
  1758                           ;tmr2.c: 131: {
  1759                           ;tmr2.c: 134: TMR2_CallBack();
  1760  000274  EC41  F001         	call	_TMR2_CallBack	;wreg free
  1761                           
  1762                           ;tmr2.c: 137: CountCallBack = 0;
  1763  000278  0E00               	movlw	0
  1764  00027A  6E27               	movwf	TMR2_ISR@CountCallBack+1,c	;volatile
  1765  00027C  0E00               	movlw	0
  1766  00027E  6E26               	movwf	TMR2_ISR@CountCallBack,c	;volatile
  1767  000280  0012               	return	
  1768  000282                     __end_of_TMR2_ISR:
  1769                           	opt stack 0
  1770                           pclatu	equ	0xFFB
  1771                           pclath	equ	0xFFA
  1772                           tblptru	equ	0xFF8
  1773                           tblptrh	equ	0xFF7
  1774                           tblptrl	equ	0xFF6
  1775                           tablat	equ	0xFF5
  1776                           prodh	equ	0xFF4
  1777                           prodl	equ	0xFF3
  1778                           intcon	equ	0xFF2
  1779                           intcon2	equ	0xFF1
  1780                           postinc0	equ	0xFEE
  1781                           fsr0h	equ	0xFEA
  1782                           fsr0l	equ	0xFE9
  1783                           wreg	equ	0xFE8
  1784                           fsr1h	equ	0xFE2
  1785                           fsr1l	equ	0xFE1
  1786                           fsr2h	equ	0xFDA
  1787                           fsr2l	equ	0xFD9
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _TMR2_CallBack *****************
  1791 ;; Defined at:
  1792 ;;		line 141 in file "mcc_generated_files/tmr2.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;Total ram usage:        0 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    1
  1813 ;; This function calls:
  1814 ;;		Absolute function
  1815 ;;		_TMR2_DefaultInterruptHandler
  1816 ;;		_TMR2_Tick
  1817 ;; This function is called by:
  1818 ;;		_TMR2_ISR
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text22
  1823  000282                     __ptext22:
  1824                           	opt stack 0
  1825  000282                     _TMR2_CallBack:
  1826                           	opt stack 23
  1827                           
  1828                           ;tmr2.c: 145: if(TMR2_InterruptHandler)
  1829                           
  1830                           ;incstack = 0
  1831  000282  502A               	movf	_TMR2_InterruptHandler,w,c
  1832  000284  102B               	iorwf	_TMR2_InterruptHandler+1,w,c
  1833  000286  B4D8               	btfsc	status,2,c
  1834  000288  0012               	return	
  1835                           
  1836                           ;tmr2.c: 146: {
  1837                           ;tmr2.c: 147: TMR2_InterruptHandler();
  1838  00028A  D801               	call	i2u11_48
  1839  00028C  0012               	return	
  1840  00028E                     i2u11_48:
  1841  00028E  0005               	push	
  1842  000290  6EFA               	movwf	pclath,c
  1843  000292  502A               	movf	_TMR2_InterruptHandler,w,c
  1844  000294  6EFD               	movwf	tosl,c
  1845  000296  502B               	movf	_TMR2_InterruptHandler+1,w,c
  1846  000298  6EFE               	movwf	tosh,c
  1847  00029A  50F8               	movf	tblptru,w,c
  1848  00029C  6EFF               	movwf	tosu,c
  1849  00029E  50FA               	movf	pclath,w,c
  1850  0002A0  0012               	return		;indir
  1851  0002A2                     __end_of_TMR2_CallBack:
  1852                           	opt stack 0
  1853                           tosu	equ	0xFFF
  1854                           tosh	equ	0xFFE
  1855                           tosl	equ	0xFFD
  1856                           pclatu	equ	0xFFB
  1857                           pclath	equ	0xFFA
  1858                           tblptru	equ	0xFF8
  1859                           tblptrh	equ	0xFF7
  1860                           tblptrl	equ	0xFF6
  1861                           tablat	equ	0xFF5
  1862                           prodh	equ	0xFF4
  1863                           prodl	equ	0xFF3
  1864                           intcon	equ	0xFF2
  1865                           intcon2	equ	0xFF1
  1866                           postinc0	equ	0xFEE
  1867                           fsr0h	equ	0xFEA
  1868                           fsr0l	equ	0xFE9
  1869                           wreg	equ	0xFE8
  1870                           fsr1h	equ	0xFE2
  1871                           fsr1l	equ	0xFE1
  1872                           fsr2h	equ	0xFDA
  1873                           fsr2l	equ	0xFD9
  1874                           status	equ	0xFD8
  1875                           
  1876 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  1877 ;; Defined at:
  1878 ;;		line 155 in file "mcc_generated_files/tmr2.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		None
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_TMR2_Initialize
  1902 ;;		_TMR2_CallBack
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text23
  1907  0003B6                     __ptext23:
  1908                           	opt stack 0
  1909  0003B6                     _TMR2_DefaultInterruptHandler:
  1910                           	opt stack 23
  1911                           
  1912                           ;incstack = 0
  1913  0003B6  0012               	return		;funcret
  1914  0003B8                     __end_of_TMR2_DefaultInterruptHandler:
  1915                           	opt stack 0
  1916                           tosu	equ	0xFFF
  1917                           tosh	equ	0xFFE
  1918                           tosl	equ	0xFFD
  1919                           pclatu	equ	0xFFB
  1920                           pclath	equ	0xFFA
  1921                           tblptru	equ	0xFF8
  1922                           tblptrh	equ	0xFF7
  1923                           tblptrl	equ	0xFF6
  1924                           tablat	equ	0xFF5
  1925                           prodh	equ	0xFF4
  1926                           prodl	equ	0xFF3
  1927                           intcon	equ	0xFF2
  1928                           intcon2	equ	0xFF1
  1929                           postinc0	equ	0xFEE
  1930                           fsr0h	equ	0xFEA
  1931                           fsr0l	equ	0xFE9
  1932                           wreg	equ	0xFE8
  1933                           fsr1h	equ	0xFE2
  1934                           fsr1l	equ	0xFE1
  1935                           fsr2h	equ	0xFDA
  1936                           fsr2l	equ	0xFD9
  1937                           status	equ	0xFD8
  1938                           
  1939 ;; *************** function _TMR2_Tick *****************
  1940 ;; Defined at:
  1941 ;;		line 32 in file "tasks.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;Total ram usage:        1 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_InitHardware
  1965 ;;		_TMR2_CallBack
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text24
  1970  00009E                     __ptext24:
  1971                           	opt stack 0
  1972  00009E                     _TMR2_Tick:
  1973                           	opt stack 23
  1974                           
  1975                           ;tasks.c: 34: TempCounter++;
  1976                           
  1977                           ;incstack = 0
  1978  00009E  4A24               	infsnz	_TempCounter,f,c
  1979  0000A0  2A25               	incf	_TempCounter+1,f,c
  1980                           
  1981                           ;tasks.c: 35: static volatile unsigned uint16_t seg = 0;
  1982                           ;tasks.c: 36: static volatile unsigned uint16_t min = 0;
  1983                           ;tasks.c: 37: static volatile unsigned uint16_t Hard_ON = 0;
  1984                           ;tasks.c: 38: static volatile unsigned uint16_t Hard_OFF = 0;
  1985                           ;tasks.c: 39: static volatile unsigned uint16_t State = 0;
  1986                           ;tasks.c: 41: if (++seg >= 1000)
  1987  0000A2  4A22               	infsnz	TMR2_Tick@seg,f,c	;volatile
  1988  0000A4  2A23               	incf	TMR2_Tick@seg+1,f,c	;volatile
  1989  0000A6  0EE8               	movlw	232
  1990  0000A8  5C22               	subwf	TMR2_Tick@seg,w,c	;volatile
  1991  0000AA  0E03               	movlw	3
  1992  0000AC  5823               	subwfb	TMR2_Tick@seg+1,w,c	;volatile
  1993  0000AE  A0D8               	btfss	status,0,c
  1994  0000B0  0012               	return	
  1995                           
  1996                           ;tasks.c: 42: {
  1997                           ;tasks.c: 43: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  1998  0000B2  A089               	btfss	3977,0,c	;volatile
  1999  0000B4  D002               	goto	i2u4_40
  2000  0000B6  0E01               	movlw	1
  2001  0000B8  D001               	goto	i2u4_46
  2002  0000BA                     i2u4_40:
  2003  0000BA  0E00               	movlw	0
  2004  0000BC                     i2u4_46:
  2005  0000BC  0AFF               	xorlw	255
  2006  0000BE  6E01               	movwf	??_TMR2_Tick& (0+255),c
  2007  0000C0  5089               	movf	3977,w,c	;volatile
  2008  0000C2  1801               	xorwf	??_TMR2_Tick,w,c
  2009  0000C4  0BFE               	andlw	-2
  2010  0000C6  1801               	xorwf	??_TMR2_Tick,w,c
  2011  0000C8  6E89               	movwf	3977,c	;volatile
  2012                           
  2013                           ;tasks.c: 44: if ((++Hard_OFF >= 10))
  2014  0000CA  4A1C               	infsnz	TMR2_Tick@Hard_OFF,f,c	;volatile
  2015  0000CC  2A1D               	incf	TMR2_Tick@Hard_OFF+1,f,c	;volatile
  2016  0000CE  501D               	movf	TMR2_Tick@Hard_OFF+1,w,c	;volatile
  2017  0000D0  E104               	bnz	i2u5_40
  2018  0000D2  0E0A               	movlw	10
  2019  0000D4  5C1C               	subwf	TMR2_Tick@Hard_OFF,w,c	;volatile
  2020  0000D6  A0D8               	btfss	status,0,c
  2021  0000D8  D00E               	goto	i2l963
  2022  0000DA                     i2u5_40:
  2023                           
  2024                           ;tasks.c: 45: {
  2025                           ;tasks.c: 46: if (State == 0)
  2026  0000DA  501A               	movf	TMR2_Tick@State,w,c	;volatile
  2027  0000DC  101B               	iorwf	TMR2_Tick@State+1,w,c	;volatile
  2028  0000DE  A4D8               	btfss	status,2,c
  2029  0000E0  D006               	goto	i2l256
  2030                           
  2031                           ;tasks.c: 47: {
  2032                           ;tasks.c: 48: do { LATDbits.LATD6 = 0; } while(0);
  2033  0000E2  9C8C               	bcf	3980,6,c	;volatile
  2034                           
  2035                           ;tasks.c: 49: do { LATDbits.LATD7 = 0; } while(0);
  2036  0000E4  9E8C               	bcf	3980,7,c	;volatile
  2037                           
  2038                           ;tasks.c: 50: State = 1;
  2039  0000E6  0E00               	movlw	0
  2040  0000E8  6E1B               	movwf	TMR2_Tick@State+1,c	;volatile
  2041  0000EA  0E01               	movlw	1
  2042  0000EC  6E1A               	movwf	TMR2_Tick@State,c	;volatile
  2043  0000EE                     i2l256:
  2044                           
  2045                           ;tasks.c: 51: }
  2046                           ;tasks.c: 52: Hard_OFF = 0;
  2047  0000EE  0E00               	movlw	0
  2048  0000F0  6E1D               	movwf	TMR2_Tick@Hard_OFF+1,c	;volatile
  2049  0000F2  0E00               	movlw	0
  2050  0000F4  6E1C               	movwf	TMR2_Tick@Hard_OFF,c	;volatile
  2051  0000F6                     i2l963:
  2052                           
  2053                           ;tasks.c: 54: }
  2054                           ;tasks.c: 55: if (++min >= 60)
  2055  0000F6  4A20               	infsnz	TMR2_Tick@min,f,c	;volatile
  2056  0000F8  2A21               	incf	TMR2_Tick@min+1,f,c	;volatile
  2057  0000FA  5021               	movf	TMR2_Tick@min+1,w,c	;volatile
  2058  0000FC  E104               	bnz	i2u7_40
  2059  0000FE  0E3C               	movlw	60
  2060  000100  5C20               	subwf	TMR2_Tick@min,w,c	;volatile
  2061  000102  A0D8               	btfss	status,0,c
  2062  000104  D01A               	goto	i2l261
  2063  000106                     i2u7_40:
  2064                           
  2065                           ;tasks.c: 56: {
  2066                           ;tasks.c: 57: if ((++Hard_ON >= 60))
  2067  000106  4A1E               	infsnz	TMR2_Tick@Hard_ON,f,c	;volatile
  2068  000108  2A1F               	incf	TMR2_Tick@Hard_ON+1,f,c	;volatile
  2069  00010A  501F               	movf	TMR2_Tick@Hard_ON+1,w,c	;volatile
  2070  00010C  E104               	bnz	i2u8_40
  2071  00010E  0E3C               	movlw	60
  2072  000110  5C1E               	subwf	TMR2_Tick@Hard_ON,w,c	;volatile
  2073  000112  A0D8               	btfss	status,0,c
  2074  000114  D00E               	goto	i2l262
  2075  000116                     i2u8_40:
  2076                           
  2077                           ;tasks.c: 58: {
  2078                           ;tasks.c: 59: Hard_ON=0;
  2079  000116  0E00               	movlw	0
  2080  000118  6E1F               	movwf	TMR2_Tick@Hard_ON+1,c	;volatile
  2081  00011A  0E00               	movlw	0
  2082  00011C  6E1E               	movwf	TMR2_Tick@Hard_ON,c	;volatile
  2083                           
  2084                           ;tasks.c: 60: if(State == 1)
  2085  00011E  041A               	decf	TMR2_Tick@State,w,c	;volatile
  2086  000120  101B               	iorwf	TMR2_Tick@State+1,w,c	;volatile
  2087  000122  A4D8               	btfss	status,2,c
  2088  000124  D006               	goto	i2l262
  2089                           
  2090                           ;tasks.c: 61: {
  2091                           ;tasks.c: 62: State = 0;
  2092  000126  0E00               	movlw	0
  2093  000128  6E1B               	movwf	TMR2_Tick@State+1,c	;volatile
  2094  00012A  0E00               	movlw	0
  2095  00012C  6E1A               	movwf	TMR2_Tick@State,c	;volatile
  2096                           
  2097                           ;tasks.c: 63: do { LATDbits.LATD6 = 1; } while(0);
  2098  00012E  8C8C               	bsf	3980,6,c	;volatile
  2099                           
  2100                           ;tasks.c: 64: do { LATDbits.LATD7 = 1; } while(0);
  2101  000130  8E8C               	bsf	3980,7,c	;volatile
  2102  000132                     i2l262:
  2103                           
  2104                           ;tasks.c: 65: }
  2105                           ;tasks.c: 66: }
  2106                           ;tasks.c: 67: min = 0;
  2107  000132  0E00               	movlw	0
  2108  000134  6E21               	movwf	TMR2_Tick@min+1,c	;volatile
  2109  000136  0E00               	movlw	0
  2110  000138  6E20               	movwf	TMR2_Tick@min,c	;volatile
  2111  00013A                     i2l261:
  2112                           
  2113                           ;tasks.c: 68: }
  2114                           ;tasks.c: 69: seg = 0;
  2115  00013A  0E00               	movlw	0
  2116  00013C  6E23               	movwf	TMR2_Tick@seg+1,c	;volatile
  2117  00013E  0E00               	movlw	0
  2118  000140  6E22               	movwf	TMR2_Tick@seg,c	;volatile
  2119  000142  0012               	return	
  2120  000144                     __end_of_TMR2_Tick:
  2121                           	opt stack 0
  2122                           tosu	equ	0xFFF
  2123                           tosh	equ	0xFFE
  2124                           tosl	equ	0xFFD
  2125                           pclatu	equ	0xFFB
  2126                           pclath	equ	0xFFA
  2127                           tblptru	equ	0xFF8
  2128                           tblptrh	equ	0xFF7
  2129                           tblptrl	equ	0xFF6
  2130                           tablat	equ	0xFF5
  2131                           prodh	equ	0xFF4
  2132                           prodl	equ	0xFF3
  2133                           intcon	equ	0xFF2
  2134                           intcon2	equ	0xFF1
  2135                           postinc0	equ	0xFEE
  2136                           fsr0h	equ	0xFEA
  2137                           fsr0l	equ	0xFE9
  2138                           wreg	equ	0xFE8
  2139                           fsr1h	equ	0xFE2
  2140                           fsr1l	equ	0xFE1
  2141                           fsr2h	equ	0xFDA
  2142                           fsr2l	equ	0xFD9
  2143                           status	equ	0xFD8
  2144                           
  2145 ;; *************** function _ADC_ISR *****************
  2146 ;; Defined at:
  2147 ;;		line 129 in file "mcc_generated_files/adc.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		None
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;Total ram usage:        0 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_INTERRUPT_InterruptManager
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text25
  2175  0003B2                     __ptext25:
  2176                           	opt stack 0
  2177  0003B2                     _ADC_ISR:
  2178                           	opt stack 25
  2179                           
  2180                           ;adc.c: 132: PIR1bits.ADIF = 0;
  2181                           
  2182                           ;incstack = 0
  2183  0003B2  9C9E               	bcf	3998,6,c	;volatile
  2184  0003B4  0012               	return		;funcret
  2185  0003B6                     __end_of_ADC_ISR:
  2186                           	opt stack 0
  2187  0000                     tosu	equ	0xFFF
  2188                           tosh	equ	0xFFE
  2189                           tosl	equ	0xFFD
  2190                           pclatu	equ	0xFFB
  2191                           pclath	equ	0xFFA
  2192                           tblptru	equ	0xFF8
  2193                           tblptrh	equ	0xFF7
  2194                           tblptrl	equ	0xFF6
  2195                           tablat	equ	0xFF5
  2196                           prodh	equ	0xFF4
  2197                           prodl	equ	0xFF3
  2198                           intcon	equ	0xFF2
  2199                           intcon2	equ	0xFF1
  2200                           postinc0	equ	0xFEE
  2201                           fsr0h	equ	0xFEA
  2202                           fsr0l	equ	0xFE9
  2203                           wreg	equ	0xFE8
  2204                           fsr1h	equ	0xFE2
  2205                           fsr1l	equ	0xFE1
  2206                           fsr2h	equ	0xFDA
  2207                           fsr2l	equ	0xFD9
  2208                           status	equ	0xFD8
  2209                           tosu	equ	0xFFF
  2210                           tosh	equ	0xFFE
  2211                           tosl	equ	0xFFD
  2212                           pclatu	equ	0xFFB
  2213                           pclath	equ	0xFFA
  2214                           tblptru	equ	0xFF8
  2215                           tblptrh	equ	0xFF7
  2216                           tblptrl	equ	0xFF6
  2217                           tablat	equ	0xFF5
  2218                           prodh	equ	0xFF4
  2219                           prodl	equ	0xFF3
  2220                           intcon	equ	0xFF2
  2221                           intcon2	equ	0xFF1
  2222                           postinc0	equ	0xFEE
  2223                           fsr0h	equ	0xFEA
  2224                           fsr0l	equ	0xFE9
  2225                           wreg	equ	0xFE8
  2226                           fsr1h	equ	0xFE2
  2227                           fsr1l	equ	0xFE1
  2228                           fsr2h	equ	0xFDA
  2229                           fsr2l	equ	0xFD9
  2230                           status	equ	0xFD8
  2231                           
  2232                           	psect	text26
  2233  000000                     __ptext26:
  2234                           	opt stack 0
  2235                           tosu	equ	0xFFF
  2236                           tosh	equ	0xFFE
  2237                           tosl	equ	0xFFD
  2238                           pclatu	equ	0xFFB
  2239                           pclath	equ	0xFFA
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           prodh	equ	0xFF4
  2245                           prodl	equ	0xFF3
  2246                           intcon	equ	0xFF2
  2247                           intcon2	equ	0xFF1
  2248                           postinc0	equ	0xFEE
  2249                           fsr0h	equ	0xFEA
  2250                           fsr0l	equ	0xFE9
  2251                           wreg	equ	0xFE8
  2252                           fsr1h	equ	0xFE2
  2253                           fsr1l	equ	0xFE1
  2254                           fsr2h	equ	0xFDA
  2255                           fsr2l	equ	0xFD9
  2256                           status	equ	0xFD8
  2257                           
  2258                           	psect	rparam
  2259  0000                     tosu	equ	0xFFF
  2260                           tosh	equ	0xFFE
  2261                           tosl	equ	0xFFD
  2262                           pclatu	equ	0xFFB
  2263                           pclath	equ	0xFFA
  2264                           tblptru	equ	0xFF8
  2265                           tblptrh	equ	0xFF7
  2266                           tblptrl	equ	0xFF6
  2267                           tablat	equ	0xFF5
  2268                           prodh	equ	0xFF4
  2269                           prodl	equ	0xFF3
  2270                           intcon	equ	0xFF2
  2271                           intcon2	equ	0xFF1
  2272                           postinc0	equ	0xFEE
  2273                           fsr0h	equ	0xFEA
  2274                           fsr0l	equ	0xFE9
  2275                           wreg	equ	0xFE8
  2276                           fsr1h	equ	0xFE2
  2277                           fsr1l	equ	0xFE1
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282                           	psect	temp
  2283  00002C                     btemp:
  2284                           	opt stack 0
  2285  00002C                     	ds	1
  2286  0000                     int$flags	set	btemp
  2287                           tosu	equ	0xFFF
  2288                           tosh	equ	0xFFE
  2289                           tosl	equ	0xFFD
  2290                           pclatu	equ	0xFFB
  2291                           pclath	equ	0xFFA
  2292                           tblptru	equ	0xFF8
  2293                           tblptrh	equ	0xFF7
  2294                           tblptrl	equ	0xFF6
  2295                           tablat	equ	0xFF5
  2296                           prodh	equ	0xFF4
  2297                           prodl	equ	0xFF3
  2298                           intcon	equ	0xFF2
  2299                           intcon2	equ	0xFF1
  2300                           postinc0	equ	0xFEE
  2301                           fsr0h	equ	0xFEA
  2302                           fsr0l	equ	0xFE9
  2303                           wreg	equ	0xFE8
  2304                           fsr1h	equ	0xFE2
  2305                           fsr1l	equ	0xFE1
  2306                           fsr2h	equ	0xFDA
  2307                           fsr2l	equ	0xFD9
  2308                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_Tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TempAcquisition->___wmul
    _InitHardware->_ADC_SelectChannel
    _InitHardware->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_CallBack->_TMR2_Tick

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     767
                       _InitHardware
                           _MainTask
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     150
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     150
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainTask                                             0     0      0     452
                         _TempUpdate
 ---------------------------------------------------------------------------------
 (2) _TempUpdate                                           0     0      0     452
                    _TempAcquisition
 ---------------------------------------------------------------------------------
 (3) _TempAcquisition                                      0     0      0     452
                  _ADC_GetConversion
                      _EUSART1_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     415
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      15
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversion                                    5     3      2      22
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _InitHardware                                         0     0      0     165
                  _ADC_SelectChannel
                _ADC_StartConversion
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     150
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      15
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0       0
                                              1 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                          _TMR2_Tick *
 ---------------------------------------------------------------------------------
 (8) _TMR2_Tick                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitHardware
     _ADC_SelectChannel
     _ADC_StartConversion
     _TMR2_SetInterruptHandler
   _MainTask
     _TempUpdate
       _TempAcquisition
         _ADC_GetConversion
         _EUSART1_Write
         ___wmul
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _TMR2_Tick *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      2B       1       45.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B      12        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jan 26 10:14:54 2018

        __end_of_TMR2_SetInterruptHandler 03A0                       ___wmul@multiplicand 0012  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l312 038C  
                                     l178 0202                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 03B6                           _TMR2_Initialize 0240  
                                     tosl 000FFD                                       wreg 000FE8  
                         _CCP5_Initialize 0356                                      l1195 0376  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _TMR2 000FBC  
                                    _WPUB 000F61                             ?_InitHardware 0001  
                           _EUSART1_Write 038A                                      _main 036A  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 002C                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 009A                             __CFG_IESO$OFF 000000  
                            ___param_bank 000000                   __end_of_TempAcquisition 01A0  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 038A  
                                   ?_main 0001                                     _T2CON 000FBA  
                          __CFG_DEBUG$OFF 000000                                     i2l100 0052  
                                   i2l104 005E                                     i2l261 013A  
                                   i2l262 0132                                     i2l256 00EE  
                                   i2l963 00F6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR2_ISR 0282  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_TMR2_Tick 00A6                        __CFG_MCLRE$EXTMCLR 000000  
                          ??_InitHardware 0012                            ?_EUSART1_Write 0001  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 03A6                            __CFG_PBADEN$ON 000000  
                         __initialization 02DC                          __end_of_MainTask 03A6  
              __end_of_EUSART1_Initialize 0356                              __end_of_main 037C  
                 __end_of_TMR2_Initialize 0262                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                  _TMR2_SetInterruptHandler 0396  
                                  ??_main 0016                   __end_of_CCP5_Initialize 036A  
                           __activetblptr 000002                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  i2u4_40 00BA                                    i2u4_46 00BC  
                                  i2u5_40 00DA                                    i2u7_40 0106  
                                  i2u8_40 0116                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                                _TempUpdate 02F6  
                          __CFG_XINST$OFF 000000                          ?_TempAcquisition 0001  
                       __end_of_TMR2_Tick 0144                                    ___wmul 021A  
                          __CFG_STVREN$ON 000000                                    clear_0 02E2  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                  ADC_GetConversion@channel 0014  
                         ??_EUSART1_Write 0010                   __end_of_TMR2_StartTimer 03AA  
TMR2_SetInterruptHandler@InterruptHandler 0010             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 02A2                                __accesstop 0060  
                 __end_of__initialization 02E8                     __end_of_TMR2_CallBack 02A2  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
            __size_of_ADC_StartConversion 0004                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0012                                 ?_TMR2_ISR 0001  
                        ?_TMR2_Initialize 0001                      __end_of_InitHardware 02DC  
                        ?_CCP5_Initialize 0001                 __end_of_SYSTEM_Initialize 02C0  
                               ?_MainTask 0001                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 002A                               ?_TempUpdate 0001  
                      __CFG_CCP2MX$PORTC1 000000                                   ?___wmul 0010  
                              ??_TMR2_ISR 0002                        __CFG_CCP3MX$PORTB5 000000  
                                 _CCP5CON 000F54                                   _ADC_ISR 03B2  
                 __size_of_ADC_Initialize 0018                          TMR2_Tick@Hard_ON 001E  
                                 _OSCCON2 000FD2                                   i2u11_48 028E  
                                 i2u13_40 0274                                   _OSCTUNE 000F9B  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0001  
                              ??_MainTask 0016                               _TempCounter 0024  
              TempAcquisition@TEMPERATURA 0028                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 0012                           __size_of___wmul 0026  
                                 __pcinit 02DC                                   __ramtop 1000  
                                 __ptext0 036A                                   __ptext1 02A2  
                                 __ptext2 0240                                   __ptext3 03A6  
                                 __ptext4 01A0                                   __ptext5 037C  
                                 __ptext6 03AA                                   __ptext7 0340  
                                 __ptext8 0356                                   __ptext9 0310  
                   _OSCILLATOR_Initialize 037C                                 _T2CONbits 000FBA  
                      _EUSART1_Initialize 0340                  ??_PIN_MANAGER_Initialize 0010  
                     __size_of_TempUpdate 001A                __size_of_SYSTEM_Initialize 001E  
                    end_of_initialization 02E8                       ?_EUSART1_Initialize 0001  
                           __Lmediumconst 0000                     __size_of_InitHardware 001C  
                                 postinc0 000FEE                      ??_EUSART1_Initialize 0010  
                               _TMR2_Tick 009E                       _ADC_StartConversion 03AE  
                     EUSART1_Write@txData 0010                              _InitHardware 02C0  
                    ?_ADC_StartConversion 0001              __end_of_INTERRUPT_Initialize 03AE  
    __end_of_TMR2_DefaultInterruptHandler 03B8     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 03B6                            __end_of___wmul 0240  
                       __size_of_TMR2_ISR 0020                      TempAcquisition@TEMPH 0018  
                    TempAcquisition@TEMPL 0016                            _ADC_Initialize 0310  
                              ?_TMR2_Tick 0001                    ?_OSCILLATOR_Initialize 0001  
                __size_of_TempAcquisition 005C                       start_initialization 02DC  
         __size_of_PIN_MANAGER_Initialize 004A                     __end_of_EUSART1_Write 0396  
                       __size_of_MainTask 0006                            TMR2_Tick@State 001A  
                            ??_TempUpdate 0016                     ??_ADC_StartConversion 0010  
                                ??___wmul 0014                    __end_of_ADC_Initialize 0328  
                                ?_ADC_ISR 0001             ?_TMR2_DefaultInterruptHandler 0001  
                  __size_of_TMR2_CallBack 0020                               __pbssCOMRAM 0016  
                __size_of_TMR2_Initialize 0022                        __end_of_TempUpdate 0310  
                __size_of_CCP5_Initialize 0014                    _PIN_MANAGER_Initialize 01A0  
                               __pintcode 0008                         _ADC_SelectChannel 0328  
                         ?_ADC_Initialize 0001                        ?_ADC_SelectChannel 0001  
            ??_INTERRUPT_InterruptManager 0002                          __CFG_PRICLKEN$ON 000000  
                             ??_TMR2_Tick 0001                                  _BAUDCON1 000FB8  
                     ??_ADC_SelectChannel 0010                         TMR2_Tick@Hard_OFF 001C  
                       ??_TempAcquisition 0016                      _INTERRUPT_Initialize 03AA  
                          ___wmul@product 0014                                  _LATAbits 000F89  
                                _LATDbits 000F8C                             _TMR2_CallBack 0282  
                                _PIE1bits 000F9D                  __size_of_TMR2_StartTimer 0004  
               __end_of_ADC_SelectChannel 0340       __size_of_INTERRUPT_InterruptManager 0092  
                                _PIR1bits 000F9E                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 0262  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
                       ___wmul@multiplier 0010                  ADC_SelectChannel@channel 0011  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 0010                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                                  _MainTask 03A0  
                       ??_TMR2_Initialize 0012                            ?_TMR2_CallBack 0001  
                       ??_CCP5_Initialize 0010                                  __Hrparam 0000  
                                __Lrparam 0000                         _ADC_GetConversion 01EA  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 0010                        ?_ADC_GetConversion 0010  
             __size_of_EUSART1_Initialize 0016                       ??_ADC_GetConversion 0012  
                                __ptext10 03A0                                  __ptext11 02F6  
                                __ptext12 0144                                  __ptext21 0262  
                                __ptext13 021A                                  __ptext22 0282  
                                __ptext14 038A                                  __ptext23 03B6  
                                __ptext15 01EA                                  __ptext24 009E  
                                __ptext16 02C0                                  __ptext25 03B2  
                                __ptext17 0396                                  __ptext26 0000  
                                __ptext18 03AE                                  __ptext19 0328  
                           __size_of_main 0012                 __end_of_ADC_GetConversion 021A  
              __size_of_ADC_SelectChannel 0018                                  int$flags 002C  
                       ??_TMR2_StartTimer 0010        __end_of_INTERRUPT_InterruptManager 009A  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                            TMR2_Tick@min 0020                              TMR2_Tick@seg 0022  
                  ??_INTERRUPT_Initialize 0010                                  intlevel2 0000  
                         ??_TMR2_CallBack 0002               __end_of_ADC_StartConversion 03B2  
                 ?_PIN_MANAGER_Initialize 0001                                _RCSTA1bits 000FAB  
                        ??_ADC_Initialize 0010                    __size_of_EUSART1_Write 000C  
                         _TempAcquisition 0144                     TMR2_ISR@CountCallBack 0026  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 01EA  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 002A  
              __size_of_ADC_GetConversion 0030  
