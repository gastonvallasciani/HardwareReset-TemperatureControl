

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Jan 30 09:37:07 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 1.41
    60                           ; Generated 25/01/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F46K22 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  0011C2                     __pidataBANK0:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _SampleTime
    99  0011C2  03E8               	dw	1000
   100                           
   101                           	psect	nvBANK0
   102  00009D                     __pnvBANK0:
   103                           	opt stack 0
   104  00009D                     _TMR2_InterruptHandler:
   105                           	opt stack 0
   106  00009D                     	ds	2
   107  0000                     _CCPR5H	set	3926
   108  0000                     _CCPR5L	set	3925
   109  0000                     _CCP5CON	set	3924
   110  0000                     _ANSELA	set	3896
   111  0000                     _ANSELE	set	3900
   112  0000                     _ANSELD	set	3899
   113  0000                     _ANSELB	set	3897
   114  0000                     _ANSELC	set	3898
   115  0000                     _LATAbits	set	3977
   116  0000                     _LATDbits	set	3980
   117  0000                     _TXREG1	set	4013
   118  0000                     _RCREG1	set	4014
   119  0000                     _RCSTA1bits	set	4011
   120  0000                     _SPBRGH1	set	4016
   121  0000                     _SPBRG1	set	4015
   122  0000                     _TXSTA1	set	4012
   123  0000                     _RCSTA1	set	4011
   124  0000                     _BAUDCON1	set	4024
   125  0000                     _ADCON0bits	set	4034
   126  0000                     _ADRESH	set	4036
   127  0000                     _ADRESL	set	4035
   128  0000                     _ADCON2	set	4032
   129  0000                     _ADCON1	set	4033
   130  0000                     _ADCON0	set	4034
   131  0000                     _INTCON2bits	set	4081
   132  0000                     _WPUB	set	3937
   133  0000                     _TRISD	set	3989
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISA	set	3986
   137  0000                     _TRISE	set	3990
   138  0000                     _LATC	set	3979
   139  0000                     _LATB	set	3978
   140  0000                     _LATA	set	3977
   141  0000                     _LATD	set	3980
   142  0000                     _LATE	set	3981
   143  0000                     _INTCONbits	set	4082
   144  0000                     _RCONbits	set	4048
   145  0000                     _OSCTUNE	set	3995
   146  0000                     _OSCCON2	set	4050
   147  0000                     _OSCCON	set	4051
   148  0000                     _T2CONbits	set	4026
   149  0000                     _PIE1bits	set	3997
   150  0000                     _PIR1bits	set	3998
   151  0000                     _TMR2	set	4028
   152  0000                     _PR2	set	4027
   153  0000                     _T2CON	set	4026
   154                           
   155                           ; #config settings
   156  0000                     
   157                           	psect	cinit
   158  000F54                     __pcinit:
   159                           	opt stack 0
   160  000F54                     start_initialization:
   161                           	opt stack 0
   162  000F54                     __initialization:
   163                           	opt stack 0
   164                           
   165                           ; Initialize objects allocated to BANK0 (2 bytes)
   166                           ; load TBLPTR registers with __pidataBANK0
   167  000F54  0EC2               	movlw	low __pidataBANK0
   168  000F56  6EF6               	movwf	tblptrl,c
   169  000F58  0E11               	movlw	high __pidataBANK0
   170  000F5A  6EF7               	movwf	tblptrh,c
   171  000F5C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   172  000F5E  6EF8               	movwf	tblptru,c
   173  000F60  0009               	tblrd		*+	;fetch initializer
   174  000F62  CFF5 F09F          	movff	tablat,__pdataBANK0
   175  000F66  0009               	tblrd		*+	;fetch initializer
   176  000F68  CFF5 F0A0          	movff	tablat,__pdataBANK0+1
   177                           
   178                           ; Clear objects allocated to BANK0 (37 bytes)
   179  000F6C  EE00  F060         	lfsr	0,__pbssBANK0
   180  000F70  0E25               	movlw	37
   181  000F72                     clear_0:
   182  000F72  6AEE               	clrf	postinc0,c
   183  000F74  06E8               	decf	wreg,f,c
   184  000F76  E1FD               	bnz	clear_0
   185                           
   186                           ; Clear objects allocated to COMRAM (17 bytes)
   187  000F78  EE00  F03F         	lfsr	0,__pbssCOMRAM
   188  000F7C  0E11               	movlw	17
   189  000F7E                     clear_1:
   190  000F7E  6AEE               	clrf	postinc0,c
   191  000F80  06E8               	decf	wreg,f,c
   192  000F82  E1FD               	bnz	clear_1
   193  000F84                     end_of_initialization:
   194                           	opt stack 0
   195  000F84                     __end_of__initialization:
   196                           	opt stack 0
   197  000F84  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   198  000F86  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   199  000F88  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200  000F8A  6EF8               	movwf	tblptru,c
   201  000F8C  0100               	movlb	0
   202  000F8E  EFB8  F008         	goto	_main	;jump to C main() function
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           
   210                           	psect	bssCOMRAM
   211  00003F                     __pbssCOMRAM:
   212                           	opt stack 0
   213  00003F                     _PIDConfig:
   214                           	opt stack 0
   215  00003F                     	ds	16
   216  00004F                     _inAuto:
   217                           	opt stack 0
   218  00004F                     	ds	1
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           
   226                           	psect	bssBANK0
   227  000060                     __pbssBANK0:
   228                           	opt stack 0
   229  000060                     _lastInput:
   230                           	opt stack 0
   231  000060                     	ds	3
   232  000063                     _ITerm:
   233                           	opt stack 0
   234  000063                     	ds	3
   235  000066                     _TEMP_FLOAT:
   236                           	opt stack 0
   237  000066                     	ds	3
   238  000069                     _controllerDirection:
   239                           	opt stack 0
   240  000069                     	ds	2
   241  00006B                     _Output:
   242                           	opt stack 0
   243  00006B                     	ds	2
   244  00006D                     _Input:
   245                           	opt stack 0
   246  00006D                     	ds	2
   247  00006F                     TempAcquisition@TEMPERATURA:
   248                           	opt stack 0
   249  00006F                     	ds	2
   250  000071                     TMR2_Tick@PeltierCounter:
   251                           	opt stack 0
   252  000071                     	ds	2
   253  000073                     TMR2_Tick@State:
   254                           	opt stack 0
   255  000073                     	ds	2
   256  000075                     TMR2_Tick@Hard_OFF:
   257                           	opt stack 0
   258  000075                     	ds	2
   259  000077                     TMR2_Tick@Hard_ON:
   260                           	opt stack 0
   261  000077                     	ds	2
   262  000079                     TMR2_Tick@min:
   263                           	opt stack 0
   264  000079                     	ds	2
   265  00007B                     TMR2_Tick@seg:
   266                           	opt stack 0
   267  00007B                     	ds	2
   268  00007D                     _DutyPeltier:
   269                           	opt stack 0
   270  00007D                     	ds	2
   271  00007F                     _TempCounter:
   272                           	opt stack 0
   273  00007F                     	ds	2
   274  000081                     TMR2_ISR@CountCallBack:
   275                           	opt stack 0
   276  000081                     	ds	2
   277  000083                     	ds	1
   278  000084                     	ds	1
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	dataBANK0
   287  00009F                     __pdataBANK0:
   288                           	opt stack 0
   289  00009F                     _SampleTime:
   290                           	opt stack 0
   291  00009F                     	ds	2
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           
   299                           	psect	cstackBANK0
   300  000085                     __pcstackBANK0:
   301                           	opt stack 0
   302  000085                     ??___fttol:
   303  000085                     PID_SetTunings@Kp:
   304                           	opt stack 0
   305                           
   306                           ; 3 bytes @ 0x0
   307  000085                     	ds	3
   308  000088                     PID_SetTunings@Ki:
   309                           	opt stack 0
   310                           
   311                           ; 3 bytes @ 0x3
   312  000088                     	ds	2
   313  00008A                     ___fttol@sign1:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x5
   317  00008A                     	ds	1
   318  00008B                     PID_SetTunings@Kd:
   319                           	opt stack 0
   320  00008B                     ___fttol@lval:
   321                           	opt stack 0
   322                           
   323                           ; 4 bytes @ 0x6
   324  00008B                     	ds	4
   325  00008F                     ___fttol@exp1:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0xA
   329  00008F                     	ds	1
   330  000090                     ??_PID_Control:
   331                           
   332                           ; 1 bytes @ 0xB
   333  000090                     	ds	2
   334  000092                     PID_Control@dInput:
   335                           	opt stack 0
   336                           
   337                           ; 3 bytes @ 0xD
   338  000092                     	ds	3
   339  000095                     _PID_Control$1464:
   340                           	opt stack 0
   341                           
   342                           ; 3 bytes @ 0x10
   343  000095                     	ds	3
   344  000098                     PID_Control@error:
   345                           	opt stack 0
   346                           
   347                           ; 3 bytes @ 0x13
   348  000098                     	ds	3
   349  00009B                     _TempAcquisition$1463:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x16
   353  00009B                     	ds	2
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           
   361                           	psect	cstackCOMRAM
   362  000001                     __pcstackCOMRAM:
   363                           	opt stack 0
   364  000001                     ??_TMR2_Tick:
   365  000001                     
   366                           ; 1 bytes @ 0x0
   367  000001                     	ds	1
   368  000002                     ??_INTERRUPT_InterruptManager:
   369                           
   370                           ; 1 bytes @ 0x1
   371  000002                     	ds	14
   372  000010                     ??_ADC_SelectChannel:
   373  000010                     ?_ADC_GetConversionResult:
   374                           	opt stack 0
   375  000010                     ?___ftpack:
   376                           	opt stack 0
   377  000010                     TMR2_SetInterruptHandler@InterruptHandler:
   378                           	opt stack 0
   379  000010                     PID_SetControllerDirection@Direction:
   380                           	opt stack 0
   381  000010                     ___ftpack@arg:
   382                           	opt stack 0
   383                           
   384                           ; 3 bytes @ 0xF
   385  000010                     	ds	1
   386  000011                     ADC_SelectChannel@channel:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x10
   390  000011                     	ds	1
   391  000012                     ??_ADC_GetConversionResult:
   392                           
   393                           ; 1 bytes @ 0x11
   394  000012                     	ds	1
   395  000013                     ___ftpack@exp:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x12
   399  000013                     	ds	1
   400  000014                     ___ftpack@sign:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x13
   404  000014                     	ds	1
   405  000015                     ??___ftpack:
   406                           
   407                           ; 1 bytes @ 0x14
   408  000015                     	ds	3
   409  000018                     ?___awtoft:
   410                           	opt stack 0
   411  000018                     ?___lwtoft:
   412                           	opt stack 0
   413  000018                     ___awtoft@c:
   414                           	opt stack 0
   415  000018                     ___lwtoft@c:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x17
   419  000018                     	ds	3
   420  00001B                     ?___ftmul:
   421                           	opt stack 0
   422  00001B                     ___awtoft@sign:
   423                           	opt stack 0
   424  00001B                     ___ftmul@f1:
   425                           	opt stack 0
   426                           
   427                           ; 3 bytes @ 0x1A
   428  00001B                     	ds	1
   429  00001C                     PID_SetPoint@newSetPoint:
   430                           	opt stack 0
   431  00001C                     ___ftge@ff1:
   432                           	opt stack 0
   433                           
   434                           ; 3 bytes @ 0x1B
   435  00001C                     	ds	2
   436  00001E                     ___ftmul@f2:
   437                           	opt stack 0
   438                           
   439                           ; 3 bytes @ 0x1D
   440  00001E                     	ds	1
   441  00001F                     ___ftge@ff2:
   442                           	opt stack 0
   443                           
   444                           ; 3 bytes @ 0x1E
   445  00001F                     	ds	2
   446  000021                     ??___ftmul:
   447                           
   448                           ; 1 bytes @ 0x20
   449  000021                     	ds	1
   450  000022                     ??___ftge:
   451                           
   452                           ; 1 bytes @ 0x21
   453  000022                     	ds	2
   454  000024                     ___ftmul@exp:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x23
   458  000024                     	ds	1
   459  000025                     PID_SetOutputLimits@Min:
   460                           	opt stack 0
   461  000025                     PID_SetMode@Mode:
   462                           	opt stack 0
   463  000025                     ___ftmul@f3_as_product:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0x24
   467  000025                     	ds	2
   468  000027                     PID_SetMode@newAuto:
   469                           	opt stack 0
   470  000027                     PID_SetOutputLimits@Max:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x26
   474  000027                     	ds	1
   475  000028                     ___ftmul@cntr:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x27
   479  000028                     	ds	1
   480  000029                     ??_PID_SetOutputLimits:
   481  000029                     ___ftmul@sign:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x28
   485  000029                     	ds	1
   486  00002A                     ?___ftdiv:
   487                           	opt stack 0
   488  00002A                     ?___ftneg:
   489                           	opt stack 0
   490  00002A                     ___ftdiv@f1:
   491                           	opt stack 0
   492  00002A                     ___ftneg@f1:
   493                           	opt stack 0
   494                           
   495                           ; 3 bytes @ 0x29
   496  00002A                     	ds	3
   497  00002D                     ?___ftadd:
   498                           	opt stack 0
   499  00002D                     ___ftadd@f1:
   500                           	opt stack 0
   501  00002D                     ___ftdiv@f2:
   502                           	opt stack 0
   503                           
   504                           ; 3 bytes @ 0x2C
   505  00002D                     	ds	3
   506  000030                     ??___ftdiv:
   507  000030                     ___ftadd@f2:
   508                           	opt stack 0
   509                           
   510                           ; 3 bytes @ 0x2F
   511  000030                     	ds	3
   512  000033                     ??___ftadd:
   513  000033                     ___ftdiv@cntr:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x32
   517  000033                     	ds	1
   518  000034                     ___ftdiv@f3:
   519                           	opt stack 0
   520                           
   521                           ; 3 bytes @ 0x33
   522  000034                     	ds	2
   523  000036                     ___ftadd@sign:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x35
   527  000036                     	ds	1
   528  000037                     ___ftadd@exp2:
   529                           	opt stack 0
   530  000037                     ___ftdiv@exp:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x36
   534  000037                     	ds	1
   535  000038                     ___ftadd@exp1:
   536                           	opt stack 0
   537  000038                     ___ftdiv@sign:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x37
   541  000038                     	ds	1
   542  000039                     ?___fttol:
   543                           	opt stack 0
   544  000039                     PID_SetSampleTime@newSampleTime:
   545                           	opt stack 0
   546  000039                     PID_SetTunings@SampleTimeInSec:
   547                           	opt stack 0
   548  000039                     ___fttol@f1:
   549                           	opt stack 0
   550                           
   551                           ; 3 bytes @ 0x38
   552  000039                     	ds	2
   553  00003B                     PID_SetSampleTime@ratio:
   554                           	opt stack 0
   555                           
   556                           ; 3 bytes @ 0x3A
   557  00003B                     	ds	2
   558  00003D                     ?_PID_Control:
   559                           	opt stack 0
   560  00003D                     PID_Control@newInput:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x3C
   564  00003D                     	ds	1
   565  00003E                     
   566                           ; 1 bytes @ 0x3D
   567  00003E                     	ds	1
   568  00003F                     tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           tblptrl	equ	0xFF6
   571                           tablat	equ	0xFF5
   572                           postinc0	equ	0xFEE
   573                           wreg	equ	0xFE8
   574                           
   575                           ; 1 bytes @ 0x3E
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 56 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels required when called:   10
   601 ;; This function calls:
   602 ;;		_InitHardware
   603 ;;		_MainTask
   604 ;;		_SYSTEM_Initialize
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text0
   611  001170                     __ptext0:
   612                           	opt stack 0
   613  001170                     _main:
   614                           	opt stack 21
   615                           
   616                           ;main.c: 59: SYSTEM_Initialize();
   617                           
   618                           ;incstack = 0
   619  001170  EC66  F008         	call	_SYSTEM_Initialize	;wreg free
   620                           
   621                           ;main.c: 79: (INTCONbits.GIE = 1);
   622  001174  8EF2               	bsf	intcon,7,c	;volatile
   623                           
   624                           ;main.c: 82: (INTCONbits.PEIE = 1);
   625  001176  8CF2               	bsf	intcon,6,c	;volatile
   626                           
   627                           ;main.c: 84: InitHardware();
   628  001178  ECF0  F006         	call	_InitHardware	;wreg free
   629  00117C                     l227:
   630                           
   631                           ;main.c: 94: {
   632                           ;main.c: 95: MainTask();
   633  00117C  ECD8  F008         	call	_MainTask	;wreg free
   634  001180  D7FD               	goto	l227
   635  001182                     __end_of_main:
   636                           	opt stack 0
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           intcon	equ	0xFF2
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           
   645 ;; *************** function _SYSTEM_Initialize *****************
   646 ;; Defined at:
   647 ;;		line 111 in file "mcc_generated_files/mcc.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;Total ram usage:        0 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    6
   668 ;; This function calls:
   669 ;;		_ADC_Initialize
   670 ;;		_CCP5_Initialize
   671 ;;		_EUSART1_Initialize
   672 ;;		_INTERRUPT_Initialize
   673 ;;		_OSCILLATOR_Initialize
   674 ;;		_PIN_MANAGER_Initialize
   675 ;;		_TMR2_Initialize
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text1
   682  0010CC                     __ptext1:
   683                           	opt stack 0
   684  0010CC                     _SYSTEM_Initialize:
   685                           	opt stack 24
   686                           
   687                           ;mcc.c: 114: INTERRUPT_Initialize();
   688                           
   689                           ;incstack = 0
   690  0010CC  ECDD  F008         	call	_INTERRUPT_Initialize	;wreg free
   691                           
   692                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   693  0010D0  EC85  F007         	call	_PIN_MANAGER_Initialize	;wreg free
   694                           
   695                           ;mcc.c: 116: OSCILLATOR_Initialize();
   696  0010D4  ECC1  F008         	call	_OSCILLATOR_Initialize	;wreg free
   697                           
   698                           ;mcc.c: 117: TMR2_Initialize();
   699  0010D8  EC45  F008         	call	_TMR2_Initialize	;wreg free
   700                           
   701                           ;mcc.c: 118: CCP5_Initialize();
   702  0010DC  ECA4  F008         	call	_CCP5_Initialize	;wreg free
   703                           
   704                           ;mcc.c: 119: ADC_Initialize();
   705  0010E0  EC99  F008         	call	_ADC_Initialize	;wreg free
   706                           
   707                           ;mcc.c: 120: EUSART1_Initialize();
   708  0010E4  EC8E  F008         	call	_EUSART1_Initialize	;wreg free
   709  0010E8  0012               	return		;funcret
   710  0010EA                     __end_of_SYSTEM_Initialize:
   711                           	opt stack 0
   712                           tblptru	equ	0xFF8
   713                           tblptrh	equ	0xFF7
   714                           tblptrl	equ	0xFF6
   715                           tablat	equ	0xFF5
   716                           intcon	equ	0xFF2
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           
   720 ;; *************** function _TMR2_Initialize *****************
   721 ;; Defined at:
   722 ;;		line 65 in file "mcc_generated_files/tmr2.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    5
   743 ;; This function calls:
   744 ;;		_TMR2_SetInterruptHandler
   745 ;;		_TMR2_StartTimer
   746 ;; This function is called by:
   747 ;;		_SYSTEM_Initialize
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text2
   752  00108A                     __ptext2:
   753                           	opt stack 0
   754  00108A                     _TMR2_Initialize:
   755                           	opt stack 24
   756                           
   757                           ;tmr2.c: 70: T2CON = 0x01;
   758                           
   759                           ;incstack = 0
   760  00108A  0E01               	movlw	1
   761  00108C  6EBA               	movwf	4026,c	;volatile
   762                           
   763                           ;tmr2.c: 73: PR2 = 0x31;
   764  00108E  0E31               	movlw	49
   765  001090  6EBB               	movwf	4027,c	;volatile
   766                           
   767                           ;tmr2.c: 76: TMR2 = 0x00;
   768  001092  0E00               	movlw	0
   769  001094  6EBC               	movwf	4028,c	;volatile
   770                           
   771                           ;tmr2.c: 79: PIR1bits.TMR2IF = 0;
   772  001096  929E               	bcf	3998,1,c	;volatile
   773                           
   774                           ;tmr2.c: 82: PIE1bits.TMR2IE = 1;
   775  001098  829D               	bsf	3997,1,c	;volatile
   776                           
   777                           ;tmr2.c: 85: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
   778  00109A  0EC4               	movlw	low _TMR2_DefaultInterruptHandler
   779  00109C  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   780  00109E  0E11               	movlw	high _TMR2_DefaultInterruptHandler
   781  0010A0  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   782  0010A2  ECCE  F008         	call	_TMR2_SetInterruptHandler	;wreg free
   783                           
   784                           ;tmr2.c: 88: TMR2_StartTimer();
   785  0010A6  ECDB  F008         	call	_TMR2_StartTimer	;wreg free
   786  0010AA  0012               	return		;funcret
   787  0010AC                     __end_of_TMR2_Initialize:
   788                           	opt stack 0
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           intcon	equ	0xFF2
   794                           postinc0	equ	0xFEE
   795                           wreg	equ	0xFE8
   796                           
   797 ;; *************** function _TMR2_StartTimer *****************
   798 ;; Defined at:
   799 ;;		line 91 in file "mcc_generated_files/tmr2.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		None
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;Total ram usage:        0 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    4
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_TMR2_Initialize
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text3
   828  0011B6                     __ptext3:
   829                           	opt stack 0
   830  0011B6                     _TMR2_StartTimer:
   831                           	opt stack 24
   832                           
   833                           ;tmr2.c: 94: T2CONbits.TMR2ON = 1;
   834                           
   835                           ;incstack = 0
   836  0011B6  84BA               	bsf	4026,2,c	;volatile
   837  0011B8  0012               	return		;funcret
   838  0011BA                     __end_of_TMR2_StartTimer:
   839                           	opt stack 0
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           intcon	equ	0xFF2
   845                           postinc0	equ	0xFEE
   846                           wreg	equ	0xFE8
   847                           
   848 ;; *************** function _PIN_MANAGER_Initialize *****************
   849 ;; Defined at:
   850 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;Total ram usage:        0 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    4
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_SYSTEM_Initialize
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text4
   879  000F0A                     __ptext4:
   880                           	opt stack 0
   881  000F0A                     _PIN_MANAGER_Initialize:
   882                           	opt stack 25
   883                           
   884                           ;pin_manager.c: 56: LATE = 0x00;
   885                           
   886                           ;incstack = 0
   887  000F0A  0E00               	movlw	0
   888  000F0C  6E8D               	movwf	3981,c	;volatile
   889                           
   890                           ;pin_manager.c: 57: LATD = 0x00;
   891  000F0E  0E00               	movlw	0
   892  000F10  6E8C               	movwf	3980,c	;volatile
   893                           
   894                           ;pin_manager.c: 58: LATA = 0x00;
   895  000F12  0E00               	movlw	0
   896  000F14  6E89               	movwf	3977,c	;volatile
   897                           
   898                           ;pin_manager.c: 59: LATB = 0x00;
   899  000F16  0E00               	movlw	0
   900  000F18  6E8A               	movwf	3978,c	;volatile
   901                           
   902                           ;pin_manager.c: 60: LATC = 0x00;
   903  000F1A  0E00               	movlw	0
   904  000F1C  6E8B               	movwf	3979,c	;volatile
   905                           
   906                           ;pin_manager.c: 65: TRISE = 0x07;
   907  000F1E  0E07               	movlw	7
   908  000F20  6E96               	movwf	3990,c	;volatile
   909                           
   910                           ;pin_manager.c: 66: TRISA = 0xEE;
   911  000F22  0EEE               	movlw	238
   912  000F24  6E92               	movwf	3986,c	;volatile
   913                           
   914                           ;pin_manager.c: 67: TRISB = 0xFF;
   915  000F26  6893               	setf	3987,c	;volatile
   916                           
   917                           ;pin_manager.c: 68: TRISC = 0xBF;
   918  000F28  0EBF               	movlw	191
   919  000F2A  6E94               	movwf	3988,c	;volatile
   920                           
   921                           ;pin_manager.c: 69: TRISD = 0x3F;
   922  000F2C  0E3F               	movlw	63
   923  000F2E  6E95               	movwf	3989,c	;volatile
   924                           
   925                           ;pin_manager.c: 74: ANSELC = 0xBC;
   926  000F30  0EBC               	movlw	188
   927  000F32  010F               	movlb	15	; () banked
   928  000F34  6F3A               	movwf	58,b	;volatile
   929                           
   930                           ;pin_manager.c: 75: ANSELB = 0x3F;
   931  000F36  0E3F               	movlw	63
   932  000F38  010F               	movlb	15	; () banked
   933  000F3A  6F39               	movwf	57,b	;volatile
   934                           
   935                           ;pin_manager.c: 76: ANSELD = 0x3F;
   936  000F3C  0E3F               	movlw	63
   937  000F3E  010F               	movlb	15	; () banked
   938  000F40  6F3B               	movwf	59,b	;volatile
   939                           
   940                           ;pin_manager.c: 77: ANSELE = 0x07;
   941  000F42  0E07               	movlw	7
   942  000F44  010F               	movlb	15	; () banked
   943  000F46  6F3C               	movwf	60,b	;volatile
   944                           
   945                           ;pin_manager.c: 78: ANSELA = 0x2E;
   946  000F48  0E2E               	movlw	46
   947  000F4A  010F               	movlb	15	; () banked
   948  000F4C  6F38               	movwf	56,b	;volatile
   949                           
   950                           ; BSR set to: 15
   951                           ;pin_manager.c: 83: WPUB = 0xFF;
   952  000F4E  6861               	setf	3937,c	;volatile
   953                           
   954                           ; BSR set to: 15
   955                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
   956  000F50  9EF1               	bcf	intcon2,7,c	;volatile
   957                           
   958                           ; BSR set to: 15
   959  000F52  0012               	return		;funcret
   960  000F54                     __end_of_PIN_MANAGER_Initialize:
   961                           	opt stack 0
   962                           tblptru	equ	0xFF8
   963                           tblptrh	equ	0xFF7
   964                           tblptrl	equ	0xFF6
   965                           tablat	equ	0xFF5
   966                           intcon	equ	0xFF2
   967                           intcon2	equ	0xFF1
   968                           postinc0	equ	0xFEE
   969                           wreg	equ	0xFE8
   970                           
   971 ;; *************** function _OSCILLATOR_Initialize *****************
   972 ;; Defined at:
   973 ;;		line 123 in file "mcc_generated_files/mcc.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    4
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_SYSTEM_Initialize
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text5
  1002  001182                     __ptext5:
  1003                           	opt stack 0
  1004  001182                     _OSCILLATOR_Initialize:
  1005                           	opt stack 25
  1006                           
  1007                           ;mcc.c: 126: OSCCON = 0x70;
  1008                           
  1009                           ; BSR set to: 15
  1010                           ;incstack = 0
  1011  001182  0E70               	movlw	112
  1012  001184  6ED3               	movwf	4051,c	;volatile
  1013                           
  1014                           ;mcc.c: 128: OSCCON2 = 0x04;
  1015  001186  0E04               	movlw	4
  1016  001188  6ED2               	movwf	4050,c	;volatile
  1017                           
  1018                           ;mcc.c: 130: OSCTUNE = 0x00;
  1019  00118A  0E00               	movlw	0
  1020  00118C  6E9B               	movwf	3995,c	;volatile
  1021  00118E  0012               	return		;funcret
  1022  001190                     __end_of_OSCILLATOR_Initialize:
  1023                           	opt stack 0
  1024                           tblptru	equ	0xFF8
  1025                           tblptrh	equ	0xFF7
  1026                           tblptrl	equ	0xFF6
  1027                           tablat	equ	0xFF5
  1028                           intcon	equ	0xFF2
  1029                           intcon2	equ	0xFF1
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           
  1033 ;; *************** function _INTERRUPT_Initialize *****************
  1034 ;; Defined at:
  1035 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		None
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    4
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_SYSTEM_Initialize
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text6
  1064  0011BA                     __ptext6:
  1065                           	opt stack 0
  1066  0011BA                     _INTERRUPT_Initialize:
  1067                           	opt stack 25
  1068                           
  1069                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1070                           
  1071                           ;incstack = 0
  1072  0011BA  9ED0               	bcf	4048,7,c	;volatile
  1073  0011BC  0012               	return		;funcret
  1074  0011BE                     __end_of_INTERRUPT_Initialize:
  1075                           	opt stack 0
  1076                           tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           intcon	equ	0xFF2
  1081                           intcon2	equ	0xFF1
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           
  1085 ;; *************** function _EUSART1_Initialize *****************
  1086 ;; Defined at:
  1087 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    4
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_SYSTEM_Initialize
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text7
  1116  00111C                     __ptext7:
  1117                           	opt stack 0
  1118  00111C                     _EUSART1_Initialize:
  1119                           	opt stack 25
  1120                           
  1121                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1122                           
  1123                           ;incstack = 0
  1124  00111C  0E08               	movlw	8
  1125  00111E  6EB8               	movwf	4024,c	;volatile
  1126                           
  1127                           ;eusart1.c: 63: RCSTA1 = 0x80;
  1128  001120  0E80               	movlw	128
  1129  001122  6EAB               	movwf	4011,c	;volatile
  1130                           
  1131                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1132  001124  0E24               	movlw	36
  1133  001126  6EAC               	movwf	4012,c	;volatile
  1134                           
  1135                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  1136  001128  0EA0               	movlw	160
  1137  00112A  6EAF               	movwf	4015,c	;volatile
  1138                           
  1139                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  1140  00112C  0E01               	movlw	1
  1141  00112E  6EB0               	movwf	4016,c	;volatile
  1142  001130  0012               	return		;funcret
  1143  001132                     __end_of_EUSART1_Initialize:
  1144                           	opt stack 0
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           intcon	equ	0xFF2
  1150                           intcon2	equ	0xFF1
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           
  1154 ;; *************** function _CCP5_Initialize *****************
  1155 ;; Defined at:
  1156 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    4
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_SYSTEM_Initialize
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text8
  1185  001148                     __ptext8:
  1186                           	opt stack 0
  1187  001148                     _CCP5_Initialize:
  1188                           	opt stack 25
  1189                           
  1190                           ;ccp5.c: 60: CCP5CON = 0x00;
  1191                           
  1192                           ;incstack = 0
  1193  001148  0E00               	movlw	0
  1194  00114A  010F               	movlb	15	; () banked
  1195  00114C  6F54               	movwf	84,b	;volatile
  1196                           
  1197                           ;ccp5.c: 62: CCPR5L = 0x00;
  1198  00114E  0E00               	movlw	0
  1199  001150  010F               	movlb	15	; () banked
  1200  001152  6F55               	movwf	85,b	;volatile
  1201                           
  1202                           ;ccp5.c: 64: CCPR5H = 0x00;
  1203  001154  0E00               	movlw	0
  1204  001156  010F               	movlb	15	; () banked
  1205  001158  6F56               	movwf	86,b	;volatile
  1206                           
  1207                           ; BSR set to: 15
  1208  00115A  0012               	return		;funcret
  1209  00115C                     __end_of_CCP5_Initialize:
  1210                           	opt stack 0
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           intcon	equ	0xFF2
  1216                           intcon2	equ	0xFF1
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           
  1220 ;; *************** function _ADC_Initialize *****************
  1221 ;; Defined at:
  1222 ;;		line 58 in file "mcc_generated_files/adc.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;Total ram usage:        0 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    4
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_SYSTEM_Initialize
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text9
  1251  001132                     __ptext9:
  1252                           	opt stack 0
  1253  001132                     _ADC_Initialize:
  1254                           	opt stack 25
  1255                           
  1256                           ;adc.c: 63: ADCON0 = 0x01;
  1257                           
  1258                           ; BSR set to: 15
  1259                           ;incstack = 0
  1260  001132  0E01               	movlw	1
  1261  001134  6EC2               	movwf	4034,c	;volatile
  1262                           
  1263                           ;adc.c: 66: ADCON1 = 0x00;
  1264  001136  0E00               	movlw	0
  1265  001138  6EC1               	movwf	4033,c	;volatile
  1266                           
  1267                           ;adc.c: 69: ADCON2 = 0x8D;
  1268  00113A  0E8D               	movlw	141
  1269  00113C  6EC0               	movwf	4032,c	;volatile
  1270                           
  1271                           ;adc.c: 72: ADRESL = 0x00;
  1272  00113E  0E00               	movlw	0
  1273  001140  6EC3               	movwf	4035,c	;volatile
  1274                           
  1275                           ;adc.c: 75: ADRESH = 0x00;
  1276  001142  0E00               	movlw	0
  1277  001144  6EC4               	movwf	4036,c	;volatile
  1278  001146  0012               	return		;funcret
  1279  001148                     __end_of_ADC_Initialize:
  1280                           	opt stack 0
  1281                           tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           intcon	equ	0xFF2
  1286                           intcon2	equ	0xFF1
  1287                           postinc0	equ	0xFEE
  1288                           wreg	equ	0xFE8
  1289                           
  1290 ;; *************** function _MainTask *****************
  1291 ;; Defined at:
  1292 ;;		line 42 in file "tasks.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    9
  1313 ;; This function calls:
  1314 ;;		_TempUpdate
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text10
  1321  0011B0                     __ptext10:
  1322                           	opt stack 0
  1323  0011B0                     _MainTask:
  1324                           	opt stack 21
  1325                           
  1326                           ;tasks.c: 44: TempUpdate();
  1327                           
  1328                           ;incstack = 0
  1329  0011B0  EC56  F008         	call	_TempUpdate	;wreg free
  1330  0011B4  0012               	return		;funcret
  1331  0011B6                     __end_of_MainTask:
  1332                           	opt stack 0
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           intcon	equ	0xFF2
  1338                           intcon2	equ	0xFF1
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           
  1342 ;; *************** function _TempUpdate *****************
  1343 ;; Defined at:
  1344 ;;		line 110 in file "tasks.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    8
  1365 ;; This function calls:
  1366 ;;		_TempAcquisition
  1367 ;; This function is called by:
  1368 ;;		_MainTask
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text11
  1373  0010AC                     __ptext11:
  1374                           	opt stack 0
  1375  0010AC                     _TempUpdate:
  1376                           	opt stack 21
  1377                           
  1378                           ;tasks.c: 112: if (TempCounter > 10*10*10*1)
  1379                           
  1380                           ;incstack = 0
  1381  0010AC  0EE9               	movlw	233
  1382  0010AE  0100               	movlb	0	; () banked
  1383  0010B0  5D7F               	subwf	_TempCounter& (0+255),w,b
  1384  0010B2  0E03               	movlw	3
  1385  0010B4  0100               	movlb	0	; () banked
  1386  0010B6  5980               	subwfb	(_TempCounter+1)& (0+255),w,b
  1387  0010B8  A0D8               	btfss	status,0,c
  1388  0010BA  0012               	return	
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;tasks.c: 113: {
  1392                           ;tasks.c: 114: TempAcquisition();
  1393  0010BC  EC79  F005         	call	_TempAcquisition	;wreg free
  1394                           
  1395                           ;tasks.c: 115: TempCounter = 0;
  1396  0010C0  0E00               	movlw	0
  1397  0010C2  0100               	movlb	0	; () banked
  1398  0010C4  6F80               	movwf	(_TempCounter+1)& (0+255),b
  1399  0010C6  0E00               	movlw	0
  1400  0010C8  6F7F               	movwf	_TempCounter& (0+255),b
  1401  0010CA  0012               	return	
  1402  0010CC                     __end_of_TempUpdate:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           intcon	equ	0xFF2
  1409                           intcon2	equ	0xFF1
  1410                           postinc0	equ	0xFEE
  1411                           wreg	equ	0xFE8
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _TempAcquisition *****************
  1415 ;; Defined at:
  1416 ;;		line 118 in file "tasks.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;Total ram usage:        2 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    7
  1437 ;; This function calls:
  1438 ;;		_ADC_GetConversionResult
  1439 ;;		_ADC_IsConversionDone
  1440 ;;		_ADC_StartConversion
  1441 ;;		_PID_Control
  1442 ;;		___ftdiv
  1443 ;;		___ftmul
  1444 ;;		___fttol
  1445 ;;		___lwtoft
  1446 ;; This function is called by:
  1447 ;;		_TempUpdate
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text12
  1452  000AF2                     __ptext12:
  1453                           	opt stack 0
  1454  000AF2                     _TempAcquisition:
  1455                           	opt stack 21
  1456  000AF2                     l2425:
  1457  000AF2  ECC8  F008         	call	_ADC_IsConversionDone	;wreg free
  1458  000AF6  0900               	iorlw	0
  1459  000AF8  B4D8               	btfsc	status,2,c
  1460  000AFA  D7FB               	goto	l2425
  1461                           
  1462                           ;tasks.c: 128: TEMPERATURA = ADC_GetConversionResult();
  1463  000AFC  ECAE  F008         	call	_ADC_GetConversionResult	;wreg free
  1464  000B00  C010  F06F         	movff	?_ADC_GetConversionResult,TempAcquisition@TEMPERATURA
  1465  000B04  C011  F070         	movff	?_ADC_GetConversionResult+1,TempAcquisition@TEMPERATURA+1
  1466                           
  1467                           ;tasks.c: 130: ADC_StartConversion();
  1468  000B08  ECDF  F008         	call	_ADC_StartConversion	;wreg free
  1469                           
  1470                           ;tasks.c: 132: TEMP_FLOAT = (((float)(TEMPERATURA))*5)/1024;
  1471  000B0C  0E00               	movlw	0
  1472  000B0E  6E1E               	movwf	___ftmul@f2,c
  1473  000B10  0EA0               	movlw	160
  1474  000B12  6E1F               	movwf	___ftmul@f2+1,c
  1475  000B14  0E40               	movlw	64
  1476  000B16  6E20               	movwf	___ftmul@f2+2,c
  1477  000B18  C06F  F018         	movff	TempAcquisition@TEMPERATURA,___lwtoft@c
  1478  000B1C  C070  F019         	movff	TempAcquisition@TEMPERATURA+1,___lwtoft@c+1
  1479  000B20  EC21  F008         	call	___lwtoft	;wreg free
  1480  000B24  C018  F01B         	movff	?___lwtoft,___ftmul@f1
  1481  000B28  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
  1482  000B2C  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
  1483  000B30  EC13  F004         	call	___ftmul	;wreg free
  1484  000B34  C01B  F02A         	movff	?___ftmul,___ftdiv@f1
  1485  000B38  C01C  F02B         	movff	?___ftmul+1,___ftdiv@f1+1
  1486  000B3C  C01D  F02C         	movff	?___ftmul+2,___ftdiv@f1+2
  1487  000B40  0E00               	movlw	0
  1488  000B42  6E2D               	movwf	___ftdiv@f2,c
  1489  000B44  0E80               	movlw	128
  1490  000B46  6E2E               	movwf	___ftdiv@f2+1,c
  1491  000B48  0E44               	movlw	68
  1492  000B4A  6E2F               	movwf	___ftdiv@f2+2,c
  1493  000B4C  EC06  F005         	call	___ftdiv	;wreg free
  1494  000B50  C02A  F066         	movff	?___ftdiv,_TEMP_FLOAT
  1495  000B54  C02B  F067         	movff	?___ftdiv+1,_TEMP_FLOAT+1
  1496  000B58  C02C  F068         	movff	?___ftdiv+2,_TEMP_FLOAT+2
  1497                           
  1498                           ;tasks.c: 133: TEMP_FLOAT = (TEMP_FLOAT/0.08)*100;
  1499  000B5C  0ED7               	movlw	215
  1500  000B5E  6E2D               	movwf	___ftdiv@f2,c
  1501  000B60  0EA3               	movlw	163
  1502  000B62  6E2E               	movwf	___ftdiv@f2+1,c
  1503  000B64  0E3D               	movlw	61
  1504  000B66  6E2F               	movwf	___ftdiv@f2+2,c
  1505  000B68  C066  F02A         	movff	_TEMP_FLOAT,___ftdiv@f1
  1506  000B6C  C067  F02B         	movff	_TEMP_FLOAT+1,___ftdiv@f1+1
  1507  000B70  C068  F02C         	movff	_TEMP_FLOAT+2,___ftdiv@f1+2
  1508  000B74  EC06  F005         	call	___ftdiv	;wreg free
  1509  000B78  C02A  F01B         	movff	?___ftdiv,___ftmul@f1
  1510  000B7C  C02B  F01C         	movff	?___ftdiv+1,___ftmul@f1+1
  1511  000B80  C02C  F01D         	movff	?___ftdiv+2,___ftmul@f1+2
  1512  000B84  0E00               	movlw	0
  1513  000B86  6E1E               	movwf	___ftmul@f2,c
  1514  000B88  0EC8               	movlw	200
  1515  000B8A  6E1F               	movwf	___ftmul@f2+1,c
  1516  000B8C  0E42               	movlw	66
  1517  000B8E  6E20               	movwf	___ftmul@f2+2,c
  1518  000B90  EC13  F004         	call	___ftmul	;wreg free
  1519  000B94  C01B  F066         	movff	?___ftmul,_TEMP_FLOAT
  1520  000B98  C01C  F067         	movff	?___ftmul+1,_TEMP_FLOAT+1
  1521  000B9C  C01D  F068         	movff	?___ftmul+2,_TEMP_FLOAT+2
  1522                           
  1523                           ;tasks.c: 135: DutyPeltier = PID_Control((int)(TEMP_FLOAT));;
  1524  000BA0  C066  F039         	movff	_TEMP_FLOAT,___fttol@f1
  1525  000BA4  C067  F03A         	movff	_TEMP_FLOAT+1,___fttol@f1+1
  1526  000BA8  C068  F03B         	movff	_TEMP_FLOAT+2,___fttol@f1+2
  1527  000BAC  EC63  F002         	call	___fttol	;wreg free
  1528  000BB0  C039  F09B         	movff	?___fttol,_TempAcquisition$1463
  1529  000BB4  C03A  F09C         	movff	?___fttol+1,_TempAcquisition$1463+1
  1530                           
  1531                           ;tasks.c: 135: DutyPeltier = PID_Control((int)(TEMP_FLOAT));;
  1532  000BB8  C09B  F03D         	movff	_TempAcquisition$1463,PID_Control@newInput
  1533  000BBC  C09C  F03E         	movff	_TempAcquisition$1463+1,PID_Control@newInput+1
  1534  000BC0  EC47  F000         	call	_PID_Control	;wreg free
  1535  000BC4  C03D  F07D         	movff	?_PID_Control,_DutyPeltier
  1536  000BC8  C03E  F07E         	movff	?_PID_Control+1,_DutyPeltier+1
  1537  000BCC  0012               	return		;funcret
  1538  000BCE                     __end_of_TempAcquisition:
  1539                           	opt stack 0
  1540                           tblptru	equ	0xFF8
  1541                           tblptrh	equ	0xFF7
  1542                           tblptrl	equ	0xFF6
  1543                           tablat	equ	0xFF5
  1544                           intcon	equ	0xFF2
  1545                           intcon2	equ	0xFF1
  1546                           postinc0	equ	0xFEE
  1547                           wreg	equ	0xFE8
  1548                           status	equ	0xFD8
  1549                           
  1550 ;; *************** function ___lwtoft *****************
  1551 ;; Defined at:
  1552 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  c               2   23[COMRAM] unsigned int 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  3   23[COMRAM] float 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1566 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;Total ram usage:        3 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    5
  1573 ;; This function calls:
  1574 ;;		___ftpack
  1575 ;; This function is called by:
  1576 ;;		_TempAcquisition
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text13
  1581  001042                     __ptext13:
  1582                           	opt stack 0
  1583  001042                     ___lwtoft:
  1584                           	opt stack 22
  1585                           
  1586                           ;incstack = 0
  1587  001042  C018  F010         	movff	___lwtoft@c,___ftpack@arg
  1588  001046  C019  F011         	movff	___lwtoft@c+1,___ftpack@arg+1
  1589  00104A  6A12               	clrf	___ftpack@arg+2,c
  1590  00104C  0E8E               	movlw	142
  1591  00104E  6E13               	movwf	___ftpack@exp,c
  1592  001050  0E00               	movlw	0
  1593  001052  6E14               	movwf	___ftpack@sign,c
  1594  001054  EC45  F006         	call	___ftpack	;wreg free
  1595  001058  C010  F018         	movff	?___ftpack,?___lwtoft
  1596  00105C  C011  F019         	movff	?___ftpack+1,?___lwtoft+1
  1597  001060  C012  F01A         	movff	?___ftpack+2,?___lwtoft+2
  1598  001064  0012               	return	
  1599  001066                     __end_of___lwtoft:
  1600                           	opt stack 0
  1601                           tblptru	equ	0xFF8
  1602                           tblptrh	equ	0xFF7
  1603                           tblptrl	equ	0xFF6
  1604                           tablat	equ	0xFF5
  1605                           intcon	equ	0xFF2
  1606                           intcon2	equ	0xFF1
  1607                           postinc0	equ	0xFEE
  1608                           wreg	equ	0xFE8
  1609                           status	equ	0xFD8
  1610                           
  1611 ;; *************** function _PID_Control *****************
  1612 ;; Defined at:
  1613 ;;		line 22 in file "PID.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  newInput        2   60[COMRAM] int 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  error           3   19[BANK0 ] int 
  1618 ;;  dInput          3   13[BANK0 ] int 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2   60[COMRAM] int 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;Total ram usage:       13 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    6
  1635 ;; This function calls:
  1636 ;;		___awtoft
  1637 ;;		___ftadd
  1638 ;;		___ftge
  1639 ;;		___ftmul
  1640 ;;		___ftneg
  1641 ;;		___fttol
  1642 ;; This function is called by:
  1643 ;;		_TempAcquisition
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text14
  1648  00008E                     __ptext14:
  1649                           	opt stack 0
  1650  00008E                     _PID_Control:
  1651                           	opt stack 21
  1652                           
  1653                           ;PID.c: 24: double error, dInput;
  1654                           ;PID.c: 26: Input = newInput;
  1655                           
  1656                           ;incstack = 0
  1657  00008E  C03D  F06D         	movff	PID_Control@newInput,_Input
  1658  000092  C03E  F06E         	movff	PID_Control@newInput+1,_Input+1
  1659                           
  1660                           ;PID.c: 27: if(!inAuto) return PIDConfig.Min;
  1661  000096  504F               	movf	_inAuto,w,c
  1662  000098  A4D8               	btfss	status,2,c
  1663  00009A  D005               	goto	l2351
  1664  00009C  C03F  F03D         	movff	_PIDConfig,?_PID_Control	;volatile
  1665  0000A0  C040  F03E         	movff	_PIDConfig+1,?_PID_Control+1	;volatile
  1666  0000A4  0012               	return	
  1667  0000A6                     l2351:
  1668                           
  1669                           ;PID.c: 31: {
  1670                           ;PID.c: 33: error = PIDConfig.SetPoint - Input;
  1671  0000A6  C06D  F018         	movff	_Input,___awtoft@c
  1672  0000AA  C06E  F019         	movff	_Input+1,___awtoft@c+1
  1673  0000AE  ECC9  F007         	call	___awtoft	;wreg free
  1674  0000B2  C018  F02A         	movff	?___awtoft,___ftneg@f1
  1675  0000B6  C019  F02B         	movff	?___awtoft+1,___ftneg@f1+1
  1676  0000BA  C01A  F02C         	movff	?___awtoft+2,___ftneg@f1+2
  1677  0000BE  EC33  F008         	call	___ftneg	;wreg free
  1678  0000C2  C02A  F02D         	movff	?___ftneg,___ftadd@f1
  1679  0000C6  C02B  F02E         	movff	?___ftneg+1,___ftadd@f1+1
  1680  0000CA  C02C  F02F         	movff	?___ftneg+2,___ftadd@f1+2
  1681  0000CE  C04C  F030         	movff	_PIDConfig+13,___ftadd@f2	;volatile
  1682  0000D2  C04D  F031         	movff	_PIDConfig+14,___ftadd@f2+1	;volatile
  1683  0000D6  C04E  F032         	movff	_PIDConfig+15,___ftadd@f2+2	;volatile
  1684  0000DA  EC8D  F001         	call	___ftadd	;wreg free
  1685  0000DE  C02D  F098         	movff	?___ftadd,PID_Control@error
  1686  0000E2  C02E  F099         	movff	?___ftadd+1,PID_Control@error+1
  1687  0000E6  C02F  F09A         	movff	?___ftadd+2,PID_Control@error+2
  1688                           
  1689                           ;PID.c: 34: ITerm += (PIDConfig.Ki * error);
  1690  0000EA  C063  F02D         	movff	_ITerm,___ftadd@f1
  1691  0000EE  C064  F02E         	movff	_ITerm+1,___ftadd@f1+1
  1692  0000F2  C065  F02F         	movff	_ITerm+2,___ftadd@f1+2
  1693  0000F6  C098  F01E         	movff	PID_Control@error,___ftmul@f2
  1694  0000FA  C099  F01F         	movff	PID_Control@error+1,___ftmul@f2+1
  1695  0000FE  C09A  F020         	movff	PID_Control@error+2,___ftmul@f2+2
  1696  000102  C046  F01B         	movff	_PIDConfig+7,___ftmul@f1	;volatile
  1697  000106  C047  F01C         	movff	_PIDConfig+8,___ftmul@f1+1	;volatile
  1698  00010A  C048  F01D         	movff	_PIDConfig+9,___ftmul@f1+2	;volatile
  1699  00010E  EC13  F004         	call	___ftmul	;wreg free
  1700  000112  C01B  F030         	movff	?___ftmul,___ftadd@f2
  1701  000116  C01C  F031         	movff	?___ftmul+1,___ftadd@f2+1
  1702  00011A  C01D  F032         	movff	?___ftmul+2,___ftadd@f2+2
  1703  00011E  EC8D  F001         	call	___ftadd	;wreg free
  1704  000122  C02D  F063         	movff	?___ftadd,_ITerm
  1705  000126  C02E  F064         	movff	?___ftadd+1,_ITerm+1
  1706  00012A  C02F  F065         	movff	?___ftadd+2,_ITerm+2
  1707                           
  1708                           ;PID.c: 35: if (ITerm > PIDConfig.Max) ITerm = PIDConfig.Max;
  1709  00012E  C041  F018         	movff	_PIDConfig+2,___awtoft@c	;volatile
  1710  000132  C042  F019         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  1711  000136  ECC9  F007         	call	___awtoft	;wreg free
  1712  00013A  C018  F01C         	movff	?___awtoft,___ftge@ff1
  1713  00013E  C019  F01D         	movff	?___awtoft+1,___ftge@ff1+1
  1714  000142  C01A  F01E         	movff	?___awtoft+2,___ftge@ff1+2
  1715  000146  C063  F01F         	movff	_ITerm,___ftge@ff2
  1716  00014A  C064  F020         	movff	_ITerm+1,___ftge@ff2+1
  1717  00014E  C065  F021         	movff	_ITerm+2,___ftge@ff2+2
  1718  000152  EC3D  F007         	call	___ftge	;wreg free
  1719  000156  B0D8               	btfsc	status,0,c
  1720  000158  D007               	goto	l2355
  1721  00015A  C041  F018         	movff	_PIDConfig+2,___awtoft@c	;volatile
  1722  00015E  C042  F019         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  1723  000162  ECC9  F007         	call	___awtoft	;wreg free
  1724  000166  D01C               	goto	L1
  1725  000168                     l2355:
  1726                           
  1727                           ;PID.c: 36: else if (ITerm < PIDConfig.Min) ITerm = PIDConfig.Min;
  1728  000168  C063  F01C         	movff	_ITerm,___ftge@ff1
  1729  00016C  C064  F01D         	movff	_ITerm+1,___ftge@ff1+1
  1730  000170  C065  F01E         	movff	_ITerm+2,___ftge@ff1+2
  1731  000174  C03F  F018         	movff	_PIDConfig,___awtoft@c	;volatile
  1732  000178  C040  F019         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  1733  00017C  ECC9  F007         	call	___awtoft	;wreg free
  1734  000180  C018  F01F         	movff	?___awtoft,___ftge@ff2
  1735  000184  C019  F020         	movff	?___awtoft+1,___ftge@ff2+1
  1736  000188  C01A  F021         	movff	?___awtoft+2,___ftge@ff2+2
  1737  00018C  EC3D  F007         	call	___ftge	;wreg free
  1738  000190  B0D8               	btfsc	status,0,c
  1739  000192  D00C               	goto	l364
  1740  000194  C03F  F018         	movff	_PIDConfig,___awtoft@c	;volatile
  1741  000198  C040  F019         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  1742  00019C  ECC9  F007         	call	___awtoft	;wreg free
  1743  0001A0                     L1:
  1744  0001A0  C018  F063         	movff	?___awtoft,_ITerm
  1745  0001A4  C019  F064         	movff	?___awtoft+1,_ITerm+1
  1746  0001A8  C01A  F065         	movff	?___awtoft+2,_ITerm+2
  1747  0001AC                     l364:
  1748                           
  1749                           ;PID.c: 37: dInput = (Input - lastInput);
  1750  0001AC  C06D  F018         	movff	_Input,___awtoft@c
  1751  0001B0  C06E  F019         	movff	_Input+1,___awtoft@c+1
  1752  0001B4  ECC9  F007         	call	___awtoft	;wreg free
  1753  0001B8  C018  F02D         	movff	?___awtoft,___ftadd@f1
  1754  0001BC  C019  F02E         	movff	?___awtoft+1,___ftadd@f1+1
  1755  0001C0  C01A  F02F         	movff	?___awtoft+2,___ftadd@f1+2
  1756  0001C4  C060  F02A         	movff	_lastInput,___ftneg@f1
  1757  0001C8  C061  F02B         	movff	_lastInput+1,___ftneg@f1+1
  1758  0001CC  C062  F02C         	movff	_lastInput+2,___ftneg@f1+2
  1759  0001D0  EC33  F008         	call	___ftneg	;wreg free
  1760  0001D4  C02A  F030         	movff	?___ftneg,___ftadd@f2
  1761  0001D8  C02B  F031         	movff	?___ftneg+1,___ftadd@f2+1
  1762  0001DC  C02C  F032         	movff	?___ftneg+2,___ftadd@f2+2
  1763  0001E0  EC8D  F001         	call	___ftadd	;wreg free
  1764  0001E4  C02D  F092         	movff	?___ftadd,PID_Control@dInput
  1765  0001E8  C02E  F093         	movff	?___ftadd+1,PID_Control@dInput+1
  1766  0001EC  C02F  F094         	movff	?___ftadd+2,PID_Control@dInput+2
  1767                           
  1768                           ;PID.c: 40: Output = (int)(PIDConfig.Kp * error + ITerm - PIDConfig.Kd * dInput);
  1769  0001F0  C092  F01E         	movff	PID_Control@dInput,___ftmul@f2
  1770  0001F4  C093  F01F         	movff	PID_Control@dInput+1,___ftmul@f2+1
  1771  0001F8  C094  F020         	movff	PID_Control@dInput+2,___ftmul@f2+2
  1772  0001FC  C049  F01B         	movff	_PIDConfig+10,___ftmul@f1	;volatile
  1773  000200  C04A  F01C         	movff	_PIDConfig+11,___ftmul@f1+1	;volatile
  1774  000204  C04B  F01D         	movff	_PIDConfig+12,___ftmul@f1+2	;volatile
  1775  000208  EC13  F004         	call	___ftmul	;wreg free
  1776  00020C  C01B  F02A         	movff	?___ftmul,___ftneg@f1
  1777  000210  C01C  F02B         	movff	?___ftmul+1,___ftneg@f1+1
  1778  000214  C01D  F02C         	movff	?___ftmul+2,___ftneg@f1+2
  1779  000218  EC33  F008         	call	___ftneg	;wreg free
  1780  00021C  C02A  F030         	movff	?___ftneg,___ftadd@f2
  1781  000220  C02B  F031         	movff	?___ftneg+1,___ftadd@f2+1
  1782  000224  C02C  F032         	movff	?___ftneg+2,___ftadd@f2+2
  1783  000228  C098  F01E         	movff	PID_Control@error,___ftmul@f2
  1784  00022C  C099  F01F         	movff	PID_Control@error+1,___ftmul@f2+1
  1785  000230  C09A  F020         	movff	PID_Control@error+2,___ftmul@f2+2
  1786  000234  C043  F01B         	movff	_PIDConfig+4,___ftmul@f1	;volatile
  1787  000238  C044  F01C         	movff	_PIDConfig+5,___ftmul@f1+1	;volatile
  1788  00023C  C045  F01D         	movff	_PIDConfig+6,___ftmul@f1+2	;volatile
  1789  000240  EC13  F004         	call	___ftmul	;wreg free
  1790  000244  C01B  F02D         	movff	?___ftmul,___ftadd@f1
  1791  000248  C01C  F02E         	movff	?___ftmul+1,___ftadd@f1+1
  1792  00024C  C01D  F02F         	movff	?___ftmul+2,___ftadd@f1+2
  1793  000250  EC8D  F001         	call	___ftadd	;wreg free
  1794  000254  C02D  F095         	movff	?___ftadd,_PID_Control$1464
  1795  000258  C02E  F096         	movff	?___ftadd+1,_PID_Control$1464+1
  1796  00025C  C02F  F097         	movff	?___ftadd+2,_PID_Control$1464+2
  1797                           
  1798                           ;PID.c: 40: Output = (int)(PIDConfig.Kp * error + ITerm - PIDConfig.Kd * dInput);
  1799  000260  C063  F030         	movff	_ITerm,___ftadd@f2
  1800  000264  C064  F031         	movff	_ITerm+1,___ftadd@f2+1
  1801  000268  C065  F032         	movff	_ITerm+2,___ftadd@f2+2
  1802  00026C  C095  F02D         	movff	_PID_Control$1464,___ftadd@f1
  1803  000270  C096  F02E         	movff	_PID_Control$1464+1,___ftadd@f1+1
  1804  000274  C097  F02F         	movff	_PID_Control$1464+2,___ftadd@f1+2
  1805  000278  EC8D  F001         	call	___ftadd	;wreg free
  1806  00027C  C02D  F039         	movff	?___ftadd,___fttol@f1
  1807  000280  C02E  F03A         	movff	?___ftadd+1,___fttol@f1+1
  1808  000284  C02F  F03B         	movff	?___ftadd+2,___fttol@f1+2
  1809  000288  EC63  F002         	call	___fttol	;wreg free
  1810  00028C  C039  F06B         	movff	?___fttol,_Output
  1811  000290  C03A  F06C         	movff	?___fttol+1,_Output+1
  1812                           
  1813                           ;PID.c: 41: if (Output > PIDConfig.Max) Output = PIDConfig.Max;
  1814  000294  0100               	movlb	0	; () banked
  1815  000296  516B               	movf	_Output& (0+255),w,b
  1816  000298  5C41               	subwf	_PIDConfig+2,w,c	;volatile
  1817  00029A  5042               	movf	_PIDConfig+3,w,c	;volatile
  1818  00029C  0A80               	xorlw	128
  1819  00029E  0100               	movlb	0	; () banked
  1820  0002A0  6F90               	movwf	??_PID_Control& (0+255),b
  1821  0002A2  0100               	movlb	0	; () banked
  1822  0002A4  516C               	movf	(_Output+1)& (0+255),w,b
  1823  0002A6  0A80               	xorlw	128
  1824  0002A8  0100               	movlb	0	; () banked
  1825  0002AA  5990               	subwfb	??_PID_Control& (0+255),w,b
  1826  0002AC  B0D8               	btfsc	status,0,c
  1827  0002AE  D005               	goto	l2363
  1828                           
  1829                           ; BSR set to: 0
  1830  0002B0  C041  F06B         	movff	_PIDConfig+2,_Output	;volatile
  1831  0002B4  C042  F06C         	movff	_PIDConfig+3,_Output+1	;volatile
  1832  0002B8  D012               	goto	l2367
  1833  0002BA                     l2363:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;PID.c: 42: else if(Output < PIDConfig.Min) Output = PIDConfig.Min;
  1837  0002BA  503F               	movf	_PIDConfig,w,c	;volatile
  1838  0002BC  0100               	movlb	0	; () banked
  1839  0002BE  5D6B               	subwf	_Output& (0+255),w,b
  1840  0002C0  0100               	movlb	0	; () banked
  1841  0002C2  516C               	movf	(_Output+1)& (0+255),w,b
  1842  0002C4  0A80               	xorlw	128
  1843  0002C6  0100               	movlb	0	; () banked
  1844  0002C8  6F90               	movwf	??_PID_Control& (0+255),b
  1845  0002CA  5040               	movf	_PIDConfig+1,w,c	;volatile
  1846  0002CC  0A80               	xorlw	128
  1847  0002CE  0100               	movlb	0	; () banked
  1848  0002D0  5990               	subwfb	??_PID_Control& (0+255),w,b
  1849  0002D2  B0D8               	btfsc	status,0,c
  1850  0002D4  D004               	goto	l2367
  1851                           
  1852                           ; BSR set to: 0
  1853  0002D6  C03F  F06B         	movff	_PIDConfig,_Output	;volatile
  1854  0002DA  C040  F06C         	movff	_PIDConfig+1,_Output+1	;volatile
  1855  0002DE                     l2367:
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;PID.c: 45: lastInput = Input;
  1859  0002DE  C06D  F018         	movff	_Input,___awtoft@c
  1860  0002E2  C06E  F019         	movff	_Input+1,___awtoft@c+1
  1861  0002E6  ECC9  F007         	call	___awtoft	;wreg free
  1862  0002EA  C018  F060         	movff	?___awtoft,_lastInput
  1863  0002EE  C019  F061         	movff	?___awtoft+1,_lastInput+1
  1864  0002F2  C01A  F062         	movff	?___awtoft+2,_lastInput+2
  1865                           
  1866                           ;PID.c: 47: }
  1867                           ;PID.c: 48: return (PIDConfig.Max - Output);
  1868  0002F6  C06B  F090         	movff	_Output,??_PID_Control
  1869  0002FA  C06C  F091         	movff	_Output+1,??_PID_Control+1
  1870  0002FE  0100               	movlb	0	; () banked
  1871  000300  1F90               	comf	??_PID_Control& (0+255),f,b
  1872  000302  1F91               	comf	(??_PID_Control+1)& (0+255),f,b
  1873  000304  4B90               	infsnz	??_PID_Control& (0+255),f,b
  1874  000306  2B91               	incf	(??_PID_Control+1)& (0+255),f,b
  1875  000308  5041               	movf	_PIDConfig+2,w,c	;volatile
  1876  00030A  0100               	movlb	0	; () banked
  1877  00030C  2590               	addwf	??_PID_Control& (0+255),w,b
  1878  00030E  6E3D               	movwf	?_PID_Control,c
  1879  000310  5042               	movf	_PIDConfig+3,w,c	;volatile
  1880  000312  0100               	movlb	0	; () banked
  1881  000314  2191               	addwfc	(??_PID_Control+1)& (0+255),w,b
  1882  000316  6E3E               	movwf	?_PID_Control+1,c
  1883  000318  0012               	return	
  1884  00031A                     __end_of_PID_Control:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           intcon	equ	0xFF2
  1891                           intcon2	equ	0xFF1
  1892                           postinc0	equ	0xFEE
  1893                           wreg	equ	0xFE8
  1894                           status	equ	0xFD8
  1895                           
  1896 ;; *************** function ___fttol *****************
  1897 ;; Defined at:
  1898 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\fttol.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  f1              3   56[COMRAM] float 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  lval            4    6[BANK0 ] unsigned long 
  1903 ;;  exp1            1   10[BANK0 ] unsigned char 
  1904 ;;  sign1           1    5[BANK0 ] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  4   56[COMRAM] long 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;Total ram usage:       15 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    4
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_TempAcquisition
  1925 ;;		_PID_Control
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text15
  1930  0004C6                     __ptext15:
  1931                           	opt stack 0
  1932  0004C6                     ___fttol:
  1933                           	opt stack 23
  1934                           
  1935                           ;incstack = 0
  1936  0004C6  C03B  F085         	movff	___fttol@f1+2,??___fttol
  1937  0004CA  0100               	movlb	0	; () banked
  1938  0004CC  6B86               	clrf	(??___fttol+1)& (0+255),b
  1939  0004CE  6B87               	clrf	(??___fttol+2)& (0+255),b
  1940  0004D0  343A               	rlcf	___fttol@f1+1,w,c
  1941  0004D2  0100               	movlb	0	; () banked
  1942  0004D4  3785               	rlcf	??___fttol& (0+255),f,b
  1943  0004D6  E301               	bnc	u2371
  1944  0004D8  8186               	bsf	(??___fttol+1)& (0+255),0,b
  1945  0004DA                     u2371:
  1946  0004DA  0100               	movlb	0	; () banked
  1947  0004DC  5185               	movf	??___fttol& (0+255),w,b
  1948  0004DE  0100               	movlb	0	; () banked
  1949  0004E0  6F8F               	movwf	___fttol@exp1& (0+255),b
  1950  0004E2  0100               	movlb	0	; () banked
  1951  0004E4  518F               	movf	___fttol@exp1& (0+255),w,b
  1952  0004E6  A4D8               	btfss	status,2,c
  1953  0004E8  D009               	goto	l2295
  1954                           
  1955                           ; BSR set to: 0
  1956  0004EA  0E00               	movlw	0
  1957  0004EC  6E39               	movwf	?___fttol,c
  1958  0004EE  0E00               	movlw	0
  1959  0004F0  6E3A               	movwf	?___fttol+1,c
  1960  0004F2  0E00               	movlw	0
  1961  0004F4  6E3B               	movwf	?___fttol+2,c
  1962  0004F6  0E00               	movlw	0
  1963  0004F8  6E3C               	movwf	?___fttol+3,c
  1964                           
  1965                           ; BSR set to: 0
  1966  0004FA  0012               	return	
  1967  0004FC                     l2295:
  1968                           
  1969                           ; BSR set to: 0
  1970  0004FC  0E17               	movlw	23
  1971  0004FE  0100               	movlb	0	; () banked
  1972  000500  6F85               	movwf	??___fttol& (0+255),b
  1973  000502  C039  F086         	movff	___fttol@f1,??___fttol+1
  1974  000506  C03A  F087         	movff	___fttol@f1+1,??___fttol+2
  1975  00050A  C03B  F088         	movff	___fttol@f1+2,??___fttol+3
  1976  00050E  0100               	movlb	0	; () banked
  1977  000510  2985               	incf	??___fttol& (0+255),w,b
  1978  000512  0100               	movlb	0	; () banked
  1979  000514  6F89               	movwf	(??___fttol+4)& (0+255),b
  1980  000516  D005               	goto	u2390
  1981  000518                     u2395:
  1982  000518  0100               	movlb	0	; () banked
  1983  00051A  90D8               	bcf	status,0,c
  1984  00051C  3388               	rrcf	(??___fttol+3)& (0+255),f,b
  1985  00051E  3387               	rrcf	(??___fttol+2)& (0+255),f,b
  1986  000520  3386               	rrcf	(??___fttol+1)& (0+255),f,b
  1987  000522                     u2390:
  1988  000522  0100               	movlb	0	; () banked
  1989  000524  2F89               	decfsz	(??___fttol+4)& (0+255),f,b
  1990  000526  D7F8               	goto	u2395
  1991  000528  0100               	movlb	0	; () banked
  1992  00052A  5186               	movf	(??___fttol+1)& (0+255),w,b
  1993  00052C  0100               	movlb	0	; () banked
  1994  00052E  6F8A               	movwf	___fttol@sign1& (0+255),b
  1995                           
  1996                           ; BSR set to: 0
  1997  000530  8E3A               	bsf	___fttol@f1+1,7,c
  1998                           
  1999                           ; BSR set to: 0
  2000  000532  0EFF               	movlw	255
  2001  000534  1639               	andwf	___fttol@f1,f,c
  2002  000536  0EFF               	movlw	255
  2003  000538  163A               	andwf	___fttol@f1+1,f,c
  2004  00053A  0E00               	movlw	0
  2005  00053C  163B               	andwf	___fttol@f1+2,f,c
  2006                           
  2007                           ; BSR set to: 0
  2008  00053E  5039               	movf	___fttol@f1,w,c
  2009  000540  0100               	movlb	0	; () banked
  2010  000542  6F8B               	movwf	___fttol@lval& (0+255),b
  2011  000544  503A               	movf	___fttol@f1+1,w,c
  2012  000546  0100               	movlb	0	; () banked
  2013  000548  6F8C               	movwf	(___fttol@lval+1)& (0+255),b
  2014  00054A  503B               	movf	___fttol@f1+2,w,c
  2015  00054C  0100               	movlb	0	; () banked
  2016  00054E  6F8D               	movwf	(___fttol@lval+2)& (0+255),b
  2017  000550  0100               	movlb	0	; () banked
  2018  000552  6B8E               	clrf	(___fttol@lval+3)& (0+255),b
  2019                           
  2020                           ; BSR set to: 0
  2021  000554  0E8E               	movlw	142
  2022  000556  0100               	movlb	0	; () banked
  2023  000558  5F8F               	subwf	___fttol@exp1& (0+255),f,b
  2024                           
  2025                           ; BSR set to: 0
  2026  00055A  0100               	movlb	0	; () banked
  2027  00055C  AF8F               	btfss	___fttol@exp1& (0+255),7,b
  2028  00055E  D019               	goto	l2317
  2029                           
  2030                           ; BSR set to: 0
  2031  000560  0100               	movlb	0	; () banked
  2032  000562  518F               	movf	___fttol@exp1& (0+255),w,b
  2033  000564  0A80               	xorlw	128
  2034  000566  0F8F               	addlw	143
  2035  000568  B0D8               	btfsc	status,0,c
  2036  00056A  D009               	goto	l2313
  2037                           
  2038                           ; BSR set to: 0
  2039  00056C  0E00               	movlw	0
  2040  00056E  6E39               	movwf	?___fttol,c
  2041  000570  0E00               	movlw	0
  2042  000572  6E3A               	movwf	?___fttol+1,c
  2043  000574  0E00               	movlw	0
  2044  000576  6E3B               	movwf	?___fttol+2,c
  2045  000578  0E00               	movlw	0
  2046  00057A  6E3C               	movwf	?___fttol+3,c
  2047                           
  2048                           ; BSR set to: 0
  2049  00057C  0012               	return	
  2050  00057E                     l2313:
  2051                           
  2052                           ; BSR set to: 0
  2053  00057E  0100               	movlb	0	; () banked
  2054  000580  90D8               	bcf	status,0,c
  2055  000582  338E               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2056  000584  338D               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2057  000586  338C               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2058  000588  338B               	rrcf	___fttol@lval& (0+255),f,b
  2059                           
  2060                           ; BSR set to: 0
  2061  00058A  0100               	movlb	0	; () banked
  2062  00058C  3F8F               	incfsz	___fttol@exp1& (0+255),f,b
  2063  00058E  D7F7               	goto	l2313
  2064                           
  2065                           ; BSR set to: 0
  2066  000590  D01A               	goto	l2327
  2067  000592                     l2317:
  2068                           
  2069                           ; BSR set to: 0
  2070  000592  0E17               	movlw	23
  2071  000594  0100               	movlb	0	; () banked
  2072  000596  658F               	cpfsgt	___fttol@exp1& (0+255),b
  2073  000598  D011               	goto	l2325
  2074                           
  2075                           ; BSR set to: 0
  2076  00059A  0E00               	movlw	0
  2077  00059C  6E39               	movwf	?___fttol,c
  2078  00059E  0E00               	movlw	0
  2079  0005A0  6E3A               	movwf	?___fttol+1,c
  2080  0005A2  0E00               	movlw	0
  2081  0005A4  6E3B               	movwf	?___fttol+2,c
  2082  0005A6  0E00               	movlw	0
  2083  0005A8  6E3C               	movwf	?___fttol+3,c
  2084                           
  2085                           ; BSR set to: 0
  2086  0005AA  0012               	return	
  2087  0005AC                     l2323:
  2088                           
  2089                           ; BSR set to: 0
  2090  0005AC  0100               	movlb	0	; () banked
  2091  0005AE  90D8               	bcf	status,0,c
  2092  0005B0  378B               	rlcf	___fttol@lval& (0+255),f,b
  2093  0005B2  378C               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2094  0005B4  378D               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2095  0005B6  378E               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2096  0005B8  0100               	movlb	0	; () banked
  2097  0005BA  078F               	decf	___fttol@exp1& (0+255),f,b
  2098  0005BC                     l2325:
  2099                           
  2100                           ; BSR set to: 0
  2101  0005BC  0100               	movlb	0	; () banked
  2102  0005BE  518F               	movf	___fttol@exp1& (0+255),w,b
  2103  0005C0  0100               	movlb	0	; () banked
  2104  0005C2  A4D8               	btfss	status,2,c
  2105  0005C4  D7F3               	goto	l2323
  2106  0005C6                     l2327:
  2107                           
  2108                           ; BSR set to: 0
  2109  0005C6  0100               	movlb	0	; () banked
  2110  0005C8  518A               	movf	___fttol@sign1& (0+255),w,b
  2111  0005CA  0100               	movlb	0	; () banked
  2112  0005CC  B4D8               	btfsc	status,2,c
  2113  0005CE  D009               	goto	l2331
  2114                           
  2115                           ; BSR set to: 0
  2116  0005D0  0100               	movlb	0	; () banked
  2117  0005D2  1F8E               	comf	(___fttol@lval+3)& (0+255),f,b
  2118  0005D4  1F8D               	comf	(___fttol@lval+2)& (0+255),f,b
  2119  0005D6  1F8C               	comf	(___fttol@lval+1)& (0+255),f,b
  2120  0005D8  6D8B               	negf	___fttol@lval& (0+255),b
  2121  0005DA  0E00               	movlw	0
  2122  0005DC  238C               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2123  0005DE  238D               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2124  0005E0  238E               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2125  0005E2                     l2331:
  2126                           
  2127                           ; BSR set to: 0
  2128  0005E2  C08B  F039         	movff	___fttol@lval,?___fttol
  2129  0005E6  C08C  F03A         	movff	___fttol@lval+1,?___fttol+1
  2130  0005EA  C08D  F03B         	movff	___fttol@lval+2,?___fttol+2
  2131  0005EE  C08E  F03C         	movff	___fttol@lval+3,?___fttol+3
  2132  0005F2  0012               	return	
  2133  0005F4                     __end_of___fttol:
  2134                           	opt stack 0
  2135                           tblptru	equ	0xFF8
  2136                           tblptrh	equ	0xFF7
  2137                           tblptrl	equ	0xFF6
  2138                           tablat	equ	0xFF5
  2139                           intcon	equ	0xFF2
  2140                           intcon2	equ	0xFF1
  2141                           postinc0	equ	0xFEE
  2142                           wreg	equ	0xFE8
  2143                           status	equ	0xFD8
  2144                           
  2145 ;; *************** function ___ftadd *****************
  2146 ;; Defined at:
  2147 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftadd.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  f1              3   44[COMRAM] float 
  2150 ;;  f2              3   47[COMRAM] float 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  exp1            1   55[COMRAM] unsigned char 
  2153 ;;  exp2            1   54[COMRAM] unsigned char 
  2154 ;;  sign            1   53[COMRAM] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  3   44[COMRAM] float 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2164 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;Total ram usage:       12 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    5
  2171 ;; This function calls:
  2172 ;;		___ftpack
  2173 ;; This function is called by:
  2174 ;;		_PID_Control
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text16
  2179  00031A                     __ptext16:
  2180                           	opt stack 0
  2181  00031A                     ___ftadd:
  2182                           	opt stack 21
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;incstack = 0
  2186  00031A  C02F  F033         	movff	___ftadd@f1+2,??___ftadd
  2187  00031E  6A34               	clrf	(??___ftadd+1)& (0+255),c
  2188  000320  6A35               	clrf	(??___ftadd+2)& (0+255),c
  2189  000322  342E               	rlcf	___ftadd@f1+1,w,c
  2190  000324  3633               	rlcf	??___ftadd& (0+255),f,c
  2191  000326  E301               	bnc	u2051
  2192  000328  8034               	bsf	(??___ftadd+1)& (0+255),0,c
  2193  00032A                     u2051:
  2194  00032A  5033               	movf	??___ftadd,w,c
  2195  00032C  6E38               	movwf	___ftadd@exp1,c
  2196  00032E  C032  F033         	movff	___ftadd@f2+2,??___ftadd
  2197  000332  6A34               	clrf	(??___ftadd+1)& (0+255),c
  2198  000334  6A35               	clrf	(??___ftadd+2)& (0+255),c
  2199  000336  3431               	rlcf	___ftadd@f2+1,w,c
  2200  000338  3633               	rlcf	??___ftadd& (0+255),f,c
  2201  00033A  E301               	bnc	u2061
  2202  00033C  8034               	bsf	(??___ftadd+1)& (0+255),0,c
  2203  00033E                     u2061:
  2204  00033E  5033               	movf	??___ftadd,w,c
  2205  000340  6E37               	movwf	___ftadd@exp2,c
  2206  000342  5038               	movf	___ftadd@exp1,w,c
  2207  000344  B4D8               	btfsc	status,2,c
  2208  000346  D00B               	goto	l653
  2209  000348  5037               	movf	___ftadd@exp2,w,c
  2210  00034A  5C38               	subwf	___ftadd@exp1,w,c
  2211  00034C  B0D8               	btfsc	status,0,c
  2212  00034E  D00E               	goto	l2145
  2213  000350  5038               	movf	___ftadd@exp1,w,c
  2214  000352  0800               	sublw	0
  2215  000354  2437               	addwf	___ftadd@exp2,w,c
  2216  000356  6E33               	movwf	??___ftadd& (0+255),c
  2217  000358  0E18               	movlw	24
  2218  00035A  6433               	cpfsgt	??___ftadd,c
  2219  00035C  D007               	goto	l2145
  2220  00035E                     l653:
  2221  00035E  C030  F02D         	movff	___ftadd@f2,?___ftadd
  2222  000362  C031  F02E         	movff	___ftadd@f2+1,?___ftadd+1
  2223  000366  C032  F02F         	movff	___ftadd@f2+2,?___ftadd+2
  2224  00036A  0012               	return	
  2225  00036C                     l2145:
  2226  00036C  5037               	movf	___ftadd@exp2,w,c
  2227  00036E  B4D8               	btfsc	status,2,c
  2228  000370  D00B               	goto	l657
  2229  000372  5038               	movf	___ftadd@exp1,w,c
  2230  000374  5C37               	subwf	___ftadd@exp2,w,c
  2231  000376  B0D8               	btfsc	status,0,c
  2232  000378  D00E               	goto	l2151
  2233  00037A  5037               	movf	___ftadd@exp2,w,c
  2234  00037C  0800               	sublw	0
  2235  00037E  2438               	addwf	___ftadd@exp1,w,c
  2236  000380  6E33               	movwf	??___ftadd& (0+255),c
  2237  000382  0E18               	movlw	24
  2238  000384  6433               	cpfsgt	??___ftadd,c
  2239  000386  D007               	goto	l2151
  2240  000388                     l657:
  2241  000388  C02D  F02D         	movff	___ftadd@f1,?___ftadd
  2242  00038C  C02E  F02E         	movff	___ftadd@f1+1,?___ftadd+1
  2243  000390  C02F  F02F         	movff	___ftadd@f1+2,?___ftadd+2
  2244  000394  0012               	return	
  2245  000396                     l2151:
  2246  000396  0E06               	movlw	6
  2247  000398  6E36               	movwf	___ftadd@sign,c
  2248  00039A  BE2F               	btfsc	___ftadd@f1+2,7,c
  2249  00039C  8E36               	bsf	___ftadd@sign,7,c
  2250  00039E  BE32               	btfsc	___ftadd@f2+2,7,c
  2251  0003A0  8C36               	bsf	___ftadd@sign,6,c
  2252  0003A2  8E2E               	bsf	___ftadd@f1+1,7,c
  2253  0003A4  0EFF               	movlw	255
  2254  0003A6  162D               	andwf	___ftadd@f1,f,c
  2255  0003A8  0EFF               	movlw	255
  2256  0003AA  162E               	andwf	___ftadd@f1+1,f,c
  2257  0003AC  0E00               	movlw	0
  2258  0003AE  162F               	andwf	___ftadd@f1+2,f,c
  2259  0003B0  8E31               	bsf	___ftadd@f2+1,7,c
  2260  0003B2  0EFF               	movlw	255
  2261  0003B4  1630               	andwf	___ftadd@f2,f,c
  2262  0003B6  0EFF               	movlw	255
  2263  0003B8  1631               	andwf	___ftadd@f2+1,f,c
  2264  0003BA  0E00               	movlw	0
  2265  0003BC  1632               	andwf	___ftadd@f2+2,f,c
  2266  0003BE  5037               	movf	___ftadd@exp2,w,c
  2267  0003C0  5C38               	subwf	___ftadd@exp1,w,c
  2268  0003C2  B0D8               	btfsc	status,0,c
  2269  0003C4  D01B               	goto	l2177
  2270  0003C6                     l2167:
  2271  0003C6  90D8               	bcf	status,0,c
  2272  0003C8  3630               	rlcf	___ftadd@f2,f,c
  2273  0003CA  3631               	rlcf	___ftadd@f2+1,f,c
  2274  0003CC  3632               	rlcf	___ftadd@f2+2,f,c
  2275  0003CE  0637               	decf	___ftadd@exp2,f,c
  2276  0003D0  5038               	movf	___ftadd@exp1,w,c
  2277  0003D2  1837               	xorwf	___ftadd@exp2,w,c
  2278  0003D4  B4D8               	btfsc	status,2,c
  2279  0003D6  D00D               	goto	l2175
  2280  0003D8  0636               	decf	___ftadd@sign,f,c
  2281  0003DA  C036  F033         	movff	___ftadd@sign,??___ftadd
  2282  0003DE  0E07               	movlw	7
  2283  0003E0  1633               	andwf	??___ftadd,f,c
  2284  0003E2  B4D8               	btfsc	status,2,c
  2285  0003E4  D006               	goto	l2175
  2286  0003E6  D7EF               	goto	l2167
  2287  0003E8                     l2173:
  2288  0003E8  90D8               	bcf	status,0,c
  2289  0003EA  322F               	rrcf	___ftadd@f1+2,f,c
  2290  0003EC  322E               	rrcf	___ftadd@f1+1,f,c
  2291  0003EE  322D               	rrcf	___ftadd@f1,f,c
  2292  0003F0  2A38               	incf	___ftadd@exp1,f,c
  2293  0003F2                     l2175:
  2294  0003F2  5037               	movf	___ftadd@exp2,w,c
  2295  0003F4  1838               	xorwf	___ftadd@exp1,w,c
  2296  0003F6  B4D8               	btfsc	status,2,c
  2297  0003F8  D01F               	goto	l668
  2298  0003FA  D7F6               	goto	l2173
  2299  0003FC                     l2177:
  2300  0003FC  5038               	movf	___ftadd@exp1,w,c
  2301  0003FE  5C37               	subwf	___ftadd@exp2,w,c
  2302  000400  B0D8               	btfsc	status,0,c
  2303  000402  D01A               	goto	l668
  2304  000404                     l2179:
  2305  000404  90D8               	bcf	status,0,c
  2306  000406  362D               	rlcf	___ftadd@f1,f,c
  2307  000408  362E               	rlcf	___ftadd@f1+1,f,c
  2308  00040A  362F               	rlcf	___ftadd@f1+2,f,c
  2309  00040C  0638               	decf	___ftadd@exp1,f,c
  2310  00040E  5038               	movf	___ftadd@exp1,w,c
  2311  000410  1837               	xorwf	___ftadd@exp2,w,c
  2312  000412  B4D8               	btfsc	status,2,c
  2313  000414  D00D               	goto	l2187
  2314  000416  0636               	decf	___ftadd@sign,f,c
  2315  000418  C036  F033         	movff	___ftadd@sign,??___ftadd
  2316  00041C  0E07               	movlw	7
  2317  00041E  1633               	andwf	??___ftadd,f,c
  2318  000420  B4D8               	btfsc	status,2,c
  2319  000422  D006               	goto	l2187
  2320  000424  D7EF               	goto	l2179
  2321  000426                     l2185:
  2322  000426  90D8               	bcf	status,0,c
  2323  000428  3232               	rrcf	___ftadd@f2+2,f,c
  2324  00042A  3231               	rrcf	___ftadd@f2+1,f,c
  2325  00042C  3230               	rrcf	___ftadd@f2,f,c
  2326  00042E  2A37               	incf	___ftadd@exp2,f,c
  2327  000430                     l2187:
  2328  000430  5037               	movf	___ftadd@exp2,w,c
  2329  000432  1838               	xorwf	___ftadd@exp1,w,c
  2330  000434  A4D8               	btfss	status,2,c
  2331  000436  D7F7               	goto	l2185
  2332  000438                     l668:
  2333  000438  AE36               	btfss	___ftadd@sign,7,c
  2334  00043A  D00C               	goto	l677
  2335  00043C  0EFF               	movlw	255
  2336  00043E  1A2D               	xorwf	___ftadd@f1,f,c
  2337  000440  0EFF               	movlw	255
  2338  000442  1A2E               	xorwf	___ftadd@f1+1,f,c
  2339  000444  0EFF               	movlw	255
  2340  000446  1A2F               	xorwf	___ftadd@f1+2,f,c
  2341  000448  0E01               	movlw	1
  2342  00044A  262D               	addwf	___ftadd@f1,f,c
  2343  00044C  0E00               	movlw	0
  2344  00044E  222E               	addwfc	___ftadd@f1+1,f,c
  2345  000450  0E00               	movlw	0
  2346  000452  222F               	addwfc	___ftadd@f1+2,f,c
  2347  000454                     l677:
  2348  000454  AC36               	btfss	___ftadd@sign,6,c
  2349  000456  D00C               	goto	l2193
  2350  000458  0EFF               	movlw	255
  2351  00045A  1A30               	xorwf	___ftadd@f2,f,c
  2352  00045C  0EFF               	movlw	255
  2353  00045E  1A31               	xorwf	___ftadd@f2+1,f,c
  2354  000460  0EFF               	movlw	255
  2355  000462  1A32               	xorwf	___ftadd@f2+2,f,c
  2356  000464  0E01               	movlw	1
  2357  000466  2630               	addwf	___ftadd@f2,f,c
  2358  000468  0E00               	movlw	0
  2359  00046A  2231               	addwfc	___ftadd@f2+1,f,c
  2360  00046C  0E00               	movlw	0
  2361  00046E  2232               	addwfc	___ftadd@f2+2,f,c
  2362  000470                     l2193:
  2363  000470  0E00               	movlw	0
  2364  000472  6E36               	movwf	___ftadd@sign,c
  2365  000474  502D               	movf	___ftadd@f1,w,c
  2366  000476  2630               	addwf	___ftadd@f2,f,c
  2367  000478  502E               	movf	___ftadd@f1+1,w,c
  2368  00047A  2231               	addwfc	___ftadd@f2+1,f,c
  2369  00047C  502F               	movf	___ftadd@f1+2,w,c
  2370  00047E  2232               	addwfc	___ftadd@f2+2,f,c
  2371  000480  AE32               	btfss	___ftadd@f2+2,7,c
  2372  000482  D00E               	goto	l2203
  2373  000484  0EFF               	movlw	255
  2374  000486  1A30               	xorwf	___ftadd@f2,f,c
  2375  000488  0EFF               	movlw	255
  2376  00048A  1A31               	xorwf	___ftadd@f2+1,f,c
  2377  00048C  0EFF               	movlw	255
  2378  00048E  1A32               	xorwf	___ftadd@f2+2,f,c
  2379  000490  0E01               	movlw	1
  2380  000492  2630               	addwf	___ftadd@f2,f,c
  2381  000494  0E00               	movlw	0
  2382  000496  2231               	addwfc	___ftadd@f2+1,f,c
  2383  000498  0E00               	movlw	0
  2384  00049A  2232               	addwfc	___ftadd@f2+2,f,c
  2385  00049C  0E01               	movlw	1
  2386  00049E  6E36               	movwf	___ftadd@sign,c
  2387  0004A0                     l2203:
  2388  0004A0  C030  F010         	movff	___ftadd@f2,___ftpack@arg
  2389  0004A4  C031  F011         	movff	___ftadd@f2+1,___ftpack@arg+1
  2390  0004A8  C032  F012         	movff	___ftadd@f2+2,___ftpack@arg+2
  2391  0004AC  C038  F013         	movff	___ftadd@exp1,___ftpack@exp
  2392  0004B0  C036  F014         	movff	___ftadd@sign,___ftpack@sign
  2393  0004B4  EC45  F006         	call	___ftpack	;wreg free
  2394  0004B8  C010  F02D         	movff	?___ftpack,?___ftadd
  2395  0004BC  C011  F02E         	movff	?___ftpack+1,?___ftadd+1
  2396  0004C0  C012  F02F         	movff	?___ftpack+2,?___ftadd+2
  2397  0004C4  0012               	return	
  2398  0004C6                     __end_of___ftadd:
  2399                           	opt stack 0
  2400                           tblptru	equ	0xFF8
  2401                           tblptrh	equ	0xFF7
  2402                           tblptrl	equ	0xFF6
  2403                           tablat	equ	0xFF5
  2404                           intcon	equ	0xFF2
  2405                           intcon2	equ	0xFF1
  2406                           postinc0	equ	0xFEE
  2407                           wreg	equ	0xFE8
  2408                           status	equ	0xFD8
  2409                           
  2410 ;; *************** function _ADC_IsConversionDone *****************
  2411 ;; Defined at:
  2412 ;;		line 94 in file "mcc_generated_files/adc.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      unsigned char 
  2419 ;; Registers used:
  2420 ;;		wreg
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;Total ram usage:        0 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    4
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_TempAcquisition
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text17
  2441  001190                     __ptext17:
  2442                           	opt stack 0
  2443  001190                     _ADC_IsConversionDone:
  2444                           	opt stack 23
  2445                           
  2446                           ;adc.c: 97: return (!ADCON0bits.GO_nDONE);
  2447                           
  2448                           ;incstack = 0
  2449  001190  B2C2               	btfsc	4034,1,c	;volatile
  2450  001192  D002               	goto	u2450
  2451  001194  0E01               	movlw	1
  2452  001196  0012               	return	
  2453  001198                     u2450:
  2454  001198  0E00               	movlw	0
  2455  00119A  0012               	return	
  2456  00119C                     __end_of_ADC_IsConversionDone:
  2457                           	opt stack 0
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           intcon	equ	0xFF2
  2463                           intcon2	equ	0xFF1
  2464                           postinc0	equ	0xFEE
  2465                           wreg	equ	0xFE8
  2466                           status	equ	0xFD8
  2467                           
  2468 ;; *************** function _ADC_GetConversionResult *****************
  2469 ;; Defined at:
  2470 ;;		line 100 in file "mcc_generated_files/adc.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  2   15[COMRAM] unsigned int 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;Total ram usage:        4 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    4
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_TempAcquisition
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text18
  2499  00115C                     __ptext18:
  2500                           	opt stack 0
  2501  00115C                     _ADC_GetConversionResult:
  2502                           	opt stack 23
  2503                           
  2504                           ;adc.c: 103: return ((ADRESH << 8) + ADRESL);
  2505                           
  2506                           ;incstack = 0
  2507  00115C  50C4               	movf	4036,w,c	;volatile
  2508  00115E  6E13               	movwf	(??_ADC_GetConversionResult+1)& (0+255),c
  2509  001160  6A12               	clrf	??_ADC_GetConversionResult& (0+255),c
  2510  001162  50C3               	movf	4035,w,c	;volatile
  2511  001164  2412               	addwf	??_ADC_GetConversionResult,w,c
  2512  001166  6E10               	movwf	?_ADC_GetConversionResult,c
  2513  001168  0E00               	movlw	0
  2514  00116A  2013               	addwfc	??_ADC_GetConversionResult+1,w,c
  2515  00116C  6E11               	movwf	?_ADC_GetConversionResult+1,c
  2516  00116E  0012               	return	
  2517  001170                     __end_of_ADC_GetConversionResult:
  2518                           	opt stack 0
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           intcon	equ	0xFF2
  2524                           intcon2	equ	0xFF1
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           status	equ	0xFD8
  2528                           
  2529 ;; *************** function _InitHardware *****************
  2530 ;; Defined at:
  2531 ;;		line 22 in file "tasks.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    8
  2552 ;; This function calls:
  2553 ;;		_ADC_SelectChannel
  2554 ;;		_ADC_StartConversion
  2555 ;;		_PID_SetControllerDirection
  2556 ;;		_PID_SetMode
  2557 ;;		_PID_SetOutputLimits
  2558 ;;		_PID_SetPoint
  2559 ;;		_PID_SetSampleTime
  2560 ;;		_PID_SetTunings
  2561 ;;		_TMR2_SetInterruptHandler
  2562 ;; This function is called by:
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text19
  2568  000DE0                     __ptext19:
  2569                           	opt stack 0
  2570  000DE0                     _InitHardware:
  2571                           	opt stack 22
  2572                           
  2573                           ;tasks.c: 24: TMR2_SetInterruptHandler(TMR2_Tick);
  2574                           
  2575                           ;incstack = 0
  2576  000DE0  0EF4               	movlw	low _TMR2_Tick
  2577  000DE2  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  2578  000DE4  0E05               	movlw	high _TMR2_Tick
  2579  000DE6  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  2580  000DE8  ECCE  F008         	call	_TMR2_SetInterruptHandler	;wreg free
  2581                           
  2582                           ;tasks.c: 26: ADC_SelectChannel(TEMP_SENSOR);
  2583  000DEC  0E02               	movlw	2
  2584  000DEE  EC82  F008         	call	_ADC_SelectChannel
  2585                           
  2586                           ;tasks.c: 28: do { LATDbits.LATD7 = 1; } while(0);
  2587  000DF2  8E8C               	bsf	3980,7,c	;volatile
  2588                           
  2589                           ;tasks.c: 29: do { LATDbits.LATD6 = 1; } while(0);
  2590  000DF4  8C8C               	bsf	3980,6,c	;volatile
  2591                           
  2592                           ;tasks.c: 31: PID_SetPoint((int)(100 * 24));
  2593  000DF6  0E09               	movlw	9
  2594  000DF8  6E1D               	movwf	PID_SetPoint@newSetPoint+1,c
  2595  000DFA  0E60               	movlw	96
  2596  000DFC  6E1C               	movwf	PID_SetPoint@newSetPoint,c
  2597  000DFE  EC75  F008         	call	_PID_SetPoint	;wreg free
  2598                           
  2599                           ;tasks.c: 32: PID_SetTunings(0.1, 0.001, 0);
  2600  000E02  0ECD               	movlw	205
  2601  000E04  0100               	movlb	0	; () banked
  2602  000E06  6F85               	movwf	PID_SetTunings@Kp& (0+255),b
  2603  000E08  0ECC               	movlw	204
  2604  000E0A  0100               	movlb	0	; () banked
  2605  000E0C  6F86               	movwf	(PID_SetTunings@Kp+1)& (0+255),b
  2606  000E0E  0E3D               	movlw	61
  2607  000E10  0100               	movlb	0	; () banked
  2608  000E12  6F87               	movwf	(PID_SetTunings@Kp+2)& (0+255),b
  2609  000E14  0E12               	movlw	18
  2610  000E16  0100               	movlb	0	; () banked
  2611  000E18  6F88               	movwf	PID_SetTunings@Ki& (0+255),b
  2612  000E1A  0E83               	movlw	131
  2613  000E1C  0100               	movlb	0	; () banked
  2614  000E1E  6F89               	movwf	(PID_SetTunings@Ki+1)& (0+255),b
  2615  000E20  0E3A               	movlw	58
  2616  000E22  0100               	movlb	0	; () banked
  2617  000E24  6F8A               	movwf	(PID_SetTunings@Ki+2)& (0+255),b
  2618  000E26  0E00               	movlw	0
  2619  000E28  0100               	movlb	0	; () banked
  2620  000E2A  6F8B               	movwf	PID_SetTunings@Kd& (0+255),b
  2621  000E2C  0E00               	movlw	0
  2622  000E2E  0100               	movlb	0	; () banked
  2623  000E30  6F8C               	movwf	(PID_SetTunings@Kd+1)& (0+255),b
  2624  000E32  0E00               	movlw	0
  2625  000E34  0100               	movlb	0	; () banked
  2626  000E36  6F8D               	movwf	(PID_SetTunings@Kd+2)& (0+255),b
  2627  000E38  EC91  F003         	call	_PID_SetTunings	;wreg free
  2628                           
  2629                           ;tasks.c: 33: PID_SetSampleTime(500);
  2630  000E3C  0E01               	movlw	1
  2631  000E3E  6E3A               	movwf	PID_SetSampleTime@newSampleTime+1,c
  2632  000E40  0EF4               	movlw	244
  2633  000E42  6E39               	movwf	PID_SetSampleTime@newSampleTime,c
  2634  000E44  EC9C  F006         	call	_PID_SetSampleTime	;wreg free
  2635                           
  2636                           ;tasks.c: 34: PID_SetOutputLimits(5, 80);
  2637  000E48  0E00               	movlw	0
  2638  000E4A  6E26               	movwf	PID_SetOutputLimits@Min+1,c
  2639  000E4C  0E05               	movlw	5
  2640  000E4E  6E25               	movwf	PID_SetOutputLimits@Min,c
  2641  000E50  0E00               	movlw	0
  2642  000E52  6E28               	movwf	PID_SetOutputLimits@Max+1,c
  2643  000E54  0E50               	movlw	80
  2644  000E56  6E27               	movwf	PID_SetOutputLimits@Max,c
  2645  000E58  EC8D  F004         	call	_PID_SetOutputLimits	;wreg free
  2646                           
  2647                           ;tasks.c: 35: PID_SetControllerDirection(0);
  2648  000E5C  0E00               	movlw	0
  2649  000E5E  6E11               	movwf	PID_SetControllerDirection@Direction+1,c
  2650  000E60  0E00               	movlw	0
  2651  000E62  6E10               	movwf	PID_SetControllerDirection@Direction,c
  2652  000E64  ECD3  F008         	call	_PID_SetControllerDirection	;wreg free
  2653                           
  2654                           ;tasks.c: 36: PID_SetMode(1);
  2655  000E68  0E00               	movlw	0
  2656  000E6A  6E26               	movwf	PID_SetMode@Mode+1,c
  2657  000E6C  0E01               	movlw	1
  2658  000E6E  6E25               	movwf	PID_SetMode@Mode,c
  2659  000E70  ECE5  F007         	call	_PID_SetMode	;wreg free
  2660                           
  2661                           ;tasks.c: 38: ADC_StartConversion();
  2662  000E74  ECDF  F008         	call	_ADC_StartConversion	;wreg free
  2663  000E78  0012               	return		;funcret
  2664  000E7A                     __end_of_InitHardware:
  2665                           	opt stack 0
  2666                           tblptru	equ	0xFF8
  2667                           tblptrh	equ	0xFF7
  2668                           tblptrl	equ	0xFF6
  2669                           tablat	equ	0xFF5
  2670                           intcon	equ	0xFF2
  2671                           intcon2	equ	0xFF1
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           status	equ	0xFD8
  2675                           
  2676 ;; *************** function _TMR2_SetInterruptHandler *****************
  2677 ;; Defined at:
  2678 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  InterruptHan    2   15[COMRAM] PTR void 
  2681 ;;		 -> TMR2_Tick(1), TMR2_DefaultInterruptHandler(1), 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;Total ram usage:        2 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    4
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_TMR2_Initialize
  2704 ;;		_InitHardware
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text20
  2709  00119C                     __ptext20:
  2710                           	opt stack 0
  2711  00119C                     _TMR2_SetInterruptHandler:
  2712                           	opt stack 24
  2713                           
  2714                           ;tmr2.c: 152: TMR2_InterruptHandler = InterruptHandler;
  2715                           
  2716                           ;incstack = 0
  2717  00119C  C010  F09D         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  2718  0011A0  C011  F09E         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  2719  0011A4  0012               	return		;funcret
  2720  0011A6                     __end_of_TMR2_SetInterruptHandler:
  2721                           	opt stack 0
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           intcon	equ	0xFF2
  2727                           intcon2	equ	0xFF1
  2728                           postinc0	equ	0xFEE
  2729                           wreg	equ	0xFE8
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function _PID_SetTunings *****************
  2733 ;; Defined at:
  2734 ;;		line 55 in file "PID.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  Kp              3    0[BANK0 ] void 
  2737 ;;  Ki              3    3[BANK0 ] void 
  2738 ;;  Kd              3    6[BANK0 ] void 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  SampleTimeIn    3   56[COMRAM] void 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2750 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Totals:         3       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;Total ram usage:       12 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    6
  2757 ;; This function calls:
  2758 ;;		___awtoft
  2759 ;;		___ftdiv
  2760 ;;		___ftmul
  2761 ;;		___ftneg
  2762 ;; This function is called by:
  2763 ;;		_InitHardware
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text21
  2768  000722                     __ptext21:
  2769                           	opt stack 0
  2770  000722                     _PID_SetTunings:
  2771                           	opt stack 23
  2772                           
  2773                           ;PID.c: 57: double SampleTimeInSec;
  2774                           ;PID.c: 59: if ((Kp < 0) || (Ki < 0) || (Kd < 0)) return;
  2775                           
  2776                           ;incstack = 0
  2777  000722  0100               	movlb	0	; () banked
  2778  000724  BF87               	btfsc	(PID_SetTunings@Kp+2)& (0+255),7,b
  2779  000726  0012               	return	
  2780                           
  2781                           ; BSR set to: 0
  2782  000728  0100               	movlb	0	; () banked
  2783  00072A  BF8A               	btfsc	(PID_SetTunings@Ki+2)& (0+255),7,b
  2784  00072C  0012               	return	
  2785                           
  2786                           ; BSR set to: 0
  2787  00072E  0100               	movlb	0	; () banked
  2788  000730  BF8D               	btfsc	(PID_SetTunings@Kd+2)& (0+255),7,b
  2789  000732  0012               	return	
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;PID.c: 61: SampleTimeInSec = ((double)SampleTime)/1000;
  2793                           
  2794                           ; BSR set to: 0
  2795                           
  2796                           ; BSR set to: 0
  2797  000734  C09F  F018         	movff	_SampleTime,___awtoft@c
  2798  000738  C0A0  F019         	movff	_SampleTime+1,___awtoft@c+1
  2799  00073C  ECC9  F007         	call	___awtoft	;wreg free
  2800  000740  C018  F02A         	movff	?___awtoft,___ftdiv@f1
  2801  000744  C019  F02B         	movff	?___awtoft+1,___ftdiv@f1+1
  2802  000748  C01A  F02C         	movff	?___awtoft+2,___ftdiv@f1+2
  2803  00074C  0E00               	movlw	0
  2804  00074E  6E2D               	movwf	___ftdiv@f2,c
  2805  000750  0E7A               	movlw	122
  2806  000752  6E2E               	movwf	___ftdiv@f2+1,c
  2807  000754  0E44               	movlw	68
  2808  000756  6E2F               	movwf	___ftdiv@f2+2,c
  2809  000758  EC06  F005         	call	___ftdiv	;wreg free
  2810  00075C  C02A  F039         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  2811  000760  C02B  F03A         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  2812  000764  C02C  F03B         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  2813                           
  2814                           ;PID.c: 62: PIDConfig.Kp = Kp;
  2815  000768  C085  F043         	movff	PID_SetTunings@Kp,_PIDConfig+4	;volatile
  2816  00076C  C086  F044         	movff	PID_SetTunings@Kp+1,_PIDConfig+5	;volatile
  2817  000770  C087  F045         	movff	PID_SetTunings@Kp+2,_PIDConfig+6	;volatile
  2818                           
  2819                           ;PID.c: 63: PIDConfig.Ki = Ki * SampleTimeInSec;
  2820  000774  C088  F01B         	movff	PID_SetTunings@Ki,___ftmul@f1
  2821  000778  C089  F01C         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  2822  00077C  C08A  F01D         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  2823  000780  C039  F01E         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  2824  000784  C03A  F01F         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  2825  000788  C03B  F020         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  2826  00078C  EC13  F004         	call	___ftmul	;wreg free
  2827  000790  C01B  F046         	movff	?___ftmul,_PIDConfig+7	;volatile
  2828  000794  C01C  F047         	movff	?___ftmul+1,_PIDConfig+8	;volatile
  2829  000798  C01D  F048         	movff	?___ftmul+2,_PIDConfig+9	;volatile
  2830                           
  2831                           ;PID.c: 64: PIDConfig.Kd = Kd / SampleTimeInSec;
  2832  00079C  C08B  F02A         	movff	PID_SetTunings@Kd,___ftdiv@f1
  2833  0007A0  C08C  F02B         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  2834  0007A4  C08D  F02C         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  2835  0007A8  C039  F02D         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  2836  0007AC  C03A  F02E         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  2837  0007B0  C03B  F02F         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  2838  0007B4  EC06  F005         	call	___ftdiv	;wreg free
  2839  0007B8  C02A  F049         	movff	?___ftdiv,_PIDConfig+10	;volatile
  2840  0007BC  C02B  F04A         	movff	?___ftdiv+1,_PIDConfig+11	;volatile
  2841  0007C0  C02C  F04B         	movff	?___ftdiv+2,_PIDConfig+12	;volatile
  2842                           
  2843                           ;PID.c: 66: if(controllerDirection == 1)
  2844  0007C4  0100               	movlb	0	; () banked
  2845  0007C6  0569               	decf	_controllerDirection& (0+255),w,b
  2846  0007C8  0100               	movlb	0	; () banked
  2847  0007CA  116A               	iorwf	(_controllerDirection+1)& (0+255),w,b
  2848  0007CC  A4D8               	btfss	status,2,c
  2849  0007CE  0012               	return	
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;PID.c: 67: {
  2853                           ;PID.c: 68: PIDConfig.Kp = (0 - PIDConfig.Kp);
  2854  0007D0  C043  F02A         	movff	_PIDConfig+4,___ftneg@f1	;volatile
  2855  0007D4  C044  F02B         	movff	_PIDConfig+5,___ftneg@f1+1	;volatile
  2856  0007D8  C045  F02C         	movff	_PIDConfig+6,___ftneg@f1+2	;volatile
  2857  0007DC  EC33  F008         	call	___ftneg	;wreg free
  2858  0007E0  C02A  F043         	movff	?___ftneg,_PIDConfig+4	;volatile
  2859  0007E4  C02B  F044         	movff	?___ftneg+1,_PIDConfig+5	;volatile
  2860  0007E8  C02C  F045         	movff	?___ftneg+2,_PIDConfig+6	;volatile
  2861                           
  2862                           ;PID.c: 69: PIDConfig.Ki = (0 - PIDConfig.Ki);
  2863  0007EC  C046  F02A         	movff	_PIDConfig+7,___ftneg@f1	;volatile
  2864  0007F0  C047  F02B         	movff	_PIDConfig+8,___ftneg@f1+1	;volatile
  2865  0007F4  C048  F02C         	movff	_PIDConfig+9,___ftneg@f1+2	;volatile
  2866  0007F8  EC33  F008         	call	___ftneg	;wreg free
  2867  0007FC  C02A  F046         	movff	?___ftneg,_PIDConfig+7	;volatile
  2868  000800  C02B  F047         	movff	?___ftneg+1,_PIDConfig+8	;volatile
  2869  000804  C02C  F048         	movff	?___ftneg+2,_PIDConfig+9	;volatile
  2870                           
  2871                           ;PID.c: 70: PIDConfig.Kd = (0 - PIDConfig.Kd);
  2872  000808  C049  F02A         	movff	_PIDConfig+10,___ftneg@f1	;volatile
  2873  00080C  C04A  F02B         	movff	_PIDConfig+11,___ftneg@f1+1	;volatile
  2874  000810  C04B  F02C         	movff	_PIDConfig+12,___ftneg@f1+2	;volatile
  2875  000814  EC33  F008         	call	___ftneg	;wreg free
  2876  000818  C02A  F049         	movff	?___ftneg,_PIDConfig+10	;volatile
  2877  00081C  C02B  F04A         	movff	?___ftneg+1,_PIDConfig+11	;volatile
  2878  000820  C02C  F04B         	movff	?___ftneg+2,_PIDConfig+12	;volatile
  2879  000824  0012               	return	
  2880  000826                     __end_of_PID_SetTunings:
  2881                           	opt stack 0
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           intcon	equ	0xFF2
  2887                           intcon2	equ	0xFF1
  2888                           postinc0	equ	0xFEE
  2889                           wreg	equ	0xFE8
  2890                           status	equ	0xFD8
  2891                           
  2892 ;; *************** function ___ftneg *****************
  2893 ;; Defined at:
  2894 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftneg.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  f1              3   41[COMRAM] float 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  3   41[COMRAM] float 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2908 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;Total ram usage:        3 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    4
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_PID_Control
  2919 ;;		_PID_SetTunings
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text22
  2924  001066                     __ptext22:
  2925                           	opt stack 0
  2926  001066                     ___ftneg:
  2927                           	opt stack 22
  2928                           
  2929                           ;incstack = 0
  2930  001066  502A               	movf	___ftneg@f1,w,c
  2931  001068  102B               	iorwf	___ftneg@f1+1,w,c
  2932  00106A  102C               	iorwf	___ftneg@f1+2,w,c
  2933  00106C  B4D8               	btfsc	status,2,c
  2934  00106E  D006               	goto	l710
  2935  001070  0E00               	movlw	0
  2936  001072  1A2A               	xorwf	___ftneg@f1,f,c
  2937  001074  0E00               	movlw	0
  2938  001076  1A2B               	xorwf	___ftneg@f1+1,f,c
  2939  001078  0E80               	movlw	128
  2940  00107A  1A2C               	xorwf	___ftneg@f1+2,f,c
  2941  00107C                     l710:
  2942  00107C  C02A  F02A         	movff	___ftneg@f1,?___ftneg
  2943  001080  C02B  F02B         	movff	___ftneg@f1+1,?___ftneg+1
  2944  001084  C02C  F02C         	movff	___ftneg@f1+2,?___ftneg+2
  2945  001088  0012               	return		;funcret
  2946  00108A                     __end_of___ftneg:
  2947                           	opt stack 0
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           intcon	equ	0xFF2
  2953                           intcon2	equ	0xFF1
  2954                           postinc0	equ	0xFEE
  2955                           wreg	equ	0xFE8
  2956                           status	equ	0xFD8
  2957                           
  2958 ;; *************** function _PID_SetSampleTime *****************
  2959 ;; Defined at:
  2960 ;;		line 73 in file "PID.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  newSampleTim    2   56[COMRAM] int 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  ratio           3   58[COMRAM] int 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;Total ram usage:        5 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    6
  2981 ;; This function calls:
  2982 ;;		___awtoft
  2983 ;;		___ftdiv
  2984 ;;		___ftmul
  2985 ;; This function is called by:
  2986 ;;		_InitHardware
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text23
  2991  000D38                     __ptext23:
  2992                           	opt stack 0
  2993  000D38                     _PID_SetSampleTime:
  2994                           	opt stack 23
  2995                           
  2996                           ;PID.c: 75: if (newSampleTime > 0)
  2997                           
  2998                           ;incstack = 0
  2999  000D38  BE3A               	btfsc	PID_SetSampleTime@newSampleTime+1,7,c
  3000  000D3A  0012               	return	
  3001  000D3C  503A               	movf	PID_SetSampleTime@newSampleTime+1,w,c
  3002  000D3E  E103               	bnz	u2640
  3003  000D40  0439               	decf	PID_SetSampleTime@newSampleTime,w,c
  3004  000D42  A0D8               	btfss	status,0,c
  3005  000D44  0012               	return	
  3006  000D46                     u2640:
  3007                           
  3008                           ;PID.c: 76: {
  3009                           ;PID.c: 77: double ratio = (double)newSampleTime / (double)SampleTime;
  3010  000D46  C039  F018         	movff	PID_SetSampleTime@newSampleTime,___awtoft@c
  3011  000D4A  C03A  F019         	movff	PID_SetSampleTime@newSampleTime+1,___awtoft@c+1
  3012  000D4E  ECC9  F007         	call	___awtoft	;wreg free
  3013  000D52  C018  F02A         	movff	?___awtoft,___ftdiv@f1
  3014  000D56  C019  F02B         	movff	?___awtoft+1,___ftdiv@f1+1
  3015  000D5A  C01A  F02C         	movff	?___awtoft+2,___ftdiv@f1+2
  3016  000D5E  C09F  F018         	movff	_SampleTime,___awtoft@c
  3017  000D62  C0A0  F019         	movff	_SampleTime+1,___awtoft@c+1
  3018  000D66  ECC9  F007         	call	___awtoft	;wreg free
  3019  000D6A  C018  F02D         	movff	?___awtoft,___ftdiv@f2
  3020  000D6E  C019  F02E         	movff	?___awtoft+1,___ftdiv@f2+1
  3021  000D72  C01A  F02F         	movff	?___awtoft+2,___ftdiv@f2+2
  3022  000D76  EC06  F005         	call	___ftdiv	;wreg free
  3023  000D7A  C02A  F03B         	movff	?___ftdiv,PID_SetSampleTime@ratio
  3024  000D7E  C02B  F03C         	movff	?___ftdiv+1,PID_SetSampleTime@ratio+1
  3025  000D82  C02C  F03D         	movff	?___ftdiv+2,PID_SetSampleTime@ratio+2
  3026                           
  3027                           ;PID.c: 78: PIDConfig.Ki *= ratio;
  3028  000D86  C046  F01B         	movff	_PIDConfig+7,___ftmul@f1	;volatile
  3029  000D8A  C047  F01C         	movff	_PIDConfig+8,___ftmul@f1+1	;volatile
  3030  000D8E  C048  F01D         	movff	_PIDConfig+9,___ftmul@f1+2	;volatile
  3031  000D92  C03B  F01E         	movff	PID_SetSampleTime@ratio,___ftmul@f2
  3032  000D96  C03C  F01F         	movff	PID_SetSampleTime@ratio+1,___ftmul@f2+1
  3033  000D9A  C03D  F020         	movff	PID_SetSampleTime@ratio+2,___ftmul@f2+2
  3034  000D9E  EC13  F004         	call	___ftmul	;wreg free
  3035  000DA2  C01B  F046         	movff	?___ftmul,_PIDConfig+7	;volatile
  3036  000DA6  C01C  F047         	movff	?___ftmul+1,_PIDConfig+8	;volatile
  3037  000DAA  C01D  F048         	movff	?___ftmul+2,_PIDConfig+9	;volatile
  3038                           
  3039                           ;PID.c: 79: PIDConfig.Kd /= ratio;
  3040  000DAE  C049  F02A         	movff	_PIDConfig+10,___ftdiv@f1	;volatile
  3041  000DB2  C04A  F02B         	movff	_PIDConfig+11,___ftdiv@f1+1	;volatile
  3042  000DB6  C04B  F02C         	movff	_PIDConfig+12,___ftdiv@f1+2	;volatile
  3043  000DBA  C03B  F02D         	movff	PID_SetSampleTime@ratio,___ftdiv@f2
  3044  000DBE  C03C  F02E         	movff	PID_SetSampleTime@ratio+1,___ftdiv@f2+1
  3045  000DC2  C03D  F02F         	movff	PID_SetSampleTime@ratio+2,___ftdiv@f2+2
  3046  000DC6  EC06  F005         	call	___ftdiv	;wreg free
  3047  000DCA  C02A  F049         	movff	?___ftdiv,_PIDConfig+10	;volatile
  3048  000DCE  C02B  F04A         	movff	?___ftdiv+1,_PIDConfig+11	;volatile
  3049  000DD2  C02C  F04B         	movff	?___ftdiv+2,_PIDConfig+12	;volatile
  3050                           
  3051                           ;PID.c: 80: SampleTime = (unsigned long)newSampleTime;
  3052  000DD6  C039  F09F         	movff	PID_SetSampleTime@newSampleTime,_SampleTime
  3053  000DDA  C03A  F0A0         	movff	PID_SetSampleTime@newSampleTime+1,_SampleTime+1
  3054  000DDE  0012               	return	
  3055  000DE0                     __end_of_PID_SetSampleTime:
  3056                           	opt stack 0
  3057                           tblptru	equ	0xFF8
  3058                           tblptrh	equ	0xFF7
  3059                           tblptrl	equ	0xFF6
  3060                           tablat	equ	0xFF5
  3061                           intcon	equ	0xFF2
  3062                           intcon2	equ	0xFF1
  3063                           postinc0	equ	0xFEE
  3064                           wreg	equ	0xFE8
  3065                           status	equ	0xFD8
  3066                           
  3067 ;; *************** function ___ftmul *****************
  3068 ;; Defined at:
  3069 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftmul.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  f1              3   26[COMRAM] float 
  3072 ;;  f2              3   29[COMRAM] float 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  3075 ;;  sign            1   40[COMRAM] unsigned char 
  3076 ;;  cntr            1   39[COMRAM] unsigned char 
  3077 ;;  exp             1   35[COMRAM] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  3   26[COMRAM] float 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3087 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;Total ram usage:       15 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    5
  3094 ;; This function calls:
  3095 ;;		___ftpack
  3096 ;; This function is called by:
  3097 ;;		_TempAcquisition
  3098 ;;		_PID_Control
  3099 ;;		_PID_SetTunings
  3100 ;;		_PID_SetSampleTime
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text24
  3105  000826                     __ptext24:
  3106                           	opt stack 0
  3107  000826                     ___ftmul:
  3108                           	opt stack 22
  3109                           
  3110                           ;incstack = 0
  3111  000826  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  3112  00082A  6A22               	clrf	(??___ftmul+1)& (0+255),c
  3113  00082C  6A23               	clrf	(??___ftmul+2)& (0+255),c
  3114  00082E  341C               	rlcf	___ftmul@f1+1,w,c
  3115  000830  3621               	rlcf	??___ftmul& (0+255),f,c
  3116  000832  E301               	bnc	u2261
  3117  000834  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  3118  000836                     u2261:
  3119  000836  5021               	movf	??___ftmul,w,c
  3120  000838  6E24               	movwf	___ftmul@exp,c
  3121  00083A  5024               	movf	___ftmul@exp,w,c
  3122  00083C  A4D8               	btfss	status,2,c
  3123  00083E  D007               	goto	l2213
  3124  000840  0E00               	movlw	0
  3125  000842  6E1B               	movwf	?___ftmul,c
  3126  000844  0E00               	movlw	0
  3127  000846  6E1C               	movwf	?___ftmul+1,c
  3128  000848  0E00               	movlw	0
  3129  00084A  6E1D               	movwf	?___ftmul+2,c
  3130  00084C  0012               	return	
  3131  00084E                     l2213:
  3132  00084E  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  3133  000852  6A22               	clrf	(??___ftmul+1)& (0+255),c
  3134  000854  6A23               	clrf	(??___ftmul+2)& (0+255),c
  3135  000856  341F               	rlcf	___ftmul@f2+1,w,c
  3136  000858  3621               	rlcf	??___ftmul& (0+255),f,c
  3137  00085A  E301               	bnc	u2281
  3138  00085C  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  3139  00085E                     u2281:
  3140  00085E  5021               	movf	??___ftmul,w,c
  3141  000860  6E29               	movwf	___ftmul@sign,c
  3142  000862  5029               	movf	___ftmul@sign,w,c
  3143  000864  A4D8               	btfss	status,2,c
  3144  000866  D007               	goto	l2219
  3145  000868  0E00               	movlw	0
  3146  00086A  6E1B               	movwf	?___ftmul,c
  3147  00086C  0E00               	movlw	0
  3148  00086E  6E1C               	movwf	?___ftmul+1,c
  3149  000870  0E00               	movlw	0
  3150  000872  6E1D               	movwf	?___ftmul+2,c
  3151  000874  0012               	return	
  3152  000876                     l2219:
  3153  000876  5029               	movf	___ftmul@sign,w,c
  3154  000878  0F7B               	addlw	123
  3155  00087A  2624               	addwf	___ftmul@exp,f,c
  3156  00087C  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  3157  000880  5020               	movf	___ftmul@f2+2,w,c
  3158  000882  1A29               	xorwf	___ftmul@sign,f,c
  3159  000884  0E80               	movlw	128
  3160  000886  1629               	andwf	___ftmul@sign,f,c
  3161  000888  8E1C               	bsf	___ftmul@f1+1,7,c
  3162  00088A  8E1F               	bsf	___ftmul@f2+1,7,c
  3163  00088C  0EFF               	movlw	255
  3164  00088E  161E               	andwf	___ftmul@f2,f,c
  3165  000890  0EFF               	movlw	255
  3166  000892  161F               	andwf	___ftmul@f2+1,f,c
  3167  000894  0E00               	movlw	0
  3168  000896  1620               	andwf	___ftmul@f2+2,f,c
  3169  000898  0E00               	movlw	0
  3170  00089A  6E25               	movwf	___ftmul@f3_as_product,c
  3171  00089C  0E00               	movlw	0
  3172  00089E  6E26               	movwf	___ftmul@f3_as_product+1,c
  3173  0008A0  0E00               	movlw	0
  3174  0008A2  6E27               	movwf	___ftmul@f3_as_product+2,c
  3175  0008A4  0E07               	movlw	7
  3176  0008A6  6E28               	movwf	___ftmul@cntr,c
  3177  0008A8                     l2233:
  3178  0008A8  A01B               	btfss	___ftmul@f1,0,c
  3179  0008AA  D006               	goto	l2237
  3180  0008AC  501E               	movf	___ftmul@f2,w,c
  3181  0008AE  2625               	addwf	___ftmul@f3_as_product,f,c
  3182  0008B0  501F               	movf	___ftmul@f2+1,w,c
  3183  0008B2  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  3184  0008B4  5020               	movf	___ftmul@f2+2,w,c
  3185  0008B6  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  3186  0008B8                     l2237:
  3187  0008B8  90D8               	bcf	status,0,c
  3188  0008BA  321D               	rrcf	___ftmul@f1+2,f,c
  3189  0008BC  321C               	rrcf	___ftmul@f1+1,f,c
  3190  0008BE  321B               	rrcf	___ftmul@f1,f,c
  3191  0008C0  90D8               	bcf	status,0,c
  3192  0008C2  361E               	rlcf	___ftmul@f2,f,c
  3193  0008C4  361F               	rlcf	___ftmul@f2+1,f,c
  3194  0008C6  3620               	rlcf	___ftmul@f2+2,f,c
  3195  0008C8  2E28               	decfsz	___ftmul@cntr,f,c
  3196  0008CA  D7EE               	goto	l2233
  3197  0008CC  0E09               	movlw	9
  3198  0008CE  6E28               	movwf	___ftmul@cntr,c
  3199  0008D0                     l2243:
  3200  0008D0  A01B               	btfss	___ftmul@f1,0,c
  3201  0008D2  D006               	goto	l2247
  3202  0008D4  501E               	movf	___ftmul@f2,w,c
  3203  0008D6  2625               	addwf	___ftmul@f3_as_product,f,c
  3204  0008D8  501F               	movf	___ftmul@f2+1,w,c
  3205  0008DA  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  3206  0008DC  5020               	movf	___ftmul@f2+2,w,c
  3207  0008DE  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  3208  0008E0                     l2247:
  3209  0008E0  90D8               	bcf	status,0,c
  3210  0008E2  321D               	rrcf	___ftmul@f1+2,f,c
  3211  0008E4  321C               	rrcf	___ftmul@f1+1,f,c
  3212  0008E6  321B               	rrcf	___ftmul@f1,f,c
  3213  0008E8  90D8               	bcf	status,0,c
  3214  0008EA  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  3215  0008EC  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  3216  0008EE  3225               	rrcf	___ftmul@f3_as_product,f,c
  3217  0008F0  2E28               	decfsz	___ftmul@cntr,f,c
  3218  0008F2  D7EE               	goto	l2243
  3219  0008F4  C025  F010         	movff	___ftmul@f3_as_product,___ftpack@arg
  3220  0008F8  C026  F011         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3221  0008FC  C027  F012         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3222  000900  C024  F013         	movff	___ftmul@exp,___ftpack@exp
  3223  000904  C029  F014         	movff	___ftmul@sign,___ftpack@sign
  3224  000908  EC45  F006         	call	___ftpack	;wreg free
  3225  00090C  C010  F01B         	movff	?___ftpack,?___ftmul
  3226  000910  C011  F01C         	movff	?___ftpack+1,?___ftmul+1
  3227  000914  C012  F01D         	movff	?___ftpack+2,?___ftmul+2
  3228  000918  0012               	return	
  3229  00091A                     __end_of___ftmul:
  3230                           	opt stack 0
  3231                           tblptru	equ	0xFF8
  3232                           tblptrh	equ	0xFF7
  3233                           tblptrl	equ	0xFF6
  3234                           tablat	equ	0xFF5
  3235                           intcon	equ	0xFF2
  3236                           intcon2	equ	0xFF1
  3237                           postinc0	equ	0xFEE
  3238                           wreg	equ	0xFE8
  3239                           status	equ	0xFD8
  3240                           
  3241 ;; *************** function ___ftdiv *****************
  3242 ;; Defined at:
  3243 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  f1              3   41[COMRAM] float 
  3246 ;;  f2              3   44[COMRAM] float 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  f3              3   51[COMRAM] float 
  3249 ;;  sign            1   55[COMRAM] unsigned char 
  3250 ;;  exp             1   54[COMRAM] unsigned char 
  3251 ;;  cntr            1   50[COMRAM] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  3   41[COMRAM] float 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3261 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;Total ram usage:       15 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    5
  3268 ;; This function calls:
  3269 ;;		___ftpack
  3270 ;; This function is called by:
  3271 ;;		_TempAcquisition
  3272 ;;		_PID_SetTunings
  3273 ;;		_PID_SetSampleTime
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text25
  3278  000A0C                     __ptext25:
  3279                           	opt stack 0
  3280  000A0C                     ___ftdiv:
  3281                           	opt stack 22
  3282                           
  3283                           ;incstack = 0
  3284  000A0C  C02C  F030         	movff	___ftdiv@f1+2,??___ftdiv
  3285  000A10  6A31               	clrf	(??___ftdiv+1)& (0+255),c
  3286  000A12  6A32               	clrf	(??___ftdiv+2)& (0+255),c
  3287  000A14  342B               	rlcf	___ftdiv@f1+1,w,c
  3288  000A16  3630               	rlcf	??___ftdiv& (0+255),f,c
  3289  000A18  E301               	bnc	u2521
  3290  000A1A  8031               	bsf	(??___ftdiv+1)& (0+255),0,c
  3291  000A1C                     u2521:
  3292  000A1C  5030               	movf	??___ftdiv,w,c
  3293  000A1E  6E37               	movwf	___ftdiv@exp,c
  3294  000A20  5037               	movf	___ftdiv@exp,w,c
  3295  000A22  A4D8               	btfss	status,2,c
  3296  000A24  D007               	goto	l2379
  3297  000A26  0E00               	movlw	0
  3298  000A28  6E2A               	movwf	?___ftdiv,c
  3299  000A2A  0E00               	movlw	0
  3300  000A2C  6E2B               	movwf	?___ftdiv+1,c
  3301  000A2E  0E00               	movlw	0
  3302  000A30  6E2C               	movwf	?___ftdiv+2,c
  3303  000A32  0012               	return	
  3304  000A34                     l2379:
  3305  000A34  C02F  F030         	movff	___ftdiv@f2+2,??___ftdiv
  3306  000A38  6A31               	clrf	(??___ftdiv+1)& (0+255),c
  3307  000A3A  6A32               	clrf	(??___ftdiv+2)& (0+255),c
  3308  000A3C  342E               	rlcf	___ftdiv@f2+1,w,c
  3309  000A3E  3630               	rlcf	??___ftdiv& (0+255),f,c
  3310  000A40  E301               	bnc	u2541
  3311  000A42  8031               	bsf	(??___ftdiv+1)& (0+255),0,c
  3312  000A44                     u2541:
  3313  000A44  5030               	movf	??___ftdiv,w,c
  3314  000A46  6E38               	movwf	___ftdiv@sign,c
  3315  000A48  5038               	movf	___ftdiv@sign,w,c
  3316  000A4A  A4D8               	btfss	status,2,c
  3317  000A4C  D007               	goto	l2385
  3318  000A4E  0E00               	movlw	0
  3319  000A50  6E2A               	movwf	?___ftdiv,c
  3320  000A52  0E00               	movlw	0
  3321  000A54  6E2B               	movwf	?___ftdiv+1,c
  3322  000A56  0E00               	movlw	0
  3323  000A58  6E2C               	movwf	?___ftdiv+2,c
  3324  000A5A  0012               	return	
  3325  000A5C                     l2385:
  3326  000A5C  0E00               	movlw	0
  3327  000A5E  6E34               	movwf	___ftdiv@f3,c
  3328  000A60  0E00               	movlw	0
  3329  000A62  6E35               	movwf	___ftdiv@f3+1,c
  3330  000A64  0E00               	movlw	0
  3331  000A66  6E36               	movwf	___ftdiv@f3+2,c
  3332  000A68  5038               	movf	___ftdiv@sign,w,c
  3333  000A6A  0F89               	addlw	137
  3334  000A6C  5E37               	subwf	___ftdiv@exp,f,c
  3335  000A6E  C02C  F038         	movff	___ftdiv@f1+2,___ftdiv@sign
  3336  000A72  502F               	movf	___ftdiv@f2+2,w,c
  3337  000A74  1A38               	xorwf	___ftdiv@sign,f,c
  3338  000A76  0E80               	movlw	128
  3339  000A78  1638               	andwf	___ftdiv@sign,f,c
  3340  000A7A  8E2B               	bsf	___ftdiv@f1+1,7,c
  3341  000A7C  0EFF               	movlw	255
  3342  000A7E  162A               	andwf	___ftdiv@f1,f,c
  3343  000A80  0EFF               	movlw	255
  3344  000A82  162B               	andwf	___ftdiv@f1+1,f,c
  3345  000A84  0E00               	movlw	0
  3346  000A86  162C               	andwf	___ftdiv@f1+2,f,c
  3347  000A88  8E2E               	bsf	___ftdiv@f2+1,7,c
  3348  000A8A  0EFF               	movlw	255
  3349  000A8C  162D               	andwf	___ftdiv@f2,f,c
  3350  000A8E  0EFF               	movlw	255
  3351  000A90  162E               	andwf	___ftdiv@f2+1,f,c
  3352  000A92  0E00               	movlw	0
  3353  000A94  162F               	andwf	___ftdiv@f2+2,f,c
  3354  000A96  0E18               	movlw	24
  3355  000A98  6E33               	movwf	___ftdiv@cntr,c
  3356  000A9A                     l2405:
  3357  000A9A  90D8               	bcf	status,0,c
  3358  000A9C  3634               	rlcf	___ftdiv@f3,f,c
  3359  000A9E  3635               	rlcf	___ftdiv@f3+1,f,c
  3360  000AA0  3636               	rlcf	___ftdiv@f3+2,f,c
  3361  000AA2  502D               	movf	___ftdiv@f2,w,c
  3362  000AA4  5C2A               	subwf	___ftdiv@f1,w,c
  3363  000AA6  502E               	movf	___ftdiv@f2+1,w,c
  3364  000AA8  582B               	subwfb	___ftdiv@f1+1,w,c
  3365  000AAA  502F               	movf	___ftdiv@f2+2,w,c
  3366  000AAC  582C               	subwfb	___ftdiv@f1+2,w,c
  3367  000AAE  A0D8               	btfss	status,0,c
  3368  000AB0  D007               	goto	l688
  3369  000AB2  502D               	movf	___ftdiv@f2,w,c
  3370  000AB4  5E2A               	subwf	___ftdiv@f1,f,c
  3371  000AB6  502E               	movf	___ftdiv@f2+1,w,c
  3372  000AB8  5A2B               	subwfb	___ftdiv@f1+1,f,c
  3373  000ABA  502F               	movf	___ftdiv@f2+2,w,c
  3374  000ABC  5A2C               	subwfb	___ftdiv@f1+2,f,c
  3375  000ABE  8034               	bsf	___ftdiv@f3,0,c
  3376  000AC0                     l688:
  3377  000AC0  90D8               	bcf	status,0,c
  3378  000AC2  362A               	rlcf	___ftdiv@f1,f,c
  3379  000AC4  362B               	rlcf	___ftdiv@f1+1,f,c
  3380  000AC6  362C               	rlcf	___ftdiv@f1+2,f,c
  3381  000AC8  2E33               	decfsz	___ftdiv@cntr,f,c
  3382  000ACA  D7E7               	goto	l2405
  3383  000ACC  C034  F010         	movff	___ftdiv@f3,___ftpack@arg
  3384  000AD0  C035  F011         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3385  000AD4  C036  F012         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3386  000AD8  C037  F013         	movff	___ftdiv@exp,___ftpack@exp
  3387  000ADC  C038  F014         	movff	___ftdiv@sign,___ftpack@sign
  3388  000AE0  EC45  F006         	call	___ftpack	;wreg free
  3389  000AE4  C010  F02A         	movff	?___ftpack,?___ftdiv
  3390  000AE8  C011  F02B         	movff	?___ftpack+1,?___ftdiv+1
  3391  000AEC  C012  F02C         	movff	?___ftpack+2,?___ftdiv+2
  3392  000AF0  0012               	return	
  3393  000AF2                     __end_of___ftdiv:
  3394                           	opt stack 0
  3395                           tblptru	equ	0xFF8
  3396                           tblptrh	equ	0xFF7
  3397                           tblptrl	equ	0xFF6
  3398                           tablat	equ	0xFF5
  3399                           intcon	equ	0xFF2
  3400                           intcon2	equ	0xFF1
  3401                           postinc0	equ	0xFEE
  3402                           wreg	equ	0xFE8
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _PID_SetPoint *****************
  3406 ;; Defined at:
  3407 ;;		line 51 in file "PID.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  newSetPoint     2   27[COMRAM] int 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;Total ram usage:        2 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    6
  3428 ;; This function calls:
  3429 ;;		___awtoft
  3430 ;; This function is called by:
  3431 ;;		_InitHardware
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text26
  3436  0010EA                     __ptext26:
  3437                           	opt stack 0
  3438  0010EA                     _PID_SetPoint:
  3439                           	opt stack 23
  3440                           
  3441                           ;PID.c: 53: PIDConfig.SetPoint = newSetPoint;
  3442                           
  3443                           ;incstack = 0
  3444  0010EA  C01C  F018         	movff	PID_SetPoint@newSetPoint,___awtoft@c
  3445  0010EE  C01D  F019         	movff	PID_SetPoint@newSetPoint+1,___awtoft@c+1
  3446  0010F2  ECC9  F007         	call	___awtoft	;wreg free
  3447  0010F6  C018  F04C         	movff	?___awtoft,_PIDConfig+13	;volatile
  3448  0010FA  C019  F04D         	movff	?___awtoft+1,_PIDConfig+14	;volatile
  3449  0010FE  C01A  F04E         	movff	?___awtoft+2,_PIDConfig+15	;volatile
  3450  001102  0012               	return		;funcret
  3451  001104                     __end_of_PID_SetPoint:
  3452                           	opt stack 0
  3453                           tblptru	equ	0xFF8
  3454                           tblptrh	equ	0xFF7
  3455                           tblptrl	equ	0xFF6
  3456                           tablat	equ	0xFF5
  3457                           intcon	equ	0xFF2
  3458                           intcon2	equ	0xFF1
  3459                           postinc0	equ	0xFEE
  3460                           wreg	equ	0xFE8
  3461                           status	equ	0xFD8
  3462                           
  3463 ;; *************** function _PID_SetOutputLimits *****************
  3464 ;; Defined at:
  3465 ;;		line 83 in file "PID.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  Min             2   36[COMRAM] int 
  3468 ;;  Max             2   38[COMRAM] int 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3480 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;Total ram usage:        5 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    6
  3487 ;; This function calls:
  3488 ;;		___awtoft
  3489 ;;		___ftge
  3490 ;; This function is called by:
  3491 ;;		_InitHardware
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text27
  3496  00091A                     __ptext27:
  3497                           	opt stack 0
  3498  00091A                     _PID_SetOutputLimits:
  3499                           	opt stack 23
  3500                           
  3501                           ;PID.c: 85: if(Min > Max) return;
  3502                           
  3503                           ;incstack = 0
  3504  00091A  5025               	movf	PID_SetOutputLimits@Min,w,c
  3505  00091C  5C27               	subwf	PID_SetOutputLimits@Max,w,c
  3506  00091E  5028               	movf	PID_SetOutputLimits@Max+1,w,c
  3507  000920  0A80               	xorlw	128
  3508  000922  6E29               	movwf	??_PID_SetOutputLimits& (0+255),c
  3509  000924  5026               	movf	PID_SetOutputLimits@Min+1,w,c
  3510  000926  0A80               	xorlw	128
  3511  000928  5829               	subwfb	??_PID_SetOutputLimits& (0+255),w,c
  3512  00092A  A0D8               	btfss	status,0,c
  3513  00092C  0012               	return	
  3514                           
  3515                           ;PID.c: 86: PIDConfig.Min = Min;
  3516  00092E  C025  F03F         	movff	PID_SetOutputLimits@Min,_PIDConfig	;volatile
  3517  000932  C026  F040         	movff	PID_SetOutputLimits@Min+1,_PIDConfig+1	;volatile
  3518                           
  3519                           ;PID.c: 87: PIDConfig.Max = Max;
  3520  000936  C027  F041         	movff	PID_SetOutputLimits@Max,_PIDConfig+2	;volatile
  3521  00093A  C028  F042         	movff	PID_SetOutputLimits@Max+1,_PIDConfig+3	;volatile
  3522                           
  3523                           ;PID.c: 89: if (Output > PIDConfig.Max) Output = PIDConfig.Max;
  3524  00093E  0100               	movlb	0	; () banked
  3525  000940  516B               	movf	_Output& (0+255),w,b
  3526  000942  5C41               	subwf	_PIDConfig+2,w,c	;volatile
  3527  000944  5042               	movf	_PIDConfig+3,w,c	;volatile
  3528  000946  0A80               	xorlw	128
  3529  000948  6E29               	movwf	??_PID_SetOutputLimits& (0+255),c
  3530  00094A  0100               	movlb	0	; () banked
  3531  00094C  516C               	movf	(_Output+1)& (0+255),w,b
  3532  00094E  0A80               	xorlw	128
  3533  000950  5829               	subwfb	??_PID_SetOutputLimits& (0+255),w,c
  3534  000952  B0D8               	btfsc	status,0,c
  3535  000954  D005               	goto	l2477
  3536                           
  3537                           ; BSR set to: 0
  3538  000956  C041  F06B         	movff	_PIDConfig+2,_Output	;volatile
  3539  00095A  C042  F06C         	movff	_PIDConfig+3,_Output+1	;volatile
  3540  00095E  D010               	goto	l2481
  3541  000960                     l2477:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;PID.c: 90: else if (Output < PIDConfig.Min) Output = PIDConfig.Min;
  3545  000960  503F               	movf	_PIDConfig,w,c	;volatile
  3546  000962  0100               	movlb	0	; () banked
  3547  000964  5D6B               	subwf	_Output& (0+255),w,b
  3548  000966  0100               	movlb	0	; () banked
  3549  000968  516C               	movf	(_Output+1)& (0+255),w,b
  3550  00096A  0A80               	xorlw	128
  3551  00096C  6E29               	movwf	??_PID_SetOutputLimits& (0+255),c
  3552  00096E  5040               	movf	_PIDConfig+1,w,c	;volatile
  3553  000970  0A80               	xorlw	128
  3554  000972  5829               	subwfb	??_PID_SetOutputLimits& (0+255),w,c
  3555  000974  B0D8               	btfsc	status,0,c
  3556  000976  D004               	goto	l2481
  3557                           
  3558                           ; BSR set to: 0
  3559  000978  C03F  F06B         	movff	_PIDConfig,_Output	;volatile
  3560  00097C  C040  F06C         	movff	_PIDConfig+1,_Output+1	;volatile
  3561  000980                     l2481:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;PID.c: 92: if (ITerm > PIDConfig.Max) ITerm= PIDConfig.Max;
  3565  000980  C041  F018         	movff	_PIDConfig+2,___awtoft@c	;volatile
  3566  000984  C042  F019         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  3567  000988  ECC9  F007         	call	___awtoft	;wreg free
  3568  00098C  C018  F01C         	movff	?___awtoft,___ftge@ff1
  3569  000990  C019  F01D         	movff	?___awtoft+1,___ftge@ff1+1
  3570  000994  C01A  F01E         	movff	?___awtoft+2,___ftge@ff1+2
  3571  000998  C063  F01F         	movff	_ITerm,___ftge@ff2
  3572  00099C  C064  F020         	movff	_ITerm+1,___ftge@ff2+1
  3573  0009A0  C065  F021         	movff	_ITerm+2,___ftge@ff2+2
  3574  0009A4  EC3D  F007         	call	___ftge	;wreg free
  3575  0009A8  B0D8               	btfsc	status,0,c
  3576  0009AA  D00D               	goto	l2485
  3577  0009AC  C041  F018         	movff	_PIDConfig+2,___awtoft@c	;volatile
  3578  0009B0  C042  F019         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  3579  0009B4  ECC9  F007         	call	___awtoft	;wreg free
  3580  0009B8  C018  F063         	movff	?___awtoft,_ITerm
  3581  0009BC  C019  F064         	movff	?___awtoft+1,_ITerm+1
  3582  0009C0  C01A  F065         	movff	?___awtoft+2,_ITerm+2
  3583  0009C4  0012               	return	
  3584  0009C6                     l2485:
  3585                           
  3586                           ;PID.c: 93: else if (ITerm < PIDConfig.Min) ITerm= PIDConfig.Min;
  3587  0009C6  C063  F01C         	movff	_ITerm,___ftge@ff1
  3588  0009CA  C064  F01D         	movff	_ITerm+1,___ftge@ff1+1
  3589  0009CE  C065  F01E         	movff	_ITerm+2,___ftge@ff1+2
  3590  0009D2  C03F  F018         	movff	_PIDConfig,___awtoft@c	;volatile
  3591  0009D6  C040  F019         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  3592  0009DA  ECC9  F007         	call	___awtoft	;wreg free
  3593  0009DE  C018  F01F         	movff	?___awtoft,___ftge@ff2
  3594  0009E2  C019  F020         	movff	?___awtoft+1,___ftge@ff2+1
  3595  0009E6  C01A  F021         	movff	?___awtoft+2,___ftge@ff2+2
  3596  0009EA  EC3D  F007         	call	___ftge	;wreg free
  3597  0009EE  B0D8               	btfsc	status,0,c
  3598  0009F0  0012               	return	
  3599  0009F2  C03F  F018         	movff	_PIDConfig,___awtoft@c	;volatile
  3600  0009F6  C040  F019         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  3601  0009FA  ECC9  F007         	call	___awtoft	;wreg free
  3602  0009FE  C018  F063         	movff	?___awtoft,_ITerm
  3603  000A02  C019  F064         	movff	?___awtoft+1,_ITerm+1
  3604  000A06  C01A  F065         	movff	?___awtoft+2,_ITerm+2
  3605  000A0A  0012               	return	
  3606  000A0C                     __end_of_PID_SetOutputLimits:
  3607                           	opt stack 0
  3608                           tblptru	equ	0xFF8
  3609                           tblptrh	equ	0xFF7
  3610                           tblptrl	equ	0xFF6
  3611                           tablat	equ	0xFF5
  3612                           intcon	equ	0xFF2
  3613                           intcon2	equ	0xFF1
  3614                           postinc0	equ	0xFEE
  3615                           wreg	equ	0xFE8
  3616                           status	equ	0xFD8
  3617                           
  3618 ;; *************** function _PID_SetMode *****************
  3619 ;; Defined at:
  3620 ;;		line 99 in file "PID.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  Mode            2   36[COMRAM] int 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  newAuto         1   38[COMRAM] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;Total ram usage:        3 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    7
  3641 ;; This function calls:
  3642 ;;		_PID_Initialize
  3643 ;; This function is called by:
  3644 ;;		_InitHardware
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text28
  3649  000FCA                     __ptext28:
  3650                           	opt stack 0
  3651  000FCA                     _PID_SetMode:
  3652                           	opt stack 22
  3653                           
  3654                           ;PID.c: 101: unsigned char newAuto = (Mode == 1);
  3655                           
  3656                           ;incstack = 0
  3657  000FCA  0425               	decf	PID_SetMode@Mode,w,c
  3658  000FCC  1026               	iorwf	PID_SetMode@Mode+1,w,c
  3659  000FCE  A4D8               	btfss	status,2,c
  3660  000FD0  D002               	goto	u2700
  3661  000FD2  0E01               	movlw	1
  3662  000FD4  D001               	goto	u2710
  3663  000FD6                     u2700:
  3664  000FD6  0E00               	movlw	0
  3665  000FD8                     u2710:
  3666  000FD8  6E27               	movwf	PID_SetMode@newAuto,c
  3667                           
  3668                           ;PID.c: 102: if (newAuto == !inAuto)
  3669  000FDA  504F               	movf	_inAuto,w,c
  3670  000FDC  A4D8               	btfss	status,2,c
  3671  000FDE  D002               	goto	u2720
  3672  000FE0  0E01               	movlw	1
  3673  000FE2  D001               	goto	u2730
  3674  000FE4                     u2720:
  3675  000FE4  0E00               	movlw	0
  3676  000FE6                     u2730:
  3677  000FE6  1827               	xorwf	PID_SetMode@newAuto,w,c
  3678  000FE8  B4D8               	btfsc	status,2,c
  3679                           
  3680                           ;PID.c: 103: {
  3681                           ;PID.c: 105: PID_Initialize();
  3682  000FEA  ECE7  F005         	call	_PID_Initialize	;wreg free
  3683                           
  3684                           ;PID.c: 106: }
  3685                           ;PID.c: 107: inAuto = newAuto;
  3686  000FEE  C027  F04F         	movff	PID_SetMode@newAuto,_inAuto
  3687  000FF2  0012               	return		;funcret
  3688  000FF4                     __end_of_PID_SetMode:
  3689                           	opt stack 0
  3690                           tblptru	equ	0xFF8
  3691                           tblptrh	equ	0xFF7
  3692                           tblptrl	equ	0xFF6
  3693                           tablat	equ	0xFF5
  3694                           intcon	equ	0xFF2
  3695                           intcon2	equ	0xFF1
  3696                           postinc0	equ	0xFEE
  3697                           wreg	equ	0xFE8
  3698                           status	equ	0xFD8
  3699                           
  3700 ;; *************** function _PID_Initialize *****************
  3701 ;; Defined at:
  3702 ;;		line 109 in file "PID.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:    6
  3723 ;; This function calls:
  3724 ;;		___awtoft
  3725 ;;		___ftge
  3726 ;; This function is called by:
  3727 ;;		_PID_SetMode
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text29
  3732  000BCE                     __ptext29:
  3733                           	opt stack 0
  3734  000BCE                     _PID_Initialize:
  3735                           	opt stack 22
  3736                           
  3737                           ;PID.c: 111: lastInput = Input;
  3738                           
  3739                           ;incstack = 0
  3740  000BCE  C06D  F018         	movff	_Input,___awtoft@c
  3741  000BD2  C06E  F019         	movff	_Input+1,___awtoft@c+1
  3742  000BD6  ECC9  F007         	call	___awtoft	;wreg free
  3743  000BDA  C018  F060         	movff	?___awtoft,_lastInput
  3744  000BDE  C019  F061         	movff	?___awtoft+1,_lastInput+1
  3745  000BE2  C01A  F062         	movff	?___awtoft+2,_lastInput+2
  3746                           
  3747                           ;PID.c: 112: ITerm = Output;
  3748  000BE6  C06B  F018         	movff	_Output,___awtoft@c
  3749  000BEA  C06C  F019         	movff	_Output+1,___awtoft@c+1
  3750  000BEE  ECC9  F007         	call	___awtoft	;wreg free
  3751  000BF2  C018  F063         	movff	?___awtoft,_ITerm
  3752  000BF6  C019  F064         	movff	?___awtoft+1,_ITerm+1
  3753  000BFA  C01A  F065         	movff	?___awtoft+2,_ITerm+2
  3754                           
  3755                           ;PID.c: 113: if (ITerm > PIDConfig.Max) ITerm = PIDConfig.Max;
  3756  000BFE  C041  F018         	movff	_PIDConfig+2,___awtoft@c	;volatile
  3757  000C02  C042  F019         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  3758  000C06  ECC9  F007         	call	___awtoft	;wreg free
  3759  000C0A  C018  F01C         	movff	?___awtoft,___ftge@ff1
  3760  000C0E  C019  F01D         	movff	?___awtoft+1,___ftge@ff1+1
  3761  000C12  C01A  F01E         	movff	?___awtoft+2,___ftge@ff1+2
  3762  000C16  C063  F01F         	movff	_ITerm,___ftge@ff2
  3763  000C1A  C064  F020         	movff	_ITerm+1,___ftge@ff2+1
  3764  000C1E  C065  F021         	movff	_ITerm+2,___ftge@ff2+2
  3765  000C22  EC3D  F007         	call	___ftge	;wreg free
  3766  000C26  B0D8               	btfsc	status,0,c
  3767  000C28  D00D               	goto	l2443
  3768  000C2A  C041  F018         	movff	_PIDConfig+2,___awtoft@c	;volatile
  3769  000C2E  C042  F019         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  3770  000C32  ECC9  F007         	call	___awtoft	;wreg free
  3771  000C36  C018  F063         	movff	?___awtoft,_ITerm
  3772  000C3A  C019  F064         	movff	?___awtoft+1,_ITerm+1
  3773  000C3E  C01A  F065         	movff	?___awtoft+2,_ITerm+2
  3774  000C42  0012               	return	
  3775  000C44                     l2443:
  3776                           
  3777                           ;PID.c: 114: else if (ITerm < PIDConfig.Min) ITerm = PIDConfig.Min;
  3778  000C44  C063  F01C         	movff	_ITerm,___ftge@ff1
  3779  000C48  C064  F01D         	movff	_ITerm+1,___ftge@ff1+1
  3780  000C4C  C065  F01E         	movff	_ITerm+2,___ftge@ff1+2
  3781  000C50  C03F  F018         	movff	_PIDConfig,___awtoft@c	;volatile
  3782  000C54  C040  F019         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  3783  000C58  ECC9  F007         	call	___awtoft	;wreg free
  3784  000C5C  C018  F01F         	movff	?___awtoft,___ftge@ff2
  3785  000C60  C019  F020         	movff	?___awtoft+1,___ftge@ff2+1
  3786  000C64  C01A  F021         	movff	?___awtoft+2,___ftge@ff2+2
  3787  000C68  EC3D  F007         	call	___ftge	;wreg free
  3788  000C6C  B0D8               	btfsc	status,0,c
  3789  000C6E  0012               	return	
  3790  000C70  C03F  F018         	movff	_PIDConfig,___awtoft@c	;volatile
  3791  000C74  C040  F019         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  3792  000C78  ECC9  F007         	call	___awtoft	;wreg free
  3793  000C7C  C018  F063         	movff	?___awtoft,_ITerm
  3794  000C80  C019  F064         	movff	?___awtoft+1,_ITerm+1
  3795  000C84  C01A  F065         	movff	?___awtoft+2,_ITerm+2
  3796  000C88  0012               	return	
  3797  000C8A                     __end_of_PID_Initialize:
  3798                           	opt stack 0
  3799                           tblptru	equ	0xFF8
  3800                           tblptrh	equ	0xFF7
  3801                           tblptrl	equ	0xFF6
  3802                           tablat	equ	0xFF5
  3803                           intcon	equ	0xFF2
  3804                           intcon2	equ	0xFF1
  3805                           postinc0	equ	0xFEE
  3806                           wreg	equ	0xFE8
  3807                           status	equ	0xFD8
  3808                           
  3809 ;; *************** function ___ftge *****************
  3810 ;; Defined at:
  3811 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftge.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  ff1             3   27[COMRAM] float 
  3814 ;;  ff2             3   30[COMRAM] float 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, status,0
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3826 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;Total ram usage:        9 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    4
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_PID_Control
  3837 ;;		_PID_SetOutputLimits
  3838 ;;		_PID_Initialize
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text30
  3843  000E7A                     __ptext30:
  3844                           	opt stack 0
  3845  000E7A                     ___ftge:
  3846                           	opt stack 22
  3847                           
  3848                           ;incstack = 0
  3849  000E7A  AE1E               	btfss	___ftge@ff1+2,7,c
  3850  000E7C  D016               	goto	l2271
  3851  000E7E  C01C  F022         	movff	___ftge@ff1,??___ftge
  3852  000E82  C01D  F023         	movff	___ftge@ff1+1,??___ftge+1
  3853  000E86  C01E  F024         	movff	___ftge@ff1+2,??___ftge+2
  3854  000E8A  1E22               	comf	??___ftge,f,c
  3855  000E8C  1E23               	comf	??___ftge+1,f,c
  3856  000E8E  1E24               	comf	??___ftge+2,f,c
  3857  000E90  2A22               	incf	??___ftge,f,c
  3858  000E92  0E00               	movlw	0
  3859  000E94  2223               	addwfc	??___ftge+1,f,c
  3860  000E96  2224               	addwfc	??___ftge+2,f,c
  3861  000E98  0E00               	movlw	0
  3862  000E9A  2422               	addwf	??___ftge,w,c
  3863  000E9C  6E1C               	movwf	___ftge@ff1,c
  3864  000E9E  0E00               	movlw	0
  3865  000EA0  2023               	addwfc	??___ftge+1,w,c
  3866  000EA2  6E1D               	movwf	___ftge@ff1+1,c
  3867  000EA4  0E80               	movlw	128
  3868  000EA6  2024               	addwfc	??___ftge+2,w,c
  3869  000EA8  6E1E               	movwf	___ftge@ff1+2,c
  3870  000EAA                     l2271:
  3871  000EAA  AE21               	btfss	___ftge@ff2+2,7,c
  3872  000EAC  D016               	goto	l2275
  3873  000EAE  C01F  F022         	movff	___ftge@ff2,??___ftge
  3874  000EB2  C020  F023         	movff	___ftge@ff2+1,??___ftge+1
  3875  000EB6  C021  F024         	movff	___ftge@ff2+2,??___ftge+2
  3876  000EBA  1E22               	comf	??___ftge,f,c
  3877  000EBC  1E23               	comf	??___ftge+1,f,c
  3878  000EBE  1E24               	comf	??___ftge+2,f,c
  3879  000EC0  2A22               	incf	??___ftge,f,c
  3880  000EC2  0E00               	movlw	0
  3881  000EC4  2223               	addwfc	??___ftge+1,f,c
  3882  000EC6  2224               	addwfc	??___ftge+2,f,c
  3883  000EC8  0E00               	movlw	0
  3884  000ECA  2422               	addwf	??___ftge,w,c
  3885  000ECC  6E1F               	movwf	___ftge@ff2,c
  3886  000ECE  0E00               	movlw	0
  3887  000ED0  2023               	addwfc	??___ftge+1,w,c
  3888  000ED2  6E20               	movwf	___ftge@ff2+1,c
  3889  000ED4  0E80               	movlw	128
  3890  000ED6  2024               	addwfc	??___ftge+2,w,c
  3891  000ED8  6E21               	movwf	___ftge@ff2+2,c
  3892  000EDA                     l2275:
  3893  000EDA  0E00               	movlw	0
  3894  000EDC  1A1C               	xorwf	___ftge@ff1,f,c
  3895  000EDE  0E00               	movlw	0
  3896  000EE0  1A1D               	xorwf	___ftge@ff1+1,f,c
  3897  000EE2  0E80               	movlw	128
  3898  000EE4  1A1E               	xorwf	___ftge@ff1+2,f,c
  3899  000EE6  0E00               	movlw	0
  3900  000EE8  1A1F               	xorwf	___ftge@ff2,f,c
  3901  000EEA  0E00               	movlw	0
  3902  000EEC  1A20               	xorwf	___ftge@ff2+1,f,c
  3903  000EEE  0E80               	movlw	128
  3904  000EF0  1A21               	xorwf	___ftge@ff2+2,f,c
  3905  000EF2  501F               	movf	___ftge@ff2,w,c
  3906  000EF4  5C1C               	subwf	___ftge@ff1,w,c
  3907  000EF6  5020               	movf	___ftge@ff2+1,w,c
  3908  000EF8  581D               	subwfb	___ftge@ff1+1,w,c
  3909  000EFA  5021               	movf	___ftge@ff2+2,w,c
  3910  000EFC  581E               	subwfb	___ftge@ff1+2,w,c
  3911  000EFE  B0D8               	btfsc	status,0,c
  3912  000F00  D002               	goto	l2281
  3913  000F02  90D8               	bcf	status,0,c
  3914  000F04  0012               	return	
  3915  000F06                     l2281:
  3916  000F06  80D8               	bsf	status,0,c
  3917  000F08  0012               	return	
  3918  000F0A                     __end_of___ftge:
  3919                           	opt stack 0
  3920                           tblptru	equ	0xFF8
  3921                           tblptrh	equ	0xFF7
  3922                           tblptrl	equ	0xFF6
  3923                           tablat	equ	0xFF5
  3924                           intcon	equ	0xFF2
  3925                           intcon2	equ	0xFF1
  3926                           postinc0	equ	0xFEE
  3927                           wreg	equ	0xFE8
  3928                           status	equ	0xFD8
  3929                           
  3930 ;; *************** function ___awtoft *****************
  3931 ;; Defined at:
  3932 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awtoft.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  c               2   23[COMRAM] int 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  sign            1   26[COMRAM] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  3   23[COMRAM] float 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3946 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;Total ram usage:        4 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    5
  3953 ;; This function calls:
  3954 ;;		___ftpack
  3955 ;; This function is called by:
  3956 ;;		_PID_Control
  3957 ;;		_PID_SetPoint
  3958 ;;		_PID_SetTunings
  3959 ;;		_PID_SetSampleTime
  3960 ;;		_PID_SetOutputLimits
  3961 ;;		_PID_Initialize
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text31
  3966  000F92                     __ptext31:
  3967                           	opt stack 0
  3968  000F92                     ___awtoft:
  3969                           	opt stack 21
  3970                           
  3971                           ;incstack = 0
  3972  000F92  0E00               	movlw	0
  3973  000F94  6E1B               	movwf	___awtoft@sign,c
  3974  000F96  AE19               	btfss	___awtoft@c+1,7,c
  3975  000F98  D006               	goto	l2263
  3976  000F9A  6C18               	negf	___awtoft@c,c
  3977  000F9C  1E19               	comf	___awtoft@c+1,f,c
  3978  000F9E  B0D8               	btfsc	status,0,c
  3979  000FA0  2A19               	incf	___awtoft@c+1,f,c
  3980  000FA2  0E01               	movlw	1
  3981  000FA4  6E1B               	movwf	___awtoft@sign,c
  3982  000FA6                     l2263:
  3983  000FA6  C018  F010         	movff	___awtoft@c,___ftpack@arg
  3984  000FAA  C019  F011         	movff	___awtoft@c+1,___ftpack@arg+1
  3985  000FAE  6A12               	clrf	___ftpack@arg+2,c
  3986  000FB0  0E8E               	movlw	142
  3987  000FB2  6E13               	movwf	___ftpack@exp,c
  3988  000FB4  C01B  F014         	movff	___awtoft@sign,___ftpack@sign
  3989  000FB8  EC45  F006         	call	___ftpack	;wreg free
  3990  000FBC  C010  F018         	movff	?___ftpack,?___awtoft
  3991  000FC0  C011  F019         	movff	?___ftpack+1,?___awtoft+1
  3992  000FC4  C012  F01A         	movff	?___ftpack+2,?___awtoft+2
  3993  000FC8  0012               	return	
  3994  000FCA                     __end_of___awtoft:
  3995                           	opt stack 0
  3996                           tblptru	equ	0xFF8
  3997                           tblptrh	equ	0xFF7
  3998                           tblptrl	equ	0xFF6
  3999                           tablat	equ	0xFF5
  4000                           intcon	equ	0xFF2
  4001                           intcon2	equ	0xFF1
  4002                           postinc0	equ	0xFEE
  4003                           wreg	equ	0xFE8
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function ___ftpack *****************
  4007 ;; Defined at:
  4008 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\float.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  arg             3   15[COMRAM] unsigned um
  4011 ;;  exp             1   18[COMRAM] unsigned char 
  4012 ;;  sign            1   19[COMRAM] unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  3   15[COMRAM] float 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4024 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;Total ram usage:        8 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    4
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		___awtoft
  4035 ;;		___ftadd
  4036 ;;		___ftdiv
  4037 ;;		___ftmul
  4038 ;;		___lwtoft
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text32
  4043  000C8A                     __ptext32:
  4044                           	opt stack 0
  4045  000C8A                     ___ftpack:
  4046                           	opt stack 22
  4047                           
  4048                           ;incstack = 0
  4049  000C8A  5013               	movf	___ftpack@exp,w,c
  4050  000C8C  B4D8               	btfsc	status,2,c
  4051  000C8E  D005               	goto	l2105
  4052  000C90  5010               	movf	___ftpack@arg,w,c
  4053  000C92  1011               	iorwf	___ftpack@arg+1,w,c
  4054  000C94  1012               	iorwf	___ftpack@arg+2,w,c
  4055  000C96  A4D8               	btfss	status,2,c
  4056  000C98  D00C               	goto	l2111
  4057  000C9A                     l2105:
  4058  000C9A  0E00               	movlw	0
  4059  000C9C  6E10               	movwf	?___ftpack,c
  4060  000C9E  0E00               	movlw	0
  4061  000CA0  6E11               	movwf	?___ftpack+1,c
  4062  000CA2  0E00               	movlw	0
  4063  000CA4  6E12               	movwf	?___ftpack+2,c
  4064  000CA6  0012               	return	
  4065  000CA8                     l2109:
  4066  000CA8  2A13               	incf	___ftpack@exp,f,c
  4067  000CAA  90D8               	bcf	status,0,c
  4068  000CAC  3212               	rrcf	___ftpack@arg+2,f,c
  4069  000CAE  3211               	rrcf	___ftpack@arg+1,f,c
  4070  000CB0  3210               	rrcf	___ftpack@arg,f,c
  4071  000CB2                     l2111:
  4072  000CB2  0E00               	movlw	0
  4073  000CB4  1410               	andwf	___ftpack@arg,w,c
  4074  000CB6  6E15               	movwf	??___ftpack& (0+255),c
  4075  000CB8  0E00               	movlw	0
  4076  000CBA  1411               	andwf	___ftpack@arg+1,w,c
  4077  000CBC  6E16               	movwf	(??___ftpack+1)& (0+255),c
  4078  000CBE  0EFE               	movlw	254
  4079  000CC0  1412               	andwf	___ftpack@arg+2,w,c
  4080  000CC2  6E17               	movwf	(??___ftpack+2)& (0+255),c
  4081  000CC4  5015               	movf	??___ftpack,w,c
  4082  000CC6  1016               	iorwf	??___ftpack+1,w,c
  4083  000CC8  1017               	iorwf	??___ftpack+2,w,c
  4084  000CCA  B4D8               	btfsc	status,2,c
  4085  000CCC  D00C               	goto	l2117
  4086  000CCE  D7EC               	goto	l2109
  4087  000CD0                     l2113:
  4088  000CD0  2A13               	incf	___ftpack@exp,f,c
  4089  000CD2  0E01               	movlw	1
  4090  000CD4  2610               	addwf	___ftpack@arg,f,c
  4091  000CD6  0E00               	movlw	0
  4092  000CD8  2211               	addwfc	___ftpack@arg+1,f,c
  4093  000CDA  0E00               	movlw	0
  4094  000CDC  2212               	addwfc	___ftpack@arg+2,f,c
  4095  000CDE  90D8               	bcf	status,0,c
  4096  000CE0  3212               	rrcf	___ftpack@arg+2,f,c
  4097  000CE2  3211               	rrcf	___ftpack@arg+1,f,c
  4098  000CE4  3210               	rrcf	___ftpack@arg,f,c
  4099  000CE6                     l2117:
  4100  000CE6  0E00               	movlw	0
  4101  000CE8  1410               	andwf	___ftpack@arg,w,c
  4102  000CEA  6E15               	movwf	??___ftpack& (0+255),c
  4103  000CEC  0E00               	movlw	0
  4104  000CEE  1411               	andwf	___ftpack@arg+1,w,c
  4105  000CF0  6E16               	movwf	(??___ftpack+1)& (0+255),c
  4106  000CF2  0EFF               	movlw	255
  4107  000CF4  1412               	andwf	___ftpack@arg+2,w,c
  4108  000CF6  6E17               	movwf	(??___ftpack+2)& (0+255),c
  4109  000CF8  5015               	movf	??___ftpack,w,c
  4110  000CFA  1016               	iorwf	??___ftpack+1,w,c
  4111  000CFC  1017               	iorwf	??___ftpack+2,w,c
  4112  000CFE  B4D8               	btfsc	status,2,c
  4113  000D00  D006               	goto	l2121
  4114  000D02  D7E6               	goto	l2113
  4115  000D04                     l2119:
  4116  000D04  0613               	decf	___ftpack@exp,f,c
  4117  000D06  90D8               	bcf	status,0,c
  4118  000D08  3610               	rlcf	___ftpack@arg,f,c
  4119  000D0A  3611               	rlcf	___ftpack@arg+1,f,c
  4120  000D0C  3612               	rlcf	___ftpack@arg+2,f,c
  4121  000D0E                     l2121:
  4122  000D0E  BE11               	btfsc	___ftpack@arg+1,7,c
  4123  000D10  D003               	goto	l630
  4124  000D12  0E02               	movlw	2
  4125  000D14  6013               	cpfslt	___ftpack@exp,c
  4126  000D16  D7F6               	goto	l2119
  4127  000D18                     l630:
  4128  000D18  A013               	btfss	___ftpack@exp,0,c
  4129  000D1A  9E11               	bcf	___ftpack@arg+1,7,c
  4130  000D1C  90D8               	bcf	status,0,c
  4131  000D1E  3213               	rrcf	___ftpack@exp,f,c
  4132  000D20  5013               	movf	___ftpack@exp,w,c
  4133  000D22  1212               	iorwf	___ftpack@arg+2,f,c
  4134  000D24  5014               	movf	___ftpack@sign,w,c
  4135  000D26  A4D8               	btfss	status,2,c
  4136  000D28  8E12               	bsf	___ftpack@arg+2,7,c
  4137  000D2A  C010  F010         	movff	___ftpack@arg,?___ftpack
  4138  000D2E  C011  F011         	movff	___ftpack@arg+1,?___ftpack+1
  4139  000D32  C012  F012         	movff	___ftpack@arg+2,?___ftpack+2
  4140  000D36  0012               	return	
  4141  000D38                     __end_of___ftpack:
  4142                           	opt stack 0
  4143                           tblptru	equ	0xFF8
  4144                           tblptrh	equ	0xFF7
  4145                           tblptrl	equ	0xFF6
  4146                           tablat	equ	0xFF5
  4147                           intcon	equ	0xFF2
  4148                           intcon2	equ	0xFF1
  4149                           postinc0	equ	0xFEE
  4150                           wreg	equ	0xFE8
  4151                           status	equ	0xFD8
  4152                           
  4153 ;; *************** function _PID_SetControllerDirection *****************
  4154 ;; Defined at:
  4155 ;;		line 95 in file "PID.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  Direction       2   15[COMRAM] int 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		None
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;Total ram usage:        2 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    4
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_InitHardware
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text33
  4184  0011A6                     __ptext33:
  4185                           	opt stack 0
  4186  0011A6                     _PID_SetControllerDirection:
  4187                           	opt stack 25
  4188                           
  4189                           ;PID.c: 97: controllerDirection = Direction;
  4190                           
  4191                           ;incstack = 0
  4192  0011A6  C010  F069         	movff	PID_SetControllerDirection@Direction,_controllerDirection
  4193  0011AA  C011  F06A         	movff	PID_SetControllerDirection@Direction+1,_controllerDirection+1
  4194  0011AE  0012               	return		;funcret
  4195  0011B0                     __end_of_PID_SetControllerDirection:
  4196                           	opt stack 0
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           intcon	equ	0xFF2
  4202                           intcon2	equ	0xFF1
  4203                           postinc0	equ	0xFEE
  4204                           wreg	equ	0xFE8
  4205                           status	equ	0xFD8
  4206                           
  4207 ;; *************** function _ADC_StartConversion *****************
  4208 ;; Defined at:
  4209 ;;		line 87 in file "mcc_generated_files/adc.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		None
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;Total ram usage:        0 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    4
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_InitHardware
  4234 ;;		_TempAcquisition
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text34
  4239  0011BE                     __ptext34:
  4240                           	opt stack 0
  4241  0011BE                     _ADC_StartConversion:
  4242                           	opt stack 23
  4243                           
  4244                           ;adc.c: 90: ADCON0bits.GO_nDONE = 1;
  4245                           
  4246                           ;incstack = 0
  4247  0011BE  82C2               	bsf	4034,1,c	;volatile
  4248  0011C0  0012               	return		;funcret
  4249  0011C2                     __end_of_ADC_StartConversion:
  4250                           	opt stack 0
  4251                           tblptru	equ	0xFF8
  4252                           tblptrh	equ	0xFF7
  4253                           tblptrl	equ	0xFF6
  4254                           tablat	equ	0xFF5
  4255                           intcon	equ	0xFF2
  4256                           intcon2	equ	0xFF1
  4257                           postinc0	equ	0xFEE
  4258                           wreg	equ	0xFE8
  4259                           status	equ	0xFD8
  4260                           
  4261 ;; *************** function _ADC_SelectChannel *****************
  4262 ;; Defined at:
  4263 ;;		line 79 in file "mcc_generated_files/adc.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  channel         1    wreg     enum E6986
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  channel         1   16[COMRAM] enum E6986
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, status,2, status,0
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;Total ram usage:        2 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    4
  4284 ;; This function calls:
  4285 ;;		Nothing
  4286 ;; This function is called by:
  4287 ;;		_InitHardware
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text35
  4292  001104                     __ptext35:
  4293                           	opt stack 0
  4294  001104                     _ADC_SelectChannel:
  4295                           	opt stack 25
  4296                           
  4297                           ;incstack = 0
  4298                           ;ADC_SelectChannel@channel stored from wreg
  4299  001104  6E11               	movwf	ADC_SelectChannel@channel,c
  4300                           
  4301                           ;adc.c: 82: ADCON0bits.CHS = channel;
  4302  001106  C011  F010         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  4303  00110A  4610               	rlncf	??_ADC_SelectChannel,f,c
  4304  00110C  4610               	rlncf	??_ADC_SelectChannel,f,c
  4305  00110E  50C2               	movf	4034,w,c	;volatile
  4306  001110  1810               	xorwf	??_ADC_SelectChannel,w,c
  4307  001112  0B83               	andlw	-125
  4308  001114  1810               	xorwf	??_ADC_SelectChannel,w,c
  4309  001116  6EC2               	movwf	4034,c	;volatile
  4310                           
  4311                           ;adc.c: 84: ADCON0bits.ADON = 1;
  4312  001118  80C2               	bsf	4034,0,c	;volatile
  4313  00111A  0012               	return		;funcret
  4314  00111C                     __end_of_ADC_SelectChannel:
  4315                           	opt stack 0
  4316                           tblptru	equ	0xFF8
  4317                           tblptrh	equ	0xFF7
  4318                           tblptrl	equ	0xFF6
  4319                           tablat	equ	0xFF5
  4320                           intcon	equ	0xFF2
  4321                           intcon2	equ	0xFF1
  4322                           postinc0	equ	0xFEE
  4323                           wreg	equ	0xFE8
  4324                           status	equ	0xFD8
  4325                           
  4326 ;; *************** function _INTERRUPT_InterruptManager *****************
  4327 ;; Defined at:
  4328 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;Total ram usage:       14 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    3
  4349 ;; This function calls:
  4350 ;;		_TMR2_ISR
  4351 ;; This function is called by:
  4352 ;;		Interrupt level 2
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	intcode
  4357  000008                     __pintcode:
  4358                           	opt stack 0
  4359  000008                     _INTERRUPT_InterruptManager:
  4360                           	opt stack 21
  4361                           
  4362                           ;incstack = 0
  4363  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4364  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
  4365  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4366  000012  CFE9 F004          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4367  000016  CFEA F005          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4368  00001A  CFE1 F006          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4369  00001E  CFE2 F007          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4370  000022  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4371  000026  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4372  00002A  CFF3 F00A          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4373  00002E  CFF4 F00B          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4374  000032  CFF6 F00C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4375  000036  CFF7 F00D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4376  00003A  CFF8 F00E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4377  00003E  CFF5 F00F          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4378                           
  4379                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bits.TM
      +                          R2IF == 1)
  4380  000042  BCF2               	btfsc	intcon,6,c	;volatile
  4381  000044  A29D               	btfss	3997,1,c	;volatile
  4382  000046  D003               	goto	i2l100
  4383  000048  B29E               	btfsc	3998,1,c	;volatile
  4384                           
  4385                           ;interrupt_manager.c: 61: {
  4386                           ;interrupt_manager.c: 62: TMR2_ISR();
  4387  00004A  ECFA  F007         	call	_TMR2_ISR	;wreg free
  4388  00004E                     i2l100:
  4389  00004E  C00F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4390  000052  C00E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4391  000056  C00D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4392  00005A  C00C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4393  00005E  C00B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4394  000062  C00A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4395  000066  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4396  00006A  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4397  00006E  C007  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4398  000072  C006  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4399  000076  C005  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4400  00007A  C004  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4401  00007E  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4402  000082  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4403  000086  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4404  000088  0011               	retfie		f
  4405  00008A                     __end_of_INTERRUPT_InterruptManager:
  4406                           	opt stack 0
  4407                           pclatu	equ	0xFFB
  4408                           pclath	equ	0xFFA
  4409                           tblptru	equ	0xFF8
  4410                           tblptrh	equ	0xFF7
  4411                           tblptrl	equ	0xFF6
  4412                           tablat	equ	0xFF5
  4413                           prodh	equ	0xFF4
  4414                           prodl	equ	0xFF3
  4415                           intcon	equ	0xFF2
  4416                           intcon2	equ	0xFF1
  4417                           postinc0	equ	0xFEE
  4418                           fsr0h	equ	0xFEA
  4419                           fsr0l	equ	0xFE9
  4420                           wreg	equ	0xFE8
  4421                           fsr1h	equ	0xFE2
  4422                           fsr1l	equ	0xFE1
  4423                           fsr2h	equ	0xFDA
  4424                           fsr2l	equ	0xFD9
  4425                           status	equ	0xFD8
  4426                           
  4427 ;; *************** function _TMR2_ISR *****************
  4428 ;; Defined at:
  4429 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;Total ram usage:        0 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    2
  4450 ;; This function calls:
  4451 ;;		_TMR2_CallBack
  4452 ;; This function is called by:
  4453 ;;		_INTERRUPT_InterruptManager
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text37
  4458  000FF4                     __ptext37:
  4459                           	opt stack 0
  4460  000FF4                     _TMR2_ISR:
  4461                           	opt stack 21
  4462                           
  4463                           ;tmr2.c: 125: static volatile unsigned int CountCallBack = 0;
  4464                           ;tmr2.c: 127: PIR1bits.TMR2IF = 0;
  4465                           
  4466                           ;incstack = 0
  4467  000FF4  929E               	bcf	3998,1,c	;volatile
  4468                           
  4469                           ;tmr2.c: 130: if (++CountCallBack >= 20)
  4470  000FF6  0100               	movlb	0	; () banked
  4471  000FF8  4B81               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
  4472  000FFA  2B82               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  4473  000FFC  0100               	movlb	0	; () banked
  4474  000FFE  5182               	movf	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  4475  001000  E105               	bnz	i2u193_40
  4476  001002  0E14               	movlw	20
  4477  001004  0100               	movlb	0	; () banked
  4478  001006  5D81               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
  4479  001008  A0D8               	btfss	status,0,c
  4480  00100A  0012               	return	
  4481  00100C                     i2u193_40:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;tmr2.c: 131: {
  4485                           ;tmr2.c: 134: TMR2_CallBack();
  4486  00100C  EC0E  F008         	call	_TMR2_CallBack	;wreg free
  4487                           
  4488                           ;tmr2.c: 137: CountCallBack = 0;
  4489  001010  0E00               	movlw	0
  4490  001012  0100               	movlb	0	; () banked
  4491  001014  6F82               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
  4492  001016  0E00               	movlw	0
  4493  001018  6F81               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
  4494  00101A  0012               	return	
  4495  00101C                     __end_of_TMR2_ISR:
  4496                           	opt stack 0
  4497                           pclatu	equ	0xFFB
  4498                           pclath	equ	0xFFA
  4499                           tblptru	equ	0xFF8
  4500                           tblptrh	equ	0xFF7
  4501                           tblptrl	equ	0xFF6
  4502                           tablat	equ	0xFF5
  4503                           prodh	equ	0xFF4
  4504                           prodl	equ	0xFF3
  4505                           intcon	equ	0xFF2
  4506                           intcon2	equ	0xFF1
  4507                           postinc0	equ	0xFEE
  4508                           fsr0h	equ	0xFEA
  4509                           fsr0l	equ	0xFE9
  4510                           wreg	equ	0xFE8
  4511                           fsr1h	equ	0xFE2
  4512                           fsr1l	equ	0xFE1
  4513                           fsr2h	equ	0xFDA
  4514                           fsr2l	equ	0xFD9
  4515                           status	equ	0xFD8
  4516                           
  4517 ;; *************** function _TMR2_CallBack *****************
  4518 ;; Defined at:
  4519 ;;		line 141 in file "mcc_generated_files/tmr2.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;		None
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;Total ram usage:        0 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    1
  4540 ;; This function calls:
  4541 ;;		Absolute function
  4542 ;;		_TMR2_DefaultInterruptHandler
  4543 ;;		_TMR2_Tick
  4544 ;; This function is called by:
  4545 ;;		_TMR2_ISR
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text38
  4550  00101C                     __ptext38:
  4551                           	opt stack 0
  4552  00101C                     _TMR2_CallBack:
  4553                           	opt stack 21
  4554                           
  4555                           ;tmr2.c: 145: if(TMR2_InterruptHandler)
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;incstack = 0
  4559  00101C  0100               	movlb	0	; () banked
  4560  00101E  519D               	movf	_TMR2_InterruptHandler& (0+255),w,b
  4561  001020  0100               	movlb	0	; () banked
  4562  001022  119E               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  4563  001024  B4D8               	btfsc	status,2,c
  4564  001026  0012               	return	
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;tmr2.c: 146: {
  4568                           ;tmr2.c: 147: TMR2_InterruptHandler();
  4569  001028  D801               	call	i2u176_48
  4570  00102A  0012               	return	
  4571  00102C                     i2u176_48:
  4572  00102C  0005               	push	
  4573  00102E  0100               	movlb	0	; () banked
  4574  001030  6EFA               	movwf	pclath,c
  4575  001032  519D               	movf	_TMR2_InterruptHandler& (0+255),w,b
  4576  001034  6EFD               	movwf	tosl,c
  4577  001036  519E               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  4578  001038  6EFE               	movwf	tosh,c
  4579  00103A  50F8               	movf	tblptru,w,c
  4580  00103C  6EFF               	movwf	tosu,c
  4581  00103E  50FA               	movf	pclath,w,c
  4582  001040  0012               	return		;indir
  4583  001042                     __end_of_TMR2_CallBack:
  4584                           	opt stack 0
  4585                           tosu	equ	0xFFF
  4586                           tosh	equ	0xFFE
  4587                           tosl	equ	0xFFD
  4588                           pclatu	equ	0xFFB
  4589                           pclath	equ	0xFFA
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodh	equ	0xFF4
  4595                           prodl	equ	0xFF3
  4596                           intcon	equ	0xFF2
  4597                           intcon2	equ	0xFF1
  4598                           postinc0	equ	0xFEE
  4599                           fsr0h	equ	0xFEA
  4600                           fsr0l	equ	0xFE9
  4601                           wreg	equ	0xFE8
  4602                           fsr1h	equ	0xFE2
  4603                           fsr1l	equ	0xFE1
  4604                           fsr2h	equ	0xFDA
  4605                           fsr2l	equ	0xFD9
  4606                           status	equ	0xFD8
  4607                           
  4608 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4609 ;; Defined at:
  4610 ;;		line 155 in file "mcc_generated_files/tmr2.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;		None
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		None
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;Total ram usage:        0 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_TMR2_Initialize
  4634 ;;		_TMR2_CallBack
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text39
  4639  0011C4                     __ptext39:
  4640                           	opt stack 0
  4641  0011C4                     _TMR2_DefaultInterruptHandler:
  4642                           	opt stack 21
  4643                           
  4644                           ;incstack = 0
  4645  0011C4  0012               	return		;funcret
  4646  0011C6                     __end_of_TMR2_DefaultInterruptHandler:
  4647                           	opt stack 0
  4648                           tosu	equ	0xFFF
  4649                           tosh	equ	0xFFE
  4650                           tosl	equ	0xFFD
  4651                           pclatu	equ	0xFFB
  4652                           pclath	equ	0xFFA
  4653                           tblptru	equ	0xFF8
  4654                           tblptrh	equ	0xFF7
  4655                           tblptrl	equ	0xFF6
  4656                           tablat	equ	0xFF5
  4657                           prodh	equ	0xFF4
  4658                           prodl	equ	0xFF3
  4659                           intcon	equ	0xFF2
  4660                           intcon2	equ	0xFF1
  4661                           postinc0	equ	0xFEE
  4662                           fsr0h	equ	0xFEA
  4663                           fsr0l	equ	0xFE9
  4664                           wreg	equ	0xFE8
  4665                           fsr1h	equ	0xFE2
  4666                           fsr1l	equ	0xFE1
  4667                           fsr2h	equ	0xFDA
  4668                           fsr2l	equ	0xFD9
  4669                           status	equ	0xFD8
  4670                           
  4671 ;; *************** function _TMR2_Tick *****************
  4672 ;; Defined at:
  4673 ;;		line 47 in file "tasks.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;Total ram usage:        1 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_InitHardware
  4697 ;;		_TMR2_CallBack
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text40
  4702  0005F4                     __ptext40:
  4703                           	opt stack 0
  4704  0005F4                     _TMR2_Tick:
  4705                           	opt stack 21
  4706                           
  4707                           ;tasks.c: 49: TempCounter++;
  4708                           
  4709                           ;incstack = 0
  4710  0005F4  0100               	movlb	0	; () banked
  4711  0005F6  4B7F               	infsnz	_TempCounter& (0+255),f,b
  4712  0005F8  2B80               	incf	(_TempCounter+1)& (0+255),f,b
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;tasks.c: 51: static volatile unsigned uint16_t seg = 0;
  4716                           ;tasks.c: 52: static volatile unsigned uint16_t min = 0;
  4717                           ;tasks.c: 53: static volatile unsigned uint16_t Hard_ON = 0;
  4718                           ;tasks.c: 54: static volatile unsigned uint16_t Hard_OFF = 0;
  4719                           ;tasks.c: 55: static volatile unsigned uint16_t State = 0;
  4720                           ;tasks.c: 57: if (++seg >= 1000)
  4721  0005FA  0100               	movlb	0	; () banked
  4722  0005FC  4B7B               	infsnz	TMR2_Tick@seg& (0+255),f,b	;volatile
  4723  0005FE  2B7C               	incf	(TMR2_Tick@seg+1)& (0+255),f,b	;volatile
  4724  000600  0EE8               	movlw	232
  4725  000602  0100               	movlb	0	; () banked
  4726  000604  5D7B               	subwf	TMR2_Tick@seg& (0+255),w,b	;volatile
  4727  000606  0E03               	movlw	3
  4728  000608  0100               	movlb	0	; () banked
  4729  00060A  597C               	subwfb	(TMR2_Tick@seg+1)& (0+255),w,b	;volatile
  4730  00060C  A0D8               	btfss	status,0,c
  4731  00060E  D05B               	goto	i2l1941
  4732                           
  4733                           ; BSR set to: 0
  4734                           
  4735                           ; BSR set to: 0
  4736                           
  4737                           ;tasks.c: 58: {
  4738                           ;tasks.c: 59: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  4739  000610  A089               	btfss	3977,0,c	;volatile
  4740  000612  D002               	goto	i2u162_40
  4741  000614  0E01               	movlw	1
  4742  000616  D001               	goto	i2u162_46
  4743  000618                     i2u162_40:
  4744  000618  0E00               	movlw	0
  4745  00061A                     i2u162_46:
  4746  00061A  0AFF               	xorlw	255
  4747  00061C  6E01               	movwf	??_TMR2_Tick& (0+255),c
  4748  00061E  5089               	movf	3977,w,c	;volatile
  4749  000620  1801               	xorwf	??_TMR2_Tick,w,c
  4750  000622  0BFE               	andlw	-2
  4751  000624  1801               	xorwf	??_TMR2_Tick,w,c
  4752  000626  6E89               	movwf	3977,c	;volatile
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;tasks.c: 60: if ((++Hard_OFF >= 10))
  4756  000628  0100               	movlb	0	; () banked
  4757  00062A  4B75               	infsnz	TMR2_Tick@Hard_OFF& (0+255),f,b	;volatile
  4758  00062C  2B76               	incf	(TMR2_Tick@Hard_OFF+1)& (0+255),f,b	;volatile
  4759  00062E  0100               	movlb	0	; () banked
  4760  000630  5176               	movf	(TMR2_Tick@Hard_OFF+1)& (0+255),w,b	;volatile
  4761  000632  E105               	bnz	i2u163_40
  4762  000634  0E0A               	movlw	10
  4763  000636  0100               	movlb	0	; () banked
  4764  000638  5D75               	subwf	TMR2_Tick@Hard_OFF& (0+255),w,b	;volatile
  4765  00063A  A0D8               	btfss	status,0,c
  4766  00063C  D012               	goto	i2l1927
  4767  00063E                     i2u163_40:
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;tasks.c: 61: {
  4771                           ;tasks.c: 62: if (State == 0)
  4772  00063E  0100               	movlb	0	; () banked
  4773  000640  5173               	movf	TMR2_Tick@State& (0+255),w,b	;volatile
  4774  000642  0100               	movlb	0	; () banked
  4775  000644  1174               	iorwf	(TMR2_Tick@State+1)& (0+255),w,b	;volatile
  4776  000646  A4D8               	btfss	status,2,c
  4777  000648  D007               	goto	i2l297
  4778                           
  4779                           ; BSR set to: 0
  4780                           
  4781                           ;tasks.c: 63: {
  4782                           ;tasks.c: 64: do { LATDbits.LATD6 = 0; } while(0);
  4783  00064A  9C8C               	bcf	3980,6,c	;volatile
  4784                           
  4785                           ; BSR set to: 0
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;tasks.c: 65: do { LATDbits.LATD7 = 0; } while(0);
  4789  00064C  9E8C               	bcf	3980,7,c	;volatile
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;tasks.c: 66: State = 1;
  4793                           
  4794                           ; BSR set to: 0
  4795  00064E  0E00               	movlw	0
  4796  000650  0100               	movlb	0	; () banked
  4797  000652  6F74               	movwf	(TMR2_Tick@State+1)& (0+255),b	;volatile
  4798  000654  0E01               	movlw	1
  4799  000656  6F73               	movwf	TMR2_Tick@State& (0+255),b	;volatile
  4800  000658                     i2l297:
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;tasks.c: 67: }
  4804                           ;tasks.c: 68: Hard_OFF = 0;
  4805  000658  0E00               	movlw	0
  4806  00065A  0100               	movlb	0	; () banked
  4807  00065C  6F76               	movwf	(TMR2_Tick@Hard_OFF+1)& (0+255),b	;volatile
  4808  00065E  0E00               	movlw	0
  4809  000660  6F75               	movwf	TMR2_Tick@Hard_OFF& (0+255),b	;volatile
  4810  000662                     i2l1927:
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;tasks.c: 70: }
  4814                           ;tasks.c: 71: if (++min >= 60)
  4815  000662  0100               	movlb	0	; () banked
  4816  000664  4B79               	infsnz	TMR2_Tick@min& (0+255),f,b	;volatile
  4817  000666  2B7A               	incf	(TMR2_Tick@min+1)& (0+255),f,b	;volatile
  4818  000668  0100               	movlb	0	; () banked
  4819  00066A  517A               	movf	(TMR2_Tick@min+1)& (0+255),w,b	;volatile
  4820  00066C  E105               	bnz	i2u165_40
  4821  00066E  0E3C               	movlw	60
  4822  000670  0100               	movlb	0	; () banked
  4823  000672  5D79               	subwf	TMR2_Tick@min& (0+255),w,b	;volatile
  4824  000674  A0D8               	btfss	status,0,c
  4825  000676  D022               	goto	i2l302
  4826  000678                     i2u165_40:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;tasks.c: 72: {
  4830                           ;tasks.c: 73: if ((++Hard_ON >= 60))
  4831  000678  0100               	movlb	0	; () banked
  4832  00067A  4B77               	infsnz	TMR2_Tick@Hard_ON& (0+255),f,b	;volatile
  4833  00067C  2B78               	incf	(TMR2_Tick@Hard_ON+1)& (0+255),f,b	;volatile
  4834  00067E  0100               	movlb	0	; () banked
  4835  000680  5178               	movf	(TMR2_Tick@Hard_ON+1)& (0+255),w,b	;volatile
  4836  000682  E105               	bnz	i2u166_40
  4837  000684  0E3C               	movlw	60
  4838  000686  0100               	movlb	0	; () banked
  4839  000688  5D77               	subwf	TMR2_Tick@Hard_ON& (0+255),w,b	;volatile
  4840  00068A  A0D8               	btfss	status,0,c
  4841  00068C  D012               	goto	i2l303
  4842  00068E                     i2u166_40:
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;tasks.c: 74: {
  4846                           ;tasks.c: 75: Hard_ON=0;
  4847  00068E  0E00               	movlw	0
  4848  000690  0100               	movlb	0	; () banked
  4849  000692  6F78               	movwf	(TMR2_Tick@Hard_ON+1)& (0+255),b	;volatile
  4850  000694  0E00               	movlw	0
  4851  000696  6F77               	movwf	TMR2_Tick@Hard_ON& (0+255),b	;volatile
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;tasks.c: 76: if(State == 1)
  4855  000698  0100               	movlb	0	; () banked
  4856  00069A  0573               	decf	TMR2_Tick@State& (0+255),w,b	;volatile
  4857  00069C  0100               	movlb	0	; () banked
  4858  00069E  1174               	iorwf	(TMR2_Tick@State+1)& (0+255),w,b	;volatile
  4859  0006A0  A4D8               	btfss	status,2,c
  4860  0006A2  D007               	goto	i2l303
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;tasks.c: 77: {
  4864                           ;tasks.c: 78: State = 0;
  4865  0006A4  0E00               	movlw	0
  4866  0006A6  0100               	movlb	0	; () banked
  4867  0006A8  6F74               	movwf	(TMR2_Tick@State+1)& (0+255),b	;volatile
  4868  0006AA  0E00               	movlw	0
  4869  0006AC  6F73               	movwf	TMR2_Tick@State& (0+255),b	;volatile
  4870                           
  4871                           ; BSR set to: 0
  4872                           
  4873                           ; BSR set to: 0
  4874                           
  4875                           ;tasks.c: 79: do { LATDbits.LATD6 = 1; } while(0);
  4876  0006AE  8C8C               	bsf	3980,6,c	;volatile
  4877                           
  4878                           ; BSR set to: 0
  4879                           
  4880                           ; BSR set to: 0
  4881                           
  4882                           ;tasks.c: 80: do { LATDbits.LATD7 = 1; } while(0);
  4883                           
  4884                           ; BSR set to: 0
  4885  0006B0  8E8C               	bsf	3980,7,c	;volatile
  4886  0006B2                     i2l303:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;tasks.c: 81: }
  4890                           ;tasks.c: 82: }
  4891                           ;tasks.c: 83: min = 0;
  4892  0006B2  0E00               	movlw	0
  4893  0006B4  0100               	movlb	0	; () banked
  4894  0006B6  6F7A               	movwf	(TMR2_Tick@min+1)& (0+255),b	;volatile
  4895  0006B8  0E00               	movlw	0
  4896  0006BA  6F79               	movwf	TMR2_Tick@min& (0+255),b	;volatile
  4897  0006BC                     i2l302:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;tasks.c: 84: }
  4901                           ;tasks.c: 85: seg = 0;
  4902  0006BC  0E00               	movlw	0
  4903  0006BE  0100               	movlb	0	; () banked
  4904  0006C0  6F7C               	movwf	(TMR2_Tick@seg+1)& (0+255),b	;volatile
  4905  0006C2  0E00               	movlw	0
  4906  0006C4  6F7B               	movwf	TMR2_Tick@seg& (0+255),b	;volatile
  4907  0006C6                     i2l1941:
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;tasks.c: 86: }
  4911                           ;tasks.c: 88: if (DutyPeltier == 0)
  4912  0006C6  0100               	movlb	0	; () banked
  4913  0006C8  517D               	movf	_DutyPeltier& (0+255),w,b
  4914  0006CA  0100               	movlb	0	; () banked
  4915  0006CC  117E               	iorwf	(_DutyPeltier+1)& (0+255),w,b
  4916  0006CE  A4D8               	btfss	status,2,c
  4917  0006D0  D002               	goto	i2l1943
  4918                           
  4919                           ; BSR set to: 0
  4920                           
  4921                           ;tasks.c: 89: {
  4922                           ;tasks.c: 90: do { LATAbits.LATA4 = 0; } while(0);
  4923  0006D2  9889               	bcf	3977,4,c	;volatile
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;tasks.c: 91: }
  4927  0006D4  0012               	return	
  4928  0006D6                     i2l1943:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;tasks.c: 92: else
  4932                           ;tasks.c: 93: {
  4933                           ;tasks.c: 94: static unsigned int PeltierCounter;
  4934                           ;tasks.c: 95: if (PeltierCounter++ == 0)
  4935  0006D6  0100               	movlb	0	; () banked
  4936  0006D8  4B71               	infsnz	TMR2_Tick@PeltierCounter& (0+255),f,b
  4937  0006DA  2B72               	incf	(TMR2_Tick@PeltierCounter+1)& (0+255),f,b
  4938  0006DC  0100               	movlb	0	; () banked
  4939  0006DE  0571               	decf	TMR2_Tick@PeltierCounter& (0+255),w,b
  4940  0006E0  0100               	movlb	0	; () banked
  4941  0006E2  1172               	iorwf	(TMR2_Tick@PeltierCounter+1)& (0+255),w,b
  4942  0006E4  A4D8               	btfss	status,2,c
  4943  0006E6  D002               	goto	i2l1945
  4944                           
  4945                           ; BSR set to: 0
  4946                           
  4947                           ;tasks.c: 96: {
  4948                           ;tasks.c: 97: do { LATAbits.LATA4 = 1; } while(0);
  4949  0006E8  8889               	bsf	3977,4,c	;volatile
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;tasks.c: 98: }
  4953  0006EA  0012               	return	
  4954  0006EC                     i2l1945:
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;tasks.c: 99: else if (PeltierCounter == DutyPeltier)
  4958  0006EC  0100               	movlb	0	; () banked
  4959  0006EE  517D               	movf	_DutyPeltier& (0+255),w,b
  4960  0006F0  0100               	movlb	0	; () banked
  4961  0006F2  1971               	xorwf	TMR2_Tick@PeltierCounter& (0+255),w,b
  4962  0006F4  E108               	bnz	i2l1947
  4963  0006F6  0100               	movlb	0	; () banked
  4964  0006F8  517E               	movf	(_DutyPeltier+1)& (0+255),w,b
  4965  0006FA  0100               	movlb	0	; () banked
  4966  0006FC  1972               	xorwf	(TMR2_Tick@PeltierCounter+1)& (0+255),w,b
  4967  0006FE  A4D8               	btfss	status,2,c
  4968  000700  D002               	goto	i2l1947
  4969                           
  4970                           ; BSR set to: 0
  4971                           
  4972                           ;tasks.c: 100: {
  4973                           ;tasks.c: 101: do { LATAbits.LATA4 = 0; } while(0);
  4974  000702  9889               	bcf	3977,4,c	;volatile
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;tasks.c: 102: }
  4978  000704  0012               	return	
  4979  000706                     i2l1947:
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;tasks.c: 103: else if (PeltierCounter > 100)
  4983  000706  0100               	movlb	0	; () banked
  4984  000708  5172               	movf	(TMR2_Tick@PeltierCounter+1)& (0+255),w,b
  4985  00070A  E105               	bnz	i2u171_40
  4986  00070C  0E65               	movlw	101
  4987  00070E  0100               	movlb	0	; () banked
  4988  000710  5D71               	subwf	TMR2_Tick@PeltierCounter& (0+255),w,b
  4989  000712  A0D8               	btfss	status,0,c
  4990  000714  0012               	return	
  4991  000716                     i2u171_40:
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;tasks.c: 104: {
  4995                           ;tasks.c: 105: PeltierCounter = 0;
  4996  000716  0E00               	movlw	0
  4997  000718  0100               	movlb	0	; () banked
  4998  00071A  6F72               	movwf	(TMR2_Tick@PeltierCounter+1)& (0+255),b
  4999  00071C  0E00               	movlw	0
  5000  00071E  6F71               	movwf	TMR2_Tick@PeltierCounter& (0+255),b
  5001                           
  5002                           ; BSR set to: 0
  5003                           
  5004                           ; BSR set to: 0
  5005                           
  5006                           ; BSR set to: 0
  5007  000720  0012               	return	
  5008  000722                     __end_of_TMR2_Tick:
  5009                           	opt stack 0
  5010  0000                     tosu	equ	0xFFF
  5011                           tosh	equ	0xFFE
  5012                           tosl	equ	0xFFD
  5013                           pclatu	equ	0xFFB
  5014                           pclath	equ	0xFFA
  5015                           tblptru	equ	0xFF8
  5016                           tblptrh	equ	0xFF7
  5017                           tblptrl	equ	0xFF6
  5018                           tablat	equ	0xFF5
  5019                           prodh	equ	0xFF4
  5020                           prodl	equ	0xFF3
  5021                           intcon	equ	0xFF2
  5022                           intcon2	equ	0xFF1
  5023                           postinc0	equ	0xFEE
  5024                           fsr0h	equ	0xFEA
  5025                           fsr0l	equ	0xFE9
  5026                           wreg	equ	0xFE8
  5027                           fsr1h	equ	0xFE2
  5028                           fsr1l	equ	0xFE1
  5029                           fsr2h	equ	0xFDA
  5030                           fsr2l	equ	0xFD9
  5031                           status	equ	0xFD8
  5032                           tosu	equ	0xFFF
  5033                           tosh	equ	0xFFE
  5034                           tosl	equ	0xFFD
  5035                           pclatu	equ	0xFFB
  5036                           pclath	equ	0xFFA
  5037                           tblptru	equ	0xFF8
  5038                           tblptrh	equ	0xFF7
  5039                           tblptrl	equ	0xFF6
  5040                           tablat	equ	0xFF5
  5041                           prodh	equ	0xFF4
  5042                           prodl	equ	0xFF3
  5043                           intcon	equ	0xFF2
  5044                           intcon2	equ	0xFF1
  5045                           postinc0	equ	0xFEE
  5046                           fsr0h	equ	0xFEA
  5047                           fsr0l	equ	0xFE9
  5048                           wreg	equ	0xFE8
  5049                           fsr1h	equ	0xFE2
  5050                           fsr1l	equ	0xFE1
  5051                           fsr2h	equ	0xFDA
  5052                           fsr2l	equ	0xFD9
  5053                           status	equ	0xFD8
  5054                           
  5055                           	psect	text41
  5056  000000                     __ptext41:
  5057                           	opt stack 0
  5058                           tosu	equ	0xFFF
  5059                           tosh	equ	0xFFE
  5060                           tosl	equ	0xFFD
  5061                           pclatu	equ	0xFFB
  5062                           pclath	equ	0xFFA
  5063                           tblptru	equ	0xFF8
  5064                           tblptrh	equ	0xFF7
  5065                           tblptrl	equ	0xFF6
  5066                           tablat	equ	0xFF5
  5067                           prodh	equ	0xFF4
  5068                           prodl	equ	0xFF3
  5069                           intcon	equ	0xFF2
  5070                           intcon2	equ	0xFF1
  5071                           postinc0	equ	0xFEE
  5072                           fsr0h	equ	0xFEA
  5073                           fsr0l	equ	0xFE9
  5074                           wreg	equ	0xFE8
  5075                           fsr1h	equ	0xFE2
  5076                           fsr1l	equ	0xFE1
  5077                           fsr2h	equ	0xFDA
  5078                           fsr2l	equ	0xFD9
  5079                           status	equ	0xFD8
  5080                           
  5081                           	psect	rparam
  5082  0000                     tosu	equ	0xFFF
  5083                           tosh	equ	0xFFE
  5084                           tosl	equ	0xFFD
  5085                           pclatu	equ	0xFFB
  5086                           pclath	equ	0xFFA
  5087                           tblptru	equ	0xFF8
  5088                           tblptrh	equ	0xFF7
  5089                           tblptrl	equ	0xFF6
  5090                           tablat	equ	0xFF5
  5091                           prodh	equ	0xFF4
  5092                           prodl	equ	0xFF3
  5093                           intcon	equ	0xFF2
  5094                           intcon2	equ	0xFF1
  5095                           postinc0	equ	0xFEE
  5096                           fsr0h	equ	0xFEA
  5097                           fsr0l	equ	0xFE9
  5098                           wreg	equ	0xFE8
  5099                           fsr1h	equ	0xFE2
  5100                           fsr1l	equ	0xFE1
  5101                           fsr2h	equ	0xFDA
  5102                           fsr2l	equ	0xFD9
  5103                           status	equ	0xFD8
  5104                           
  5105                           	psect	temp
  5106  000050                     btemp:
  5107                           	opt stack 0
  5108  000050                     	ds	1
  5109  0000                     int$flags	set	btemp
  5110                           tosu	equ	0xFFF
  5111                           tosh	equ	0xFFE
  5112                           tosl	equ	0xFFD
  5113                           pclatu	equ	0xFFB
  5114                           pclath	equ	0xFFA
  5115                           tblptru	equ	0xFF8
  5116                           tblptrh	equ	0xFF7
  5117                           tblptrl	equ	0xFF6
  5118                           tablat	equ	0xFF5
  5119                           prodh	equ	0xFF4
  5120                           prodl	equ	0xFF3
  5121                           intcon	equ	0xFF2
  5122                           intcon2	equ	0xFF1
  5123                           postinc0	equ	0xFEE
  5124                           fsr0h	equ	0xFEA
  5125                           fsr0l	equ	0xFE9
  5126                           wreg	equ	0xFE8
  5127                           fsr1h	equ	0xFE2
  5128                           fsr1l	equ	0xFE1
  5129                           fsr2h	equ	0xFDA
  5130                           fsr2l	equ	0xFD9
  5131                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         54
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      79
    BANK0           160     24      65
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_Tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TempAcquisition->_PID_Control
    ___lwtoft->___ftpack
    _PID_Control->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftneg
    _InitHardware->_PID_SetSampleTime
    _PID_SetTunings->___ftdiv
    ___ftneg->___ftmul
    _PID_SetSampleTime->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _PID_SetPoint->___awtoft
    _PID_SetOutputLimits->___ftge
    _PID_Initialize->___ftge
    ___ftge->___awtoft
    ___awtoft->___ftpack

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_CallBack->_TMR2_Tick

Critical Paths under _main in BANK0

    _TempUpdate->_TempAcquisition
    _TempAcquisition->_PID_Control
    _PID_Control->___fttol
    _InitHardware->_PID_SetTunings

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69207
                       _InitHardware
                           _MainTask
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     150
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     150
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainTask                                             0     0      0   27017
                         _TempUpdate
 ---------------------------------------------------------------------------------
 (2) _TempUpdate                                           0     0      0   27017
                    _TempAcquisition
 ---------------------------------------------------------------------------------
 (3) _TempAcquisition                                      2     2      0   27017
                                             22 BANK0      2     2      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                _ADC_StartConversion
                        _PID_Control
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             3     0      3    2632
                                             23 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _PID_Control                                         13    11      2   15640
                                             60 COMRAM     2     0      2
                                             11 BANK0     11    11      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     525
                                             56 COMRAM     4     0      4
                                              0 BANK0     11    11      0
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4747
                                             44 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversionResult                              4     2      2       0
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _InitHardware                                         0     0      0   42040
                  _ADC_SelectChannel
                _ADC_StartConversion
         _PID_SetControllerDirection
                        _PID_SetMode
                _PID_SetOutputLimits
                       _PID_SetPoint
                  _PID_SetSampleTime
                     _PID_SetTunings
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     150
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      12     3      9   13469
                                             56 COMRAM     3     3      0
                                              0 BANK0      9     0      9
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     527
                                             41 COMRAM     3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetSampleTime                                    5     3      2   12695
                                             56 COMRAM     5     3      2
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    4204
                                             26 COMRAM    15     9      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3982
                                             41 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetPoint                                         2     0      2    4382
                                             27 COMRAM     2     0      2
                           ___awtoft
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  5     1      4    5674
                                             36 COMRAM     5     1      4
                           ___awtoft
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetMode                                          3     1      2    5569
                                             36 COMRAM     3     1      2
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (3) _PID_Initialize                                       0     0      0    5396
                           ___awtoft
                             ___ftge
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6    1122
                                             27 COMRAM     9     3      6
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    4274
                                             23 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2524
                                             15 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           2     0      2      86
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      15
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0       0
                                              1 COMRAM    14    14      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                          _TMR2_Tick *
 ---------------------------------------------------------------------------------
 (10) _TMR2_Tick                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitHardware
     _ADC_SelectChannel
     _ADC_StartConversion
     _PID_SetControllerDirection
     _PID_SetMode
       _PID_Initialize
         ___awtoft
           ___ftpack
         ___ftge
           ___awtoft (ARG)
             ___ftpack
     _PID_SetOutputLimits
       ___awtoft
         ___ftpack
       ___ftge
         ___awtoft (ARG)
           ___ftpack
     _PID_SetPoint
       ___awtoft
         ___ftpack
     _PID_SetSampleTime
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
     _PID_SetTunings
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
     _TMR2_SetInterruptHandler
   _MainTask
     _TempUpdate
       _TempAcquisition
         _ADC_GetConversionResult
         _ADC_IsConversionDone
         _ADC_StartConversion
         _PID_Control
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
             ___ftpack (ARG)
           ___ftge
             ___awtoft (ARG)
               ___ftpack
           ___ftmul
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
         ___lwtoft
           ___ftpack
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _TMR2_Tick *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      41       5       40.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      12        0.0%
DATA                 0      0      90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Jan 30 09:37:07 2018

        __end_of_TMR2_SetInterruptHandler 11A6                           PID_SetMode@Mode 0025  
                  __end_of_PID_Initialize 0C8A                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 0038  
                            ___ftadd@exp2 0037                     ??_PID_SetOutputLimits 0029  
                             __CFG_LVP$ON 000000                              ___ftadd@sign 0036  
                                     l227 117C                                       l364 01AC  
                                     l630 0D18                                       l710 107C  
                                     l653 035E                                       l657 0388  
                                     l668 0438                                       l677 0454  
                                     l688 0AC0                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         _TMR2_Initialize 108A                                       tosl 000FFD  
                                     wreg 000FE8                           _CCP5_Initialize 1148  
                            ___ftdiv@cntr 0033                              ___ftdiv@sign 0038  
                                    l2111 0CB2                                      l2121 0D0E  
                                    l2113 0CD0                                      l2105 0C9A  
                                    l2203 04A0                                      l2117 0CE6  
                                    l2109 0CA8                                      l2213 084E  
                                    l2119 0D04                                      l2151 0396  
                                    l2233 08A8                                      l2145 036C  
                                    l2313 057E                                      l2243 08D0  
                                    l2219 0876                                      l2331 05E2  
                                    l2323 05AC                                      l2405 0A9A  
                                    l2237 08B8                                      l2173 03E8  
                                    l2325 05BC                                      l2317 0592  
                                    l2263 0FA6                                      l2271 0EAA  
                                    l2247 08E0                                      l2175 03F2  
                                    l2167 03C6                                      l2327 05C6  
                                    l2351 00A6                                      l2281 0F06  
                                    l2193 0470                                      l2185 0426  
                                    l2177 03FC                                      l2425 0AF2  
                                    l2275 0EDA                                      l2443 0C44  
                                    l2187 0430                                      l2179 0404  
                                    l2363 02BA                                      l2355 0168  
                                    l2295 04FC                                      l2367 02DE  
                                    l2481 0980                                      l2385 0A5C  
                                    l2379 0A34                                      l2485 09C6  
                                    l2477 0960                                      u2051 032A  
                                    u2061 033E                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u2261 0836                                      u2521 0A1C  
                                    u2281 085E                                      u2450 1198  
                                    u2371 04DA                                      u2700 0FD6  
                                    u2541 0A44                                      u2710 0FD8  
                                    u2390 0522                                      u2720 0FE4  
                                    u2640 0D46                                      u2730 0FE6  
                                    u2395 0518                                      _TMR2 000FBC  
                                    _WPUB 000F61                             ?_InitHardware 0001  
                                    _main 1170                              ___ftpack@arg 0010  
                            ___ftpack@exp 0013                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0050  
                  PID_SetOutputLimits@Max 0027                             __CFG_BORV$190 000000  
                  PID_SetOutputLimits@Min 0025                    __end_of_PID_SetTunings 0826  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 008A                             __CFG_IESO$OFF 000000  
                 TMR2_Tick@PeltierCounter 0071                              ___ftmul@cntr 0028  
                            ___param_bank 000000                              ___ftmul@sign 0029  
                 __end_of_TempAcquisition 0BCE                              ___fttol@exp1 008F  
                            ___fttol@lval 008B                           ?_PID_Initialize 0001  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 1190  
                                   ?_main 0001                           __end_of___ftadd 04C6  
                         __end_of___ftdiv 0AF2                           __end_of___ftneg 108A  
                         __end_of___ftmul 091A                           __end_of___fttol 05F4  
                                   _T2CON 000FBA                            __CFG_DEBUG$OFF 000000  
                                   i2l100 004E                                     i2l302 06BC  
                                   i2l303 06B2                                     i2l297 0658  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     _ITerm 0063  
        __size_of_ADC_GetConversionResult 0014                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                         PID_Control@dInput 0092  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                                   _Input 006D                __size_of_PID_SetSampleTime 00A8  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR2_ISR 101C  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                           ___awtoft@sign 001B                        __size_of_TMR2_Tick 012E  
          PID_SetSampleTime@newSampleTime 0039                        PID_SetMode@newAuto 0027  
                      __CFG_MCLRE$EXTMCLR 000000                             ___ftpack@sign 0014  
                          ??_InitHardware 003E                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 11B6  
                         ?_PID_SetTunings 0085                            __CFG_PBADEN$ON 000000  
                            ?_PID_Control 003D                           __initialization 0F54  
                        __end_of_MainTask 11B6                __end_of_EUSART1_Initialize 1132  
                            __end_of_main 1182                              ?_PID_SetMode 0025  
                 __end_of_TMR2_Initialize 10AC               ?_INTERRUPT_InterruptManager 0001  
                _TMR2_SetInterruptHandler 119C                                    ??_main 003F  
                           ___fttol@sign1 008A                   __end_of_CCP5_Initialize 115C  
                           __activetblptr 000002                          PID_SetTunings@Kd 008B  
                        PID_SetTunings@Ki 0088                          PID_SetTunings@Kp 0085  
           __size_of_ADC_IsConversionDone 000C                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                     _controllerDirection 0069                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                          __end_of___awtoft 0FCA  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                          __end_of___ftpack 0D38  
                              _SampleTime 009F                            __CFG_WDTEN$OFF 000000  
                                  i2l1941 06C6                                    i2l1943 06D6  
                                  i2l1927 0662                                    i2l1945 06EC  
                                  i2l1947 0706                                    _RCREG1 000FAE  
                        __end_of___lwtoft 1066                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                              _TempUpdate 10AC                            __CFG_XINST$OFF 000000  
                                  _Output 006B                                    ___ftge 0E7A  
                        ?_TempAcquisition 0001                         __end_of_TMR2_Tick 0722  
                               ??___ftadd 0033                            __CFG_STVREN$ON 000000  
                               ??___ftdiv 0030                                 ??___ftneg 002D  
                               ??___ftmul 0021                                 ??___fttol 0085  
                                  _inAuto 004F                                    clear_0 0F72  
                                  clear_1 0F7E                     ___ftmul@f3_as_product 0025  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                   __end_of_TMR2_StartTimer 11BA  
TMR2_SetInterruptHandler@InterruptHandler 0010             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 10CC                                __accesstop 0060  
                 __end_of__initialization 0F84                                ___ftadd@f1 002D  
                              ___ftadd@f2 0030                     __end_of_TMR2_CallBack 1042  
                              ___ftge@ff1 001C                                ___ftge@ff2 001F  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                              ___ftdiv@f1 002A                                ___ftdiv@f2 002D  
                              ___ftdiv@f3 0034                                ___ftneg@f1 002A  
                              ___awtoft@c 0018                                ___ftmul@f1 001B  
                              ___ftmul@f2 001E                                ___fttol@f1 0039  
            __size_of_ADC_StartConversion 0004                            __pcstackCOMRAM 0001  
                            __pidataBANK0 11C2                       ??_SYSTEM_Initialize 0012  
                               ?_TMR2_ISR 0001                             ?_PID_SetPoint 001C  
                        ?_TMR2_Initialize 0001                      __end_of_InitHardware 0E7A  
                              ___lwtoft@c 0018                          ?_CCP5_Initialize 0001  
                 _ADC_GetConversionResult 115C                               _DutyPeltier 007D  
               __end_of_SYSTEM_Initialize 10EA                                 ?_MainTask 0001  
                              __pbssBANK0 0060                           __CFG_PLLCFG$OFF 000000  
                             ?_TempUpdate 0001                        __CFG_CCP2MX$PORTC1 000000  
                        ??_PID_Initialize 0025                                   ?___ftge 001C  
             __end_of_PID_SetOutputLimits 0A0C                                ??_TMR2_ISR 0002  
                    __size_of_PID_Control 028C                        __CFG_CCP3MX$PORTB5 000000  
                  PID_SetSampleTime@ratio 003B                            ??_PID_SetPoint 001E  
                                 _CCP5CON 000F54                      __size_of_PID_SetMode 002A  
                               ?___awtoft 0018                                 ?___ftpack 0010  
                 __size_of_ADC_Initialize 0016                          TMR2_Tick@Hard_ON 0077  
                               ?___lwtoft 0018                                   _OSCCON2 000FD2  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                        ?_TMR2_StartTimer 0001                                ??_MainTask 003F  
                        ??_PID_SetTunings 0039                               _TempCounter 007F  
              TempAcquisition@TEMPERATURA 006F                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                   PID_SetPoint@newSetPoint 001C  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0012  
            ??_PID_SetControllerDirection 0012       PID_SetControllerDirection@Direction 0010  
                         __size_of___ftge 0090                                   ___ftadd 031A  
                                 ___ftdiv 0A0C                                   ___ftneg 1066  
                                 ___ftmul 0826                                   ___fttol 04C6  
               ??_ADC_GetConversionResult 0012                                   __pcinit 0F54  
                              ??___awtoft 001B                                ??___ftpack 0015  
                                 __ramtop 1000                                   __ptext0 1170  
                                 __ptext1 10CC                                   __ptext2 108A  
                                 __ptext3 11B6                                   __ptext4 0F0A  
                                 __ptext5 1182                                   __ptext6 11BA  
                                 __ptext7 111C                                   __ptext8 1148  
                                 __ptext9 1132                                ??___lwtoft 001B  
                   _OSCILLATOR_Initialize 1182                                 _T2CONbits 000FBA  
                      _EUSART1_Initialize 111C                  ??_PIN_MANAGER_Initialize 0010  
                     __size_of_TempUpdate 0020                       PID_Control@newInput 003D  
              __size_of_SYSTEM_Initialize 001E                      end_of_initialization 0F84  
                     ?_EUSART1_Initialize 0001       __size_of_PID_SetControllerDirection 000A  
                           __Lmediumconst 0000                                 _PIDConfig 003F  
            __end_of_ADC_IsConversionDone 119C                     __size_of_InitHardware 009A  
                                 postinc0 000FEE                      _TempAcquisition$1463 009B  
                    ??_EUSART1_Initialize 0010                                 _TMR2_Tick 05F4  
                     _ADC_StartConversion 11BE                      __end_of_PID_SetPoint 1104  
                            _InitHardware 0DE0                               ___ftdiv@exp 0037  
                             ___ftmul@exp 0024                      ?_ADC_StartConversion 0001  
            __end_of_INTERRUPT_Initialize 11BE      __end_of_TMR2_DefaultInterruptHandler 11C6  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 11C4  
                          __end_of___ftge 0F0A                         __size_of_TMR2_ISR 0028  
                    TempAcquisition@TEMPH 0084                      TempAcquisition@TEMPL 0083  
                          _ADC_Initialize 1132                                ?_TMR2_Tick 0001  
                  ?_OSCILLATOR_Initialize 0001                          PID_Control@error 0098  
                __size_of_TempAcquisition 00DC                       start_initialization 0F54  
         __size_of_PIN_MANAGER_Initialize 004A                         __size_of_MainTask 0006  
                          TMR2_Tick@State 0073                              ??_TempUpdate 003F  
      __end_of_PID_SetControllerDirection 11B0                _PID_SetControllerDirection 11A6  
                   ??_ADC_StartConversion 0010                                  ??___ftge 0022  
                  __end_of_ADC_Initialize 1148                               __pdataBANK0 009F  
           ?_TMR2_DefaultInterruptHandler 0001                         __size_of___awtoft 0038  
                       __size_of___ftpack 00AE                    __size_of_TMR2_CallBack 0026  
                             __pbssCOMRAM 003F                         __size_of___lwtoft 0024  
                           __pcstackBANK0 0085                      _ADC_IsConversionDone 1190  
                __size_of_TMR2_Initialize 0022                        __end_of_TempUpdate 10CC  
                __size_of_CCP5_Initialize 0014                                 __pnvBANK0 009D  
                           ??_PID_Control 0090                    _PIN_MANAGER_Initialize 0F0A  
                               __pintcode 0008                             ??_PID_SetMode 0027  
                       _ADC_SelectChannel 1104                                  ?___ftadd 002D  
                                ?___ftdiv 002A                                  ?___ftneg 002A  
                                ?___ftmul 001B                          _PID_Control$1464 0095  
                                ?___fttol 0039                           ?_ADC_Initialize 0001  
                      ?_ADC_SelectChannel 0001              ??_INTERRUPT_InterruptManager 0002  
                        __CFG_PRICLKEN$ON 000000                               ??_TMR2_Tick 0001  
            __size_of_PID_SetOutputLimits 00F2                                  _BAUDCON1 000FB8  
                     ??_ADC_SelectChannel 0010                     ?_ADC_IsConversionDone 0001  
                               _lastInput 0060                     __size_of_PID_SetPoint 001A  
                       TMR2_Tick@Hard_OFF 0075                         ??_TempAcquisition 003F  
                    _INTERRUPT_Initialize 11BA                                  _LATAbits 000F89  
                                _LATDbits 000F8C                             _TMR2_CallBack 101C  
                                _PIE1bits 000F9D                  __size_of_TMR2_StartTimer 0004  
               __end_of_ADC_SelectChannel 111C       __size_of_INTERRUPT_InterruptManager 0082  
                                i2u162_40 0618                                  i2u162_46 061A  
                                i2u171_40 0716                                  i2u163_40 063E  
                                i2u165_40 0678                                  i2u166_40 068E  
                                i2u176_48 102C                                  i2u193_40 100C  
                                _PIR1bits 000F9E                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 0FF4  
                            _PID_SetPoint 10EA                       __end_of_PID_Control 031A  
                              _ADCON0bits 000FC2                       __end_of_PID_SetMode 0FF4  
                ADC_SelectChannel@channel 0011                   __size_of_PID_Initialize 00BC  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 0010                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                                  _MainTask 11B0  
                       ??_TMR2_Initialize 0012                            ?_TMR2_CallBack 0001  
                       ??_CCP5_Initialize 0010                                  __Hrparam 0000  
                                __Lrparam 0000                  ?_ADC_GetConversionResult 0010  
                      __CFG_BOREN$SBORDIS 000000                   __size_of_PID_SetTunings 0104  
                       __CFG_P2BMX$PORTD2 000000                   ??_OSCILLATOR_Initialize 0010  
                        __size_of___ftadd 01AC                          __size_of___ftdiv 00E6  
                        __size_of___ftneg 0024                          __size_of___ftmul 00F4  
                        __size_of___fttol 012E               __size_of_EUSART1_Initialize 0016  
                                ___awtoft 0F92                                  ___ftpack 0C8A  
                                ___lwtoft 1042                    ??_ADC_IsConversionDone 0010  
                                __ptext10 11B0                                  __ptext11 10AC  
                                __ptext20 119C                                  __ptext12 0AF2  
                                __ptext21 0722                                  __ptext13 1042  
                                __ptext30 0E7A                                  __ptext22 1066  
                                __ptext14 008E                                  __ptext31 0F92  
                                __ptext23 0D38                                  __ptext15 04C6  
                                __ptext40 05F4                                  __ptext32 0C8A  
                                __ptext24 0826                                  __ptext16 031A  
                                __ptext41 0000                                  __ptext33 11A6  
                                __ptext25 0A0C                                  __ptext17 1190  
                                __ptext34 11BE                                  __ptext26 10EA  
                                __ptext18 115C                                  __ptext35 1104  
                                __ptext27 091A                                  __ptext19 0DE0  
                                __ptext28 0FCA                                  __ptext37 0FF4  
                                __ptext29 0BCE                                  __ptext38 101C  
                                __ptext39 11C4                             __size_of_main 0012  
              __size_of_ADC_SelectChannel 0018                               _PID_Control 008E  
             ?_PID_SetControllerDirection 0010                               _PID_SetMode 0FCA  
                                int$flags 0050                         ??_TMR2_StartTimer 0010  
      __end_of_INTERRUPT_InterruptManager 008A                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                              TMR2_Tick@min 0079  
                            TMR2_Tick@seg 007B                    ??_INTERRUPT_Initialize 0010  
                       _PID_SetSampleTime 0D38                                  intlevel2 0000  
                         ??_TMR2_CallBack 0002                        ?_PID_SetSampleTime 0039  
             __end_of_ADC_StartConversion 11C2                   ?_PIN_MANAGER_Initialize 0001  
         __end_of_ADC_GetConversionResult 1170                       _PID_SetOutputLimits 091A  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 0010  
                     ??_PID_SetSampleTime 003B                                _TEMP_FLOAT 0066  
                         _TempAcquisition 0AF2                            _PID_Initialize 0BCE  
                    ?_PID_SetOutputLimits 0025                     TMR2_ISR@CountCallBack 0081  
               __end_of_PID_SetSampleTime 0DE0                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 0F54                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 009D             PID_SetTunings@SampleTimeInSec 0039  
                          _PID_SetTunings 0722  
