

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Jan 29 10:18:36 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 1.41
    62                           ; Generated 25/01/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F46K22 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  00130C                     __pidataBANK0:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _SampleTime
   101  00130C  03E8               	dw	1000
   102                           
   103                           	psect	nvBANK0
   104  0000B3                     __pnvBANK0:
   105                           	opt stack 0
   106  0000B3                     _TMR2_InterruptHandler:
   107                           	opt stack 0
   108  0000B3                     	ds	2
   109  0000                     _CCPR5H	set	3926
   110  0000                     _CCPR5L	set	3925
   111  0000                     _CCP5CON	set	3924
   112  0000                     _ANSELA	set	3896
   113  0000                     _ANSELE	set	3900
   114  0000                     _ANSELD	set	3899
   115  0000                     _ANSELB	set	3897
   116  0000                     _ANSELC	set	3898
   117  0000                     _LATAbits	set	3977
   118  0000                     _LATDbits	set	3980
   119  0000                     _TXREG1	set	4013
   120  0000                     _RCREG1	set	4014
   121  0000                     _RCSTA1bits	set	4011
   122  0000                     _SPBRGH1	set	4016
   123  0000                     _SPBRG1	set	4015
   124  0000                     _TXSTA1	set	4012
   125  0000                     _RCSTA1	set	4011
   126  0000                     _BAUDCON1	set	4024
   127  0000                     _ADCON0bits	set	4034
   128  0000                     _ADRESH	set	4036
   129  0000                     _ADRESL	set	4035
   130  0000                     _ADCON2	set	4032
   131  0000                     _ADCON1	set	4033
   132  0000                     _ADCON0	set	4034
   133  0000                     _INTCON2bits	set	4081
   134  0000                     _WPUB	set	3937
   135  0000                     _TRISD	set	3989
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISB	set	3987
   138  0000                     _TRISA	set	3986
   139  0000                     _TRISE	set	3990
   140  0000                     _LATC	set	3979
   141  0000                     _LATB	set	3978
   142  0000                     _LATA	set	3977
   143  0000                     _LATD	set	3980
   144  0000                     _LATE	set	3981
   145  0000                     _INTCONbits	set	4082
   146  0000                     _RCONbits	set	4048
   147  0000                     _OSCTUNE	set	3995
   148  0000                     _OSCCON2	set	4050
   149  0000                     _OSCCON	set	4051
   150  0000                     _T2CONbits	set	4026
   151  0000                     _PIE1bits	set	3997
   152  0000                     _PIR1bits	set	3998
   153  0000                     _TMR2	set	4028
   154  0000                     _PR2	set	4027
   155  0000                     _T2CON	set	4026
   156                           
   157                           ; #config settings
   158  0000                     
   159                           	psect	cinit
   160  001090                     __pcinit:
   161                           	opt stack 0
   162  001090                     start_initialization:
   163                           	opt stack 0
   164  001090                     __initialization:
   165                           	opt stack 0
   166                           
   167                           ; Initialize objects allocated to BANK0 (2 bytes)
   168                           ; load TBLPTR registers with __pidataBANK0
   169  001090  0E0C               	movlw	low __pidataBANK0
   170  001092  6EF6               	movwf	tblptrl,c
   171  001094  0E13               	movlw	high __pidataBANK0
   172  001096  6EF7               	movwf	tblptrh,c
   173  001098  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   174  00109A  6EF8               	movwf	tblptru,c
   175  00109C  0009               	tblrd		*+	;fetch initializer
   176  00109E  CFF5 F0B5          	movff	tablat,__pdataBANK0
   177  0010A2  0009               	tblrd		*+	;fetch initializer
   178  0010A4  CFF5 F0B6          	movff	tablat,__pdataBANK0+1
   179                           
   180                           ; Clear objects allocated to BANK0 (38 bytes)
   181  0010A8  EE00  F08D         	lfsr	0,__pbssBANK0
   182  0010AC  0E26               	movlw	38
   183  0010AE                     clear_0:
   184  0010AE  6AEE               	clrf	postinc0,c
   185  0010B0  06E8               	decf	wreg,f,c
   186  0010B2  E1FD               	bnz	clear_0
   187                           
   188                           ; Clear objects allocated to COMRAM (16 bytes)
   189  0010B4  EE00  F040         	lfsr	0,__pbssCOMRAM
   190  0010B8  0E10               	movlw	16
   191  0010BA                     clear_1:
   192  0010BA  6AEE               	clrf	postinc0,c
   193  0010BC  06E8               	decf	wreg,f,c
   194  0010BE  E1FD               	bnz	clear_1
   195  0010C0                     end_of_initialization:
   196                           	opt stack 0
   197  0010C0                     __end_of__initialization:
   198                           	opt stack 0
   199  0010C0  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   200  0010C2  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   201  0010C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202  0010C6  6EF8               	movwf	tblptru,c
   203  0010C8  0100               	movlb	0
   204  0010CA  EF5B  F009         	goto	_main	;jump to C main() function
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	bssCOMRAM
   213  000040                     __pbssCOMRAM:
   214                           	opt stack 0
   215  000040                     TMR2_Tick@PeltierCounter:
   216                           	opt stack 0
   217  000040                     	ds	2
   218  000042                     TMR2_Tick@State:
   219                           	opt stack 0
   220  000042                     	ds	2
   221  000044                     TMR2_Tick@Hard_OFF:
   222                           	opt stack 0
   223  000044                     	ds	2
   224  000046                     TMR2_Tick@Hard_ON:
   225                           	opt stack 0
   226  000046                     	ds	2
   227  000048                     TMR2_Tick@min:
   228                           	opt stack 0
   229  000048                     	ds	2
   230  00004A                     TMR2_Tick@seg:
   231                           	opt stack 0
   232  00004A                     	ds	2
   233  00004C                     TMR2_ISR@CountCallBack:
   234                           	opt stack 0
   235  00004C                     	ds	2
   236  00004E                     	ds	1
   237  00004F                     	ds	1
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           
   245                           	psect	bssBANK0
   246  00008D                     __pbssBANK0:
   247                           	opt stack 0
   248  00008D                     _PIDConfig:
   249                           	opt stack 0
   250  00008D                     	ds	16
   251  00009D                     _lastInput:
   252                           	opt stack 0
   253  00009D                     	ds	3
   254  0000A0                     _ITerm:
   255                           	opt stack 0
   256  0000A0                     	ds	3
   257  0000A3                     _TEMP_FLOAT:
   258                           	opt stack 0
   259  0000A3                     	ds	3
   260  0000A6                     _controllerDirection:
   261                           	opt stack 0
   262  0000A6                     	ds	2
   263  0000A8                     _Output:
   264                           	opt stack 0
   265  0000A8                     	ds	2
   266  0000AA                     _Input:
   267                           	opt stack 0
   268  0000AA                     	ds	2
   269  0000AC                     TempAcquisition@TEMPERATURA:
   270                           	opt stack 0
   271  0000AC                     	ds	2
   272  0000AE                     _DutyPeltier:
   273                           	opt stack 0
   274  0000AE                     	ds	2
   275  0000B0                     _TempCounter:
   276                           	opt stack 0
   277  0000B0                     	ds	2
   278  0000B2                     _inAuto:
   279                           	opt stack 0
   280  0000B2                     	ds	1
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           
   288                           	psect	dataBANK0
   289  0000B5                     __pdataBANK0:
   290                           	opt stack 0
   291  0000B5                     _SampleTime:
   292                           	opt stack 0
   293  0000B5                     	ds	2
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           
   301                           	psect	cstackBANK0
   302  000060                     __pcstackBANK0:
   303                           	opt stack 0
   304  000060                     ?___ftneg:
   305                           	opt stack 0
   306  000060                     PID_SetSampleTime@newSampleTime:
   307                           	opt stack 0
   308  000060                     ___ftneg@f1:
   309                           	opt stack 0
   310                           
   311                           ; 3 bytes @ 0x0
   312  000060                     	ds	2
   313  000062                     PID_SetSampleTime@ratio:
   314                           	opt stack 0
   315                           
   316                           ; 3 bytes @ 0x2
   317  000062                     	ds	1
   318  000063                     ?___ftadd:
   319                           	opt stack 0
   320  000063                     PID_SetTunings@Kp:
   321                           	opt stack 0
   322  000063                     ___ftadd@f1:
   323                           	opt stack 0
   324                           
   325                           ; 3 bytes @ 0x3
   326  000063                     	ds	3
   327  000066                     PID_SetTunings@Ki:
   328                           	opt stack 0
   329  000066                     ___ftadd@f2:
   330                           	opt stack 0
   331                           
   332                           ; 3 bytes @ 0x6
   333  000066                     	ds	3
   334  000069                     ??___ftadd:
   335  000069                     PID_SetTunings@Kd:
   336                           	opt stack 0
   337                           
   338                           ; 3 bytes @ 0x9
   339  000069                     	ds	3
   340  00006C                     ___ftadd@sign:
   341                           	opt stack 0
   342  00006C                     PID_SetTunings@SampleTimeInSec:
   343                           	opt stack 0
   344                           
   345                           ; 3 bytes @ 0xC
   346  00006C                     	ds	1
   347  00006D                     ___ftadd@exp2:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0xD
   351  00006D                     	ds	1
   352  00006E                     ___ftadd@exp1:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0xE
   356  00006E                     	ds	1
   357  00006F                     ?___fttol:
   358                           	opt stack 0
   359  00006F                     ___fttol@f1:
   360                           	opt stack 0
   361                           
   362                           ; 3 bytes @ 0xF
   363  00006F                     	ds	4
   364  000073                     ??___fttol:
   365                           
   366                           ; 1 bytes @ 0x13
   367  000073                     	ds	5
   368  000078                     ___fttol@sign1:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x18
   372  000078                     	ds	1
   373  000079                     ___fttol@lval:
   374                           	opt stack 0
   375                           
   376                           ; 4 bytes @ 0x19
   377  000079                     	ds	4
   378  00007D                     ___fttol@exp1:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x1D
   382  00007D                     	ds	1
   383  00007E                     ?_PID_Control:
   384                           	opt stack 0
   385  00007E                     PID_Control@newInput:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x1E
   389  00007E                     	ds	2
   390  000080                     ??_PID_Control:
   391                           
   392                           ; 1 bytes @ 0x20
   393  000080                     	ds	2
   394  000082                     PID_Control@dInput:
   395                           	opt stack 0
   396                           
   397                           ; 3 bytes @ 0x22
   398  000082                     	ds	3
   399  000085                     _PID_Control$1503:
   400                           	opt stack 0
   401                           
   402                           ; 3 bytes @ 0x25
   403  000085                     	ds	3
   404  000088                     PID_Control@error:
   405                           	opt stack 0
   406                           
   407                           ; 3 bytes @ 0x28
   408  000088                     	ds	3
   409  00008B                     _TempAcquisition$1502:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x2B
   413  00008B                     	ds	2
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           
   421                           	psect	cstackCOMRAM
   422  000001                     __pcstackCOMRAM:
   423                           	opt stack 0
   424  000001                     ??_TMR2_Tick:
   425  000001                     
   426                           ; 1 bytes @ 0x0
   427  000001                     	ds	1
   428  000002                     ??_INTERRUPT_InterruptManager:
   429                           
   430                           ; 1 bytes @ 0x1
   431  000002                     	ds	14
   432  000010                     ??_ADC_SelectChannel:
   433  000010                     ?_ADC_GetConversionResult:
   434                           	opt stack 0
   435  000010                     ?___wmul:
   436                           	opt stack 0
   437  000010                     ?___ftpack:
   438                           	opt stack 0
   439  000010                     TMR2_SetInterruptHandler@InterruptHandler:
   440                           	opt stack 0
   441  000010                     PID_SetControllerDirection@Direction:
   442                           	opt stack 0
   443  000010                     ___wmul@multiplier:
   444                           	opt stack 0
   445  000010                     ___ftpack@arg:
   446                           	opt stack 0
   447                           
   448                           ; 3 bytes @ 0xF
   449  000010                     	ds	1
   450  000011                     ADC_SelectChannel@channel:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x10
   454  000011                     	ds	1
   455  000012                     ??_ADC_GetConversionResult:
   456  000012                     ___wmul@multiplicand:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x11
   460  000012                     	ds	1
   461  000013                     ___ftpack@exp:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x12
   465  000013                     	ds	1
   466  000014                     ___ftpack@sign:
   467                           	opt stack 0
   468  000014                     ___wmul@product:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x13
   472  000014                     	ds	1
   473  000015                     ??___ftpack:
   474                           
   475                           ; 1 bytes @ 0x14
   476  000015                     	ds	1
   477  000016                     ?___awdiv:
   478                           	opt stack 0
   479  000016                     ___awdiv@dividend:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x15
   483  000016                     	ds	2
   484  000018                     ___awdiv@divisor:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x17
   488  000018                     	ds	2
   489  00001A                     ___awdiv@counter:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x19
   493  00001A                     	ds	1
   494  00001B                     ___awdiv@sign:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x1A
   498  00001B                     	ds	1
   499  00001C                     ___awdiv@quotient:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x1B
   503  00001C                     	ds	2
   504  00001E                     ?___awtoft:
   505                           	opt stack 0
   506  00001E                     ___awtoft@c:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x1D
   510  00001E                     	ds	3
   511  000021                     ___awtoft@sign:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x20
   515  000021                     	ds	1
   516  000022                     ?___ftdiv:
   517                           	opt stack 0
   518  000022                     PID_SetPoint@newSetPoint:
   519                           	opt stack 0
   520  000022                     ___ftdiv@f1:
   521                           	opt stack 0
   522  000022                     ___ftge@ff1:
   523                           	opt stack 0
   524                           
   525                           ; 3 bytes @ 0x21
   526  000022                     	ds	2
   527  000024                     
   528                           ; 1 bytes @ 0x23
   529  000024                     	ds	1
   530  000025                     ___ftdiv@f2:
   531                           	opt stack 0
   532  000025                     ___ftge@ff2:
   533                           	opt stack 0
   534                           
   535                           ; 3 bytes @ 0x24
   536  000025                     	ds	3
   537  000028                     ??___ftdiv:
   538  000028                     ??___ftge:
   539                           
   540                           ; 1 bytes @ 0x27
   541  000028                     	ds	3
   542  00002B                     ___ftdiv@cntr:
   543                           	opt stack 0
   544  00002B                     PID_SetOutputLimits@Min:
   545                           	opt stack 0
   546  00002B                     PID_SetMode@Mode:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x2A
   550  00002B                     	ds	1
   551  00002C                     ___ftdiv@f3:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x2B
   555  00002C                     	ds	1
   556  00002D                     PID_SetMode@newAuto:
   557                           	opt stack 0
   558  00002D                     PID_SetOutputLimits@Max:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x2C
   562  00002D                     	ds	2
   563  00002F                     ??_PID_SetOutputLimits:
   564  00002F                     ___ftdiv@exp:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x2E
   568  00002F                     	ds	1
   569  000030                     ___ftdiv@sign:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x2F
   573  000030                     	ds	1
   574  000031                     ?___ftmul:
   575                           	opt stack 0
   576  000031                     ___ftmul@f1:
   577                           	opt stack 0
   578                           
   579                           ; 3 bytes @ 0x30
   580  000031                     	ds	3
   581  000034                     ___ftmul@f2:
   582                           	opt stack 0
   583                           
   584                           ; 3 bytes @ 0x33
   585  000034                     	ds	3
   586  000037                     ??___ftmul:
   587                           
   588                           ; 1 bytes @ 0x36
   589  000037                     	ds	3
   590  00003A                     ___ftmul@exp:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x39
   594  00003A                     	ds	1
   595  00003B                     ___ftmul@f3_as_product:
   596                           	opt stack 0
   597                           
   598                           ; 3 bytes @ 0x3A
   599  00003B                     	ds	3
   600  00003E                     ___ftmul@cntr:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x3D
   604  00003E                     	ds	1
   605  00003F                     ___ftmul@sign:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x3E
   609  00003F                     	ds	1
   610  000040                     tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           
   617                           ; 1 bytes @ 0x3F
   618 ;;
   619 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   620 ;;
   621 ;; *************** function _main *****************
   622 ;; Defined at:
   623 ;;		line 56 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels required when called:   10
   643 ;; This function calls:
   644 ;;		_InitHardware
   645 ;;		_MainTask
   646 ;;		_SYSTEM_Initialize
   647 ;; This function is called by:
   648 ;;		Startup code after reset
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text0
   653  0012B6                     __ptext0:
   654                           	opt stack 0
   655  0012B6                     _main:
   656                           	opt stack 21
   657                           
   658                           ;main.c: 59: SYSTEM_Initialize();
   659                           
   660                           ;incstack = 0
   661  0012B6  EC08  F009         	call	_SYSTEM_Initialize	;wreg free
   662                           
   663                           ;main.c: 79: (INTCONbits.GIE = 1);
   664  0012BA  8EF2               	bsf	intcon,7,c	;volatile
   665                           
   666                           ;main.c: 82: (INTCONbits.PEIE = 1);
   667  0012BC  8CF2               	bsf	intcon,6,c	;volatile
   668                           
   669                           ;main.c: 84: InitHardware();
   670  0012BE  EC4B  F007         	call	_InitHardware	;wreg free
   671  0012C2                     l2564:
   672                           
   673                           ;main.c: 94: {
   674                           ;main.c: 95: MainTask();
   675  0012C2  EC7B  F009         	call	_MainTask	;wreg free
   676  0012C6  D7FD               	goto	l2564
   677  0012C8                     __end_of_main:
   678                           	opt stack 0
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           intcon	equ	0xFF2
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           
   687 ;; *************** function _SYSTEM_Initialize *****************
   688 ;; Defined at:
   689 ;;		line 111 in file "mcc_generated_files/mcc.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;Total ram usage:        0 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    6
   710 ;; This function calls:
   711 ;;		_ADC_Initialize
   712 ;;		_CCP5_Initialize
   713 ;;		_EUSART1_Initialize
   714 ;;		_INTERRUPT_Initialize
   715 ;;		_OSCILLATOR_Initialize
   716 ;;		_PIN_MANAGER_Initialize
   717 ;;		_TMR2_Initialize
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text1
   724  001210                     __ptext1:
   725                           	opt stack 0
   726  001210                     _SYSTEM_Initialize:
   727                           	opt stack 24
   728                           
   729                           ;mcc.c: 114: INTERRUPT_Initialize();
   730                           
   731                           ;incstack = 0
   732  001210  EC80  F009         	call	_INTERRUPT_Initialize	;wreg free
   733                           
   734                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   735  001214  EC23  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   736                           
   737                           ;mcc.c: 116: OSCILLATOR_Initialize();
   738  001218  EC64  F009         	call	_OSCILLATOR_Initialize	;wreg free
   739                           
   740                           ;mcc.c: 117: TMR2_Initialize();
   741  00121C  ECD7  F008         	call	_TMR2_Initialize	;wreg free
   742                           
   743                           ;mcc.c: 118: CCP5_Initialize();
   744  001220  EC47  F009         	call	_CCP5_Initialize	;wreg free
   745                           
   746                           ;mcc.c: 119: ADC_Initialize();
   747  001224  EC24  F009         	call	_ADC_Initialize	;wreg free
   748                           
   749                           ;mcc.c: 120: EUSART1_Initialize();
   750  001228  EC3C  F009         	call	_EUSART1_Initialize	;wreg free
   751  00122C  0012               	return		;funcret
   752  00122E                     __end_of_SYSTEM_Initialize:
   753                           	opt stack 0
   754                           tblptru	equ	0xFF8
   755                           tblptrh	equ	0xFF7
   756                           tblptrl	equ	0xFF6
   757                           tablat	equ	0xFF5
   758                           intcon	equ	0xFF2
   759                           postinc0	equ	0xFEE
   760                           wreg	equ	0xFE8
   761                           
   762 ;; *************** function _TMR2_Initialize *****************
   763 ;; Defined at:
   764 ;;		line 65 in file "mcc_generated_files/tmr2.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;Total ram usage:        0 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    5
   785 ;; This function calls:
   786 ;;		_TMR2_SetInterruptHandler
   787 ;;		_TMR2_StartTimer
   788 ;; This function is called by:
   789 ;;		_SYSTEM_Initialize
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text2
   794  0011AE                     __ptext2:
   795                           	opt stack 0
   796  0011AE                     _TMR2_Initialize:
   797                           	opt stack 24
   798                           
   799                           ;tmr2.c: 70: T2CON = 0x01;
   800                           
   801                           ;incstack = 0
   802  0011AE  0E01               	movlw	1
   803  0011B0  6EBA               	movwf	4026,c	;volatile
   804                           
   805                           ;tmr2.c: 73: PR2 = 0x31;
   806  0011B2  0E31               	movlw	49
   807  0011B4  6EBB               	movwf	4027,c	;volatile
   808                           
   809                           ;tmr2.c: 76: TMR2 = 0x00;
   810  0011B6  0E00               	movlw	0
   811  0011B8  6EBC               	movwf	4028,c	;volatile
   812                           
   813                           ;tmr2.c: 79: PIR1bits.TMR2IF = 0;
   814  0011BA  929E               	bcf	3998,1,c	;volatile
   815                           
   816                           ;tmr2.c: 82: PIE1bits.TMR2IE = 1;
   817  0011BC  829D               	bsf	3997,1,c	;volatile
   818                           
   819                           ;tmr2.c: 85: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
   820  0011BE  0E0E               	movlw	low _TMR2_DefaultInterruptHandler
   821  0011C0  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   822  0011C2  0E13               	movlw	high _TMR2_DefaultInterruptHandler
   823  0011C4  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   824  0011C6  EC71  F009         	call	_TMR2_SetInterruptHandler	;wreg free
   825                           
   826                           ;tmr2.c: 88: TMR2_StartTimer();
   827  0011CA  EC7E  F009         	call	_TMR2_StartTimer	;wreg free
   828  0011CE  0012               	return		;funcret
   829  0011D0                     __end_of_TMR2_Initialize:
   830                           	opt stack 0
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           intcon	equ	0xFF2
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           
   839 ;; *************** function _TMR2_StartTimer *****************
   840 ;; Defined at:
   841 ;;		line 91 in file "mcc_generated_files/tmr2.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		None
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    4
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_TMR2_Initialize
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text3
   870  0012FC                     __ptext3:
   871                           	opt stack 0
   872  0012FC                     _TMR2_StartTimer:
   873                           	opt stack 24
   874                           
   875                           ;tmr2.c: 94: T2CONbits.TMR2ON = 1;
   876                           
   877                           ;incstack = 0
   878  0012FC  84BA               	bsf	4026,2,c	;volatile
   879  0012FE  0012               	return		;funcret
   880  001300                     __end_of_TMR2_StartTimer:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           intcon	equ	0xFF2
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           
   890 ;; *************** function _PIN_MANAGER_Initialize *****************
   891 ;; Defined at:
   892 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    4
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_SYSTEM_Initialize
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text4
   921  001046                     __ptext4:
   922                           	opt stack 0
   923  001046                     _PIN_MANAGER_Initialize:
   924                           	opt stack 25
   925                           
   926                           ;pin_manager.c: 56: LATE = 0x00;
   927                           
   928                           ;incstack = 0
   929  001046  0E00               	movlw	0
   930  001048  6E8D               	movwf	3981,c	;volatile
   931                           
   932                           ;pin_manager.c: 57: LATD = 0x00;
   933  00104A  0E00               	movlw	0
   934  00104C  6E8C               	movwf	3980,c	;volatile
   935                           
   936                           ;pin_manager.c: 58: LATA = 0x00;
   937  00104E  0E00               	movlw	0
   938  001050  6E89               	movwf	3977,c	;volatile
   939                           
   940                           ;pin_manager.c: 59: LATB = 0x00;
   941  001052  0E00               	movlw	0
   942  001054  6E8A               	movwf	3978,c	;volatile
   943                           
   944                           ;pin_manager.c: 60: LATC = 0x00;
   945  001056  0E00               	movlw	0
   946  001058  6E8B               	movwf	3979,c	;volatile
   947                           
   948                           ;pin_manager.c: 65: TRISE = 0x07;
   949  00105A  0E07               	movlw	7
   950  00105C  6E96               	movwf	3990,c	;volatile
   951                           
   952                           ;pin_manager.c: 66: TRISA = 0xEE;
   953  00105E  0EEE               	movlw	238
   954  001060  6E92               	movwf	3986,c	;volatile
   955                           
   956                           ;pin_manager.c: 67: TRISB = 0xFF;
   957  001062  6893               	setf	3987,c	;volatile
   958                           
   959                           ;pin_manager.c: 68: TRISC = 0xBF;
   960  001064  0EBF               	movlw	191
   961  001066  6E94               	movwf	3988,c	;volatile
   962                           
   963                           ;pin_manager.c: 69: TRISD = 0x3F;
   964  001068  0E3F               	movlw	63
   965  00106A  6E95               	movwf	3989,c	;volatile
   966                           
   967                           ;pin_manager.c: 74: ANSELC = 0xBC;
   968  00106C  0EBC               	movlw	188
   969  00106E  010F               	movlb	15	; () banked
   970  001070  6F3A               	movwf	58,b	;volatile
   971                           
   972                           ;pin_manager.c: 75: ANSELB = 0x3F;
   973  001072  0E3F               	movlw	63
   974  001074  010F               	movlb	15	; () banked
   975  001076  6F39               	movwf	57,b	;volatile
   976                           
   977                           ;pin_manager.c: 76: ANSELD = 0x3F;
   978  001078  0E3F               	movlw	63
   979  00107A  010F               	movlb	15	; () banked
   980  00107C  6F3B               	movwf	59,b	;volatile
   981                           
   982                           ;pin_manager.c: 77: ANSELE = 0x07;
   983  00107E  0E07               	movlw	7
   984  001080  010F               	movlb	15	; () banked
   985  001082  6F3C               	movwf	60,b	;volatile
   986                           
   987                           ;pin_manager.c: 78: ANSELA = 0x2E;
   988  001084  0E2E               	movlw	46
   989  001086  010F               	movlb	15	; () banked
   990  001088  6F38               	movwf	56,b	;volatile
   991                           
   992                           ; BSR set to: 15
   993                           ;pin_manager.c: 83: WPUB = 0xFF;
   994  00108A  6861               	setf	3937,c	;volatile
   995                           
   996                           ; BSR set to: 15
   997                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
   998  00108C  9EF1               	bcf	intcon2,7,c	;volatile
   999                           
  1000                           ; BSR set to: 15
  1001  00108E  0012               	return		;funcret
  1002  001090                     __end_of_PIN_MANAGER_Initialize:
  1003                           	opt stack 0
  1004                           tblptru	equ	0xFF8
  1005                           tblptrh	equ	0xFF7
  1006                           tblptrl	equ	0xFF6
  1007                           tablat	equ	0xFF5
  1008                           intcon	equ	0xFF2
  1009                           intcon2	equ	0xFF1
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           
  1013 ;; *************** function _OSCILLATOR_Initialize *****************
  1014 ;; Defined at:
  1015 ;;		line 123 in file "mcc_generated_files/mcc.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;Total ram usage:        0 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    4
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_SYSTEM_Initialize
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text5
  1044  0012C8                     __ptext5:
  1045                           	opt stack 0
  1046  0012C8                     _OSCILLATOR_Initialize:
  1047                           	opt stack 25
  1048                           
  1049                           ;mcc.c: 126: OSCCON = 0x70;
  1050                           
  1051                           ; BSR set to: 15
  1052                           ;incstack = 0
  1053  0012C8  0E70               	movlw	112
  1054  0012CA  6ED3               	movwf	4051,c	;volatile
  1055                           
  1056                           ;mcc.c: 128: OSCCON2 = 0x04;
  1057  0012CC  0E04               	movlw	4
  1058  0012CE  6ED2               	movwf	4050,c	;volatile
  1059                           
  1060                           ;mcc.c: 130: OSCTUNE = 0x00;
  1061  0012D0  0E00               	movlw	0
  1062  0012D2  6E9B               	movwf	3995,c	;volatile
  1063  0012D4  0012               	return		;funcret
  1064  0012D6                     __end_of_OSCILLATOR_Initialize:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           intcon	equ	0xFF2
  1071                           intcon2	equ	0xFF1
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           
  1075 ;; *************** function _INTERRUPT_Initialize *****************
  1076 ;; Defined at:
  1077 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		None
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    4
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_SYSTEM_Initialize
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text6
  1106  001300                     __ptext6:
  1107                           	opt stack 0
  1108  001300                     _INTERRUPT_Initialize:
  1109                           	opt stack 25
  1110                           
  1111                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1112                           
  1113                           ;incstack = 0
  1114  001300  9ED0               	bcf	4048,7,c	;volatile
  1115  001302  0012               	return		;funcret
  1116  001304                     __end_of_INTERRUPT_Initialize:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           intcon	equ	0xFF2
  1123                           intcon2	equ	0xFF1
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           
  1127 ;; *************** function _EUSART1_Initialize *****************
  1128 ;; Defined at:
  1129 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    4
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_SYSTEM_Initialize
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text7
  1158  001278                     __ptext7:
  1159                           	opt stack 0
  1160  001278                     _EUSART1_Initialize:
  1161                           	opt stack 25
  1162                           
  1163                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1164                           
  1165                           ;incstack = 0
  1166  001278  0E08               	movlw	8
  1167  00127A  6EB8               	movwf	4024,c	;volatile
  1168                           
  1169                           ;eusart1.c: 63: RCSTA1 = 0x80;
  1170  00127C  0E80               	movlw	128
  1171  00127E  6EAB               	movwf	4011,c	;volatile
  1172                           
  1173                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1174  001280  0E24               	movlw	36
  1175  001282  6EAC               	movwf	4012,c	;volatile
  1176                           
  1177                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  1178  001284  0EA0               	movlw	160
  1179  001286  6EAF               	movwf	4015,c	;volatile
  1180                           
  1181                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  1182  001288  0E01               	movlw	1
  1183  00128A  6EB0               	movwf	4016,c	;volatile
  1184  00128C  0012               	return		;funcret
  1185  00128E                     __end_of_EUSART1_Initialize:
  1186                           	opt stack 0
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           intcon	equ	0xFF2
  1192                           intcon2	equ	0xFF1
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           
  1196 ;; *************** function _CCP5_Initialize *****************
  1197 ;; Defined at:
  1198 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    4
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_SYSTEM_Initialize
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text8
  1227  00128E                     __ptext8:
  1228                           	opt stack 0
  1229  00128E                     _CCP5_Initialize:
  1230                           	opt stack 25
  1231                           
  1232                           ;ccp5.c: 60: CCP5CON = 0x00;
  1233                           
  1234                           ;incstack = 0
  1235  00128E  0E00               	movlw	0
  1236  001290  010F               	movlb	15	; () banked
  1237  001292  6F54               	movwf	84,b	;volatile
  1238                           
  1239                           ;ccp5.c: 62: CCPR5L = 0x00;
  1240  001294  0E00               	movlw	0
  1241  001296  010F               	movlb	15	; () banked
  1242  001298  6F55               	movwf	85,b	;volatile
  1243                           
  1244                           ;ccp5.c: 64: CCPR5H = 0x00;
  1245  00129A  0E00               	movlw	0
  1246  00129C  010F               	movlb	15	; () banked
  1247  00129E  6F56               	movwf	86,b	;volatile
  1248                           
  1249                           ; BSR set to: 15
  1250  0012A0  0012               	return		;funcret
  1251  0012A2                     __end_of_CCP5_Initialize:
  1252                           	opt stack 0
  1253                           tblptru	equ	0xFF8
  1254                           tblptrh	equ	0xFF7
  1255                           tblptrl	equ	0xFF6
  1256                           tablat	equ	0xFF5
  1257                           intcon	equ	0xFF2
  1258                           intcon2	equ	0xFF1
  1259                           postinc0	equ	0xFEE
  1260                           wreg	equ	0xFE8
  1261                           
  1262 ;; *************** function _ADC_Initialize *****************
  1263 ;; Defined at:
  1264 ;;		line 58 in file "mcc_generated_files/adc.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;Total ram usage:        0 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    4
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_SYSTEM_Initialize
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text9
  1293  001248                     __ptext9:
  1294                           	opt stack 0
  1295  001248                     _ADC_Initialize:
  1296                           	opt stack 25
  1297                           
  1298                           ;adc.c: 63: ADCON0 = 0x01;
  1299                           
  1300                           ; BSR set to: 15
  1301                           ;incstack = 0
  1302  001248  0E01               	movlw	1
  1303  00124A  6EC2               	movwf	4034,c	;volatile
  1304                           
  1305                           ;adc.c: 66: ADCON1 = 0x00;
  1306  00124C  0E00               	movlw	0
  1307  00124E  6EC1               	movwf	4033,c	;volatile
  1308                           
  1309                           ;adc.c: 69: ADCON2 = 0x0E;
  1310  001250  0E0E               	movlw	14
  1311  001252  6EC0               	movwf	4032,c	;volatile
  1312                           
  1313                           ;adc.c: 72: ADRESL = 0x00;
  1314  001254  0E00               	movlw	0
  1315  001256  6EC3               	movwf	4035,c	;volatile
  1316                           
  1317                           ;adc.c: 75: ADRESH = 0x00;
  1318  001258  0E00               	movlw	0
  1319  00125A  6EC4               	movwf	4036,c	;volatile
  1320                           
  1321                           ;adc.c: 78: PIE1bits.ADIE = 1;
  1322  00125C  8C9D               	bsf	3997,6,c	;volatile
  1323  00125E  0012               	return		;funcret
  1324  001260                     __end_of_ADC_Initialize:
  1325                           	opt stack 0
  1326                           tblptru	equ	0xFF8
  1327                           tblptrh	equ	0xFF7
  1328                           tblptrl	equ	0xFF6
  1329                           tablat	equ	0xFF5
  1330                           intcon	equ	0xFF2
  1331                           intcon2	equ	0xFF1
  1332                           postinc0	equ	0xFEE
  1333                           wreg	equ	0xFE8
  1334                           
  1335 ;; *************** function _MainTask *****************
  1336 ;; Defined at:
  1337 ;;		line 42 in file "tasks.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    9
  1358 ;; This function calls:
  1359 ;;		_TempUpdate
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text10
  1366  0012F6                     __ptext10:
  1367                           	opt stack 0
  1368  0012F6                     _MainTask:
  1369                           	opt stack 21
  1370                           
  1371                           ;tasks.c: 44: TempUpdate();
  1372                           
  1373                           ;incstack = 0
  1374  0012F6  ECE8  F008         	call	_TempUpdate	;wreg free
  1375  0012FA  0012               	return		;funcret
  1376  0012FC                     __end_of_MainTask:
  1377                           	opt stack 0
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           intcon	equ	0xFF2
  1383                           intcon2	equ	0xFF1
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           
  1387 ;; *************** function _TempUpdate *****************
  1388 ;; Defined at:
  1389 ;;		line 110 in file "tasks.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    8
  1410 ;; This function calls:
  1411 ;;		_TempAcquisition
  1412 ;; This function is called by:
  1413 ;;		_MainTask
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text11
  1418  0011D0                     __ptext11:
  1419                           	opt stack 0
  1420  0011D0                     _TempUpdate:
  1421                           	opt stack 21
  1422                           
  1423                           ;tasks.c: 112: if (TempCounter > 10*10*10*1)
  1424                           
  1425                           ;incstack = 0
  1426  0011D0  0EE9               	movlw	233
  1427  0011D2  0100               	movlb	0	; () banked
  1428  0011D4  5DB0               	subwf	_TempCounter& (0+255),w,b
  1429  0011D6  0E03               	movlw	3
  1430  0011D8  0100               	movlb	0	; () banked
  1431  0011DA  59B1               	subwfb	(_TempCounter+1)& (0+255),w,b
  1432  0011DC  A0D8               	btfss	status,0,c
  1433  0011DE  0012               	return	
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;tasks.c: 113: {
  1437                           ;tasks.c: 114: TempAcquisition();
  1438  0011E0  ECD9  F005         	call	_TempAcquisition	;wreg free
  1439                           
  1440                           ;tasks.c: 115: TempCounter = 0;
  1441  0011E4  0E00               	movlw	0
  1442  0011E6  0100               	movlb	0	; () banked
  1443  0011E8  6FB1               	movwf	(_TempCounter+1)& (0+255),b
  1444  0011EA  0E00               	movlw	0
  1445  0011EC  6FB0               	movwf	_TempCounter& (0+255),b
  1446  0011EE  0012               	return	
  1447  0011F0                     __end_of_TempUpdate:
  1448                           	opt stack 0
  1449                           tblptru	equ	0xFF8
  1450                           tblptrh	equ	0xFF7
  1451                           tblptrl	equ	0xFF6
  1452                           tablat	equ	0xFF5
  1453                           intcon	equ	0xFF2
  1454                           intcon2	equ	0xFF1
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           status	equ	0xFD8
  1458                           
  1459 ;; *************** function _TempAcquisition *****************
  1460 ;; Defined at:
  1461 ;;		line 118 in file "tasks.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;Total ram usage:        2 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    7
  1482 ;; This function calls:
  1483 ;;		_ADC_GetConversionResult
  1484 ;;		_ADC_IsConversionDone
  1485 ;;		_ADC_StartConversion
  1486 ;;		_PID_Control
  1487 ;;		___awdiv
  1488 ;;		___awtoft
  1489 ;;		___ftdiv
  1490 ;;		___ftmul
  1491 ;;		___fttol
  1492 ;;		___wmul
  1493 ;; This function is called by:
  1494 ;;		_TempUpdate
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text12
  1499  000BB2                     __ptext12:
  1500                           	opt stack 0
  1501  000BB2                     _TempAcquisition:
  1502                           	opt stack 21
  1503  000BB2                     l2466:
  1504  000BB2  EC6B  F009         	call	_ADC_IsConversionDone	;wreg free
  1505  000BB6  0900               	iorlw	0
  1506  000BB8  B4D8               	btfsc	status,2,c
  1507  000BBA  D7FB               	goto	l2466
  1508                           
  1509                           ;tasks.c: 128: TEMPERATURA = ADC_GetConversionResult();
  1510  000BBC  EC51  F009         	call	_ADC_GetConversionResult	;wreg free
  1511  000BC0  C010  F0AC         	movff	?_ADC_GetConversionResult,TempAcquisition@TEMPERATURA
  1512  000BC4  C011  F0AD         	movff	?_ADC_GetConversionResult+1,TempAcquisition@TEMPERATURA+1
  1513                           
  1514                           ;tasks.c: 130: ADC_StartConversion();
  1515  000BC8  EC82  F009         	call	_ADC_StartConversion	;wreg free
  1516                           
  1517                           ;tasks.c: 132: TEMP_FLOAT = (((int)(TEMPERATURA))*5)/1024;
  1518  000BCC  0E04               	movlw	4
  1519  000BCE  6E19               	movwf	___awdiv@divisor+1,c
  1520  000BD0  0E00               	movlw	0
  1521  000BD2  6E18               	movwf	___awdiv@divisor,c
  1522  000BD4  C0AC  F010         	movff	TempAcquisition@TEMPERATURA,___wmul@multiplier
  1523  000BD8  C0AD  F011         	movff	TempAcquisition@TEMPERATURA+1,___wmul@multiplier+1
  1524  000BDC  0E00               	movlw	0
  1525  000BDE  6E13               	movwf	___wmul@multiplicand+1,c
  1526  000BE0  0E05               	movlw	5
  1527  000BE2  6E12               	movwf	___wmul@multiplicand,c
  1528  000BE4  ECB1  F008         	call	___wmul	;wreg free
  1529  000BE8  C010  F016         	movff	?___wmul,___awdiv@dividend
  1530  000BEC  C011  F017         	movff	?___wmul+1,___awdiv@dividend+1
  1531  000BF0  ECE1  F007         	call	___awdiv	;wreg free
  1532  000BF4  C016  F01E         	movff	?___awdiv,___awtoft@c
  1533  000BF8  C017  F01F         	movff	?___awdiv+1,___awtoft@c+1
  1534  000BFC  EC67  F008         	call	___awtoft	;wreg free
  1535  000C00  C01E  F0A3         	movff	?___awtoft,_TEMP_FLOAT
  1536  000C04  C01F  F0A4         	movff	?___awtoft+1,_TEMP_FLOAT+1
  1537  000C08  C020  F0A5         	movff	?___awtoft+2,_TEMP_FLOAT+2
  1538                           
  1539                           ;tasks.c: 133: TEMP_FLOAT = (TEMP_FLOAT/0.08)*100;
  1540  000C0C  0ED7               	movlw	215
  1541  000C0E  6E25               	movwf	___ftdiv@f2,c
  1542  000C10  0EA3               	movlw	163
  1543  000C12  6E26               	movwf	___ftdiv@f2+1,c
  1544  000C14  0E3D               	movlw	61
  1545  000C16  6E27               	movwf	___ftdiv@f2+2,c
  1546  000C18  C0A3  F022         	movff	_TEMP_FLOAT,___ftdiv@f1
  1547  000C1C  C0A4  F023         	movff	_TEMP_FLOAT+1,___ftdiv@f1+1
  1548  000C20  C0A5  F024         	movff	_TEMP_FLOAT+2,___ftdiv@f1+2
  1549  000C24  EC66  F005         	call	___ftdiv	;wreg free
  1550  000C28  C022  F031         	movff	?___ftdiv,___ftmul@f1
  1551  000C2C  C023  F032         	movff	?___ftdiv+1,___ftmul@f1+1
  1552  000C30  C024  F033         	movff	?___ftdiv+2,___ftmul@f1+2
  1553  000C34  0E00               	movlw	0
  1554  000C36  6E34               	movwf	___ftmul@f2,c
  1555  000C38  0EC8               	movlw	200
  1556  000C3A  6E35               	movwf	___ftmul@f2+1,c
  1557  000C3C  0E42               	movlw	66
  1558  000C3E  6E36               	movwf	___ftmul@f2+2,c
  1559  000C40  EC73  F004         	call	___ftmul	;wreg free
  1560  000C44  C031  F0A3         	movff	?___ftmul,_TEMP_FLOAT
  1561  000C48  C032  F0A4         	movff	?___ftmul+1,_TEMP_FLOAT+1
  1562  000C4C  C033  F0A5         	movff	?___ftmul+2,_TEMP_FLOAT+2
  1563                           
  1564                           ;tasks.c: 135: DutyPeltier = PID_Control((int)(TEMP_FLOAT));;
  1565  000C50  C0A3  F06F         	movff	_TEMP_FLOAT,___fttol@f1
  1566  000C54  C0A4  F070         	movff	_TEMP_FLOAT+1,___fttol@f1+1
  1567  000C58  C0A5  F071         	movff	_TEMP_FLOAT+2,___fttol@f1+2
  1568  000C5C  ECD2  F002         	call	___fttol	;wreg free
  1569  000C60  C06F  F08B         	movff	?___fttol,_TempAcquisition$1502
  1570  000C64  C070  F08C         	movff	?___fttol+1,_TempAcquisition$1502+1
  1571                           
  1572                           ;tasks.c: 135: DutyPeltier = PID_Control((int)(TEMP_FLOAT));;
  1573  000C68  C08B  F07E         	movff	_TempAcquisition$1502,PID_Control@newInput
  1574  000C6C  C08C  F07F         	movff	_TempAcquisition$1502+1,PID_Control@newInput+1
  1575  000C70  EC4F  F000         	call	_PID_Control	;wreg free
  1576  000C74  C07E  F0AE         	movff	?_PID_Control,_DutyPeltier
  1577  000C78  C07F  F0AF         	movff	?_PID_Control+1,_DutyPeltier+1
  1578  000C7C  0012               	return		;funcret
  1579  000C7E                     __end_of_TempAcquisition:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           intcon	equ	0xFF2
  1586                           intcon2	equ	0xFF1
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           status	equ	0xFD8
  1590                           
  1591 ;; *************** function ___wmul *****************
  1592 ;; Defined at:
  1593 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\Umul16.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  multiplier      2   15[COMRAM] unsigned int 
  1596 ;;  multiplicand    2   17[COMRAM] unsigned int 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  product         2   19[COMRAM] unsigned int 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  2   15[COMRAM] unsigned int 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, prodl, prodh
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1608 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;Total ram usage:        6 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    4
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_TempAcquisition
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text13
  1623  001162                     __ptext13:
  1624                           	opt stack 0
  1625  001162                     ___wmul:
  1626                           	opt stack 23
  1627                           
  1628                           ;incstack = 0
  1629  001162  5010               	movf	___wmul@multiplier,w,c
  1630  001164  0212               	mulwf	___wmul@multiplicand,c
  1631  001166  CFF3 F014          	movff	prodl,___wmul@product
  1632  00116A  CFF4 F015          	movff	prodh,___wmul@product+1
  1633  00116E  5010               	movf	___wmul@multiplier,w,c
  1634  001170  0213               	mulwf	___wmul@multiplicand+1,c
  1635  001172  50F3               	movf	prodl,w,c
  1636  001174  2615               	addwf	___wmul@product+1,f,c
  1637  001176  5011               	movf	___wmul@multiplier+1,w,c
  1638  001178  0212               	mulwf	___wmul@multiplicand,c
  1639  00117A  50F3               	movf	prodl,w,c
  1640  00117C  2615               	addwf	___wmul@product+1,f,c
  1641  00117E  C014  F010         	movff	___wmul@product,?___wmul
  1642  001182  C015  F011         	movff	___wmul@product+1,?___wmul+1
  1643  001186  0012               	return	
  1644  001188                     __end_of___wmul:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           prodh	equ	0xFF4
  1651                           prodl	equ	0xFF3
  1652                           intcon	equ	0xFF2
  1653                           intcon2	equ	0xFF1
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function ___awdiv *****************
  1659 ;; Defined at:
  1660 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awdiv.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  dividend        2   21[COMRAM] int 
  1663 ;;  divisor         2   23[COMRAM] int 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  quotient        2   27[COMRAM] int 
  1666 ;;  sign            1   26[COMRAM] unsigned char 
  1667 ;;  counter         1   25[COMRAM] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2   21[COMRAM] int 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;Total ram usage:        8 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    4
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_TempAcquisition
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text14
  1692  000FC2                     __ptext14:
  1693                           	opt stack 0
  1694  000FC2                     ___awdiv:
  1695                           	opt stack 23
  1696                           
  1697                           ;incstack = 0
  1698  000FC2  0E00               	movlw	0
  1699  000FC4  6E1B               	movwf	___awdiv@sign,c
  1700  000FC6  AE19               	btfss	___awdiv@divisor+1,7,c
  1701  000FC8  D006               	goto	l1994
  1702  000FCA  6C18               	negf	___awdiv@divisor,c
  1703  000FCC  1E19               	comf	___awdiv@divisor+1,f,c
  1704  000FCE  B0D8               	btfsc	status,0,c
  1705  000FD0  2A19               	incf	___awdiv@divisor+1,f,c
  1706  000FD2  0E01               	movlw	1
  1707  000FD4  6E1B               	movwf	___awdiv@sign,c
  1708  000FD6                     l1994:
  1709  000FD6  AE17               	btfss	___awdiv@dividend+1,7,c
  1710  000FD8  D006               	goto	l2000
  1711  000FDA  6C16               	negf	___awdiv@dividend,c
  1712  000FDC  1E17               	comf	___awdiv@dividend+1,f,c
  1713  000FDE  B0D8               	btfsc	status,0,c
  1714  000FE0  2A17               	incf	___awdiv@dividend+1,f,c
  1715  000FE2  0E01               	movlw	1
  1716  000FE4  1A1B               	xorwf	___awdiv@sign,f,c
  1717  000FE6                     l2000:
  1718  000FE6  0E00               	movlw	0
  1719  000FE8  6E1D               	movwf	___awdiv@quotient+1,c
  1720  000FEA  0E00               	movlw	0
  1721  000FEC  6E1C               	movwf	___awdiv@quotient,c
  1722  000FEE  5018               	movf	___awdiv@divisor,w,c
  1723  000FF0  1019               	iorwf	___awdiv@divisor+1,w,c
  1724  000FF2  B4D8               	btfsc	status,2,c
  1725  000FF4  D01C               	goto	l2022
  1726  000FF6  0E01               	movlw	1
  1727  000FF8  6E1A               	movwf	___awdiv@counter,c
  1728  000FFA  D004               	goto	l2008
  1729  000FFC                     l2006:
  1730  000FFC  90D8               	bcf	status,0,c
  1731  000FFE  3618               	rlcf	___awdiv@divisor,f,c
  1732  001000  3619               	rlcf	___awdiv@divisor+1,f,c
  1733  001002  2A1A               	incf	___awdiv@counter,f,c
  1734  001004                     l2008:
  1735  001004  AE19               	btfss	___awdiv@divisor+1,7,c
  1736  001006  D7FA               	goto	l2006
  1737  001008                     l2010:
  1738  001008  90D8               	bcf	status,0,c
  1739  00100A  361C               	rlcf	___awdiv@quotient,f,c
  1740  00100C  361D               	rlcf	___awdiv@quotient+1,f,c
  1741  00100E  5018               	movf	___awdiv@divisor,w,c
  1742  001010  5C16               	subwf	___awdiv@dividend,w,c
  1743  001012  5019               	movf	___awdiv@divisor+1,w,c
  1744  001014  5817               	subwfb	___awdiv@dividend+1,w,c
  1745  001016  A0D8               	btfss	status,0,c
  1746  001018  D005               	goto	l2018
  1747  00101A  5018               	movf	___awdiv@divisor,w,c
  1748  00101C  5E16               	subwf	___awdiv@dividend,f,c
  1749  00101E  5019               	movf	___awdiv@divisor+1,w,c
  1750  001020  5A17               	subwfb	___awdiv@dividend+1,f,c
  1751  001022  801C               	bsf	___awdiv@quotient,0,c
  1752  001024                     l2018:
  1753  001024  90D8               	bcf	status,0,c
  1754  001026  3219               	rrcf	___awdiv@divisor+1,f,c
  1755  001028  3218               	rrcf	___awdiv@divisor,f,c
  1756  00102A  2E1A               	decfsz	___awdiv@counter,f,c
  1757  00102C  D7ED               	goto	l2010
  1758  00102E                     l2022:
  1759  00102E  501B               	movf	___awdiv@sign,w,c
  1760  001030  B4D8               	btfsc	status,2,c
  1761  001032  D004               	goto	l2026
  1762  001034  6C1C               	negf	___awdiv@quotient,c
  1763  001036  1E1D               	comf	___awdiv@quotient+1,f,c
  1764  001038  B0D8               	btfsc	status,0,c
  1765  00103A  2A1D               	incf	___awdiv@quotient+1,f,c
  1766  00103C                     l2026:
  1767  00103C  C01C  F016         	movff	___awdiv@quotient,?___awdiv
  1768  001040  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
  1769  001044  0012               	return	
  1770  001046                     __end_of___awdiv:
  1771                           	opt stack 0
  1772                           tblptru	equ	0xFF8
  1773                           tblptrh	equ	0xFF7
  1774                           tblptrl	equ	0xFF6
  1775                           tablat	equ	0xFF5
  1776                           prodh	equ	0xFF4
  1777                           prodl	equ	0xFF3
  1778                           intcon	equ	0xFF2
  1779                           intcon2	equ	0xFF1
  1780                           postinc0	equ	0xFEE
  1781                           wreg	equ	0xFE8
  1782                           status	equ	0xFD8
  1783                           
  1784 ;; *************** function _PID_Control *****************
  1785 ;; Defined at:
  1786 ;;		line 22 in file "PID.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  newInput        2   30[BANK0 ] int 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  error           3   40[BANK0 ] int 
  1791 ;;  dInput          3   34[BANK0 ] int 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  2   30[BANK0 ] int 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;Total ram usage:       13 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    6
  1808 ;; This function calls:
  1809 ;;		___awtoft
  1810 ;;		___ftadd
  1811 ;;		___ftge
  1812 ;;		___ftmul
  1813 ;;		___ftneg
  1814 ;;		___fttol
  1815 ;; This function is called by:
  1816 ;;		_TempAcquisition
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text15
  1821  00009E                     __ptext15:
  1822                           	opt stack 0
  1823  00009E                     _PID_Control:
  1824                           	opt stack 21
  1825                           
  1826                           ;PID.c: 24: double error, dInput;
  1827                           ;PID.c: 26: Input = newInput;
  1828                           
  1829                           ;incstack = 0
  1830  00009E  C07E  F0AA         	movff	PID_Control@newInput,_Input
  1831  0000A2  C07F  F0AB         	movff	PID_Control@newInput+1,_Input+1
  1832                           
  1833                           ;PID.c: 27: if(!inAuto) return PIDConfig.Min;
  1834  0000A6  0100               	movlb	0	; () banked
  1835  0000A8  51B2               	movf	_inAuto& (0+255),w,b
  1836  0000AA  A4D8               	btfss	status,2,c
  1837  0000AC  D005               	goto	l2396
  1838                           
  1839                           ; BSR set to: 0
  1840  0000AE  C08D  F07E         	movff	_PIDConfig,?_PID_Control	;volatile
  1841  0000B2  C08E  F07F         	movff	_PIDConfig+1,?_PID_Control+1	;volatile
  1842  0000B6  0012               	return	
  1843  0000B8                     l2396:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;PID.c: 31: {
  1847                           ;PID.c: 33: error = PIDConfig.SetPoint - Input;
  1848  0000B8  C0AA  F01E         	movff	_Input,___awtoft@c
  1849  0000BC  C0AB  F01F         	movff	_Input+1,___awtoft@c+1
  1850  0000C0  EC67  F008         	call	___awtoft	;wreg free
  1851  0000C4  C01E  F060         	movff	?___awtoft,___ftneg@f1
  1852  0000C8  C01F  F061         	movff	?___awtoft+1,___ftneg@f1+1
  1853  0000CC  C020  F062         	movff	?___awtoft+2,___ftneg@f1+2
  1854  0000D0  EC83  F008         	call	___ftneg	;wreg free
  1855  0000D4  C060  F063         	movff	?___ftneg,___ftadd@f1
  1856  0000D8  C061  F064         	movff	?___ftneg+1,___ftadd@f1+1
  1857  0000DC  C062  F065         	movff	?___ftneg+2,___ftadd@f1+2
  1858  0000E0  C09A  F066         	movff	_PIDConfig+13,___ftadd@f2	;volatile
  1859  0000E4  C09B  F067         	movff	_PIDConfig+14,___ftadd@f2+1	;volatile
  1860  0000E8  C09C  F068         	movff	_PIDConfig+15,___ftadd@f2+2	;volatile
  1861  0000EC  EC9E  F001         	call	___ftadd	;wreg free
  1862  0000F0  C063  F088         	movff	?___ftadd,PID_Control@error
  1863  0000F4  C064  F089         	movff	?___ftadd+1,PID_Control@error+1
  1864  0000F8  C065  F08A         	movff	?___ftadd+2,PID_Control@error+2
  1865                           
  1866                           ;PID.c: 34: ITerm += (PIDConfig.Ki * error);
  1867  0000FC  C0A0  F063         	movff	_ITerm,___ftadd@f1
  1868  000100  C0A1  F064         	movff	_ITerm+1,___ftadd@f1+1
  1869  000104  C0A2  F065         	movff	_ITerm+2,___ftadd@f1+2
  1870  000108  C088  F034         	movff	PID_Control@error,___ftmul@f2
  1871  00010C  C089  F035         	movff	PID_Control@error+1,___ftmul@f2+1
  1872  000110  C08A  F036         	movff	PID_Control@error+2,___ftmul@f2+2
  1873  000114  C094  F031         	movff	_PIDConfig+7,___ftmul@f1	;volatile
  1874  000118  C095  F032         	movff	_PIDConfig+8,___ftmul@f1+1	;volatile
  1875  00011C  C096  F033         	movff	_PIDConfig+9,___ftmul@f1+2	;volatile
  1876  000120  EC73  F004         	call	___ftmul	;wreg free
  1877  000124  C031  F066         	movff	?___ftmul,___ftadd@f2
  1878  000128  C032  F067         	movff	?___ftmul+1,___ftadd@f2+1
  1879  00012C  C033  F068         	movff	?___ftmul+2,___ftadd@f2+2
  1880  000130  EC9E  F001         	call	___ftadd	;wreg free
  1881  000134  C063  F0A0         	movff	?___ftadd,_ITerm
  1882  000138  C064  F0A1         	movff	?___ftadd+1,_ITerm+1
  1883  00013C  C065  F0A2         	movff	?___ftadd+2,_ITerm+2
  1884                           
  1885                           ;PID.c: 35: if (ITerm > PIDConfig.Max) ITerm = PIDConfig.Max;
  1886  000140  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  1887  000144  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  1888  000148  EC67  F008         	call	___awtoft	;wreg free
  1889  00014C  C01E  F022         	movff	?___awtoft,___ftge@ff1
  1890  000150  C01F  F023         	movff	?___awtoft+1,___ftge@ff1+1
  1891  000154  C020  F024         	movff	?___awtoft+2,___ftge@ff1+2
  1892  000158  C0A0  F025         	movff	_ITerm,___ftge@ff2
  1893  00015C  C0A1  F026         	movff	_ITerm+1,___ftge@ff2+1
  1894  000160  C0A2  F027         	movff	_ITerm+2,___ftge@ff2+2
  1895  000164  EC99  F007         	call	___ftge	;wreg free
  1896  000168  B0D8               	btfsc	status,0,c
  1897  00016A  D007               	goto	l2400
  1898  00016C  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  1899  000170  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  1900  000174  EC67  F008         	call	___awtoft	;wreg free
  1901  000178  D01C               	goto	L1
  1902  00017A                     l2400:
  1903                           
  1904                           ;PID.c: 36: else if (ITerm < PIDConfig.Min) ITerm = PIDConfig.Min;
  1905  00017A  C0A0  F022         	movff	_ITerm,___ftge@ff1
  1906  00017E  C0A1  F023         	movff	_ITerm+1,___ftge@ff1+1
  1907  000182  C0A2  F024         	movff	_ITerm+2,___ftge@ff1+2
  1908  000186  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  1909  00018A  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  1910  00018E  EC67  F008         	call	___awtoft	;wreg free
  1911  000192  C01E  F025         	movff	?___awtoft,___ftge@ff2
  1912  000196  C01F  F026         	movff	?___awtoft+1,___ftge@ff2+1
  1913  00019A  C020  F027         	movff	?___awtoft+2,___ftge@ff2+2
  1914  00019E  EC99  F007         	call	___ftge	;wreg free
  1915  0001A2  B0D8               	btfsc	status,0,c
  1916  0001A4  D00C               	goto	l375
  1917  0001A6  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  1918  0001AA  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  1919  0001AE  EC67  F008         	call	___awtoft	;wreg free
  1920  0001B2                     L1:
  1921  0001B2  C01E  F0A0         	movff	?___awtoft,_ITerm
  1922  0001B6  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  1923  0001BA  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  1924  0001BE                     l375:
  1925                           
  1926                           ;PID.c: 37: dInput = (Input - lastInput);
  1927  0001BE  C0AA  F01E         	movff	_Input,___awtoft@c
  1928  0001C2  C0AB  F01F         	movff	_Input+1,___awtoft@c+1
  1929  0001C6  EC67  F008         	call	___awtoft	;wreg free
  1930  0001CA  C01E  F063         	movff	?___awtoft,___ftadd@f1
  1931  0001CE  C01F  F064         	movff	?___awtoft+1,___ftadd@f1+1
  1932  0001D2  C020  F065         	movff	?___awtoft+2,___ftadd@f1+2
  1933  0001D6  C09D  F060         	movff	_lastInput,___ftneg@f1
  1934  0001DA  C09E  F061         	movff	_lastInput+1,___ftneg@f1+1
  1935  0001DE  C09F  F062         	movff	_lastInput+2,___ftneg@f1+2
  1936  0001E2  EC83  F008         	call	___ftneg	;wreg free
  1937  0001E6  C060  F066         	movff	?___ftneg,___ftadd@f2
  1938  0001EA  C061  F067         	movff	?___ftneg+1,___ftadd@f2+1
  1939  0001EE  C062  F068         	movff	?___ftneg+2,___ftadd@f2+2
  1940  0001F2  EC9E  F001         	call	___ftadd	;wreg free
  1941  0001F6  C063  F082         	movff	?___ftadd,PID_Control@dInput
  1942  0001FA  C064  F083         	movff	?___ftadd+1,PID_Control@dInput+1
  1943  0001FE  C065  F084         	movff	?___ftadd+2,PID_Control@dInput+2
  1944                           
  1945                           ;PID.c: 40: Output = (int)(PIDConfig.Kp * error + ITerm - PIDConfig.Kd * dInput);
  1946  000202  C082  F034         	movff	PID_Control@dInput,___ftmul@f2
  1947  000206  C083  F035         	movff	PID_Control@dInput+1,___ftmul@f2+1
  1948  00020A  C084  F036         	movff	PID_Control@dInput+2,___ftmul@f2+2
  1949  00020E  C097  F031         	movff	_PIDConfig+10,___ftmul@f1	;volatile
  1950  000212  C098  F032         	movff	_PIDConfig+11,___ftmul@f1+1	;volatile
  1951  000216  C099  F033         	movff	_PIDConfig+12,___ftmul@f1+2	;volatile
  1952  00021A  EC73  F004         	call	___ftmul	;wreg free
  1953  00021E  C031  F060         	movff	?___ftmul,___ftneg@f1
  1954  000222  C032  F061         	movff	?___ftmul+1,___ftneg@f1+1
  1955  000226  C033  F062         	movff	?___ftmul+2,___ftneg@f1+2
  1956  00022A  EC83  F008         	call	___ftneg	;wreg free
  1957  00022E  C060  F066         	movff	?___ftneg,___ftadd@f2
  1958  000232  C061  F067         	movff	?___ftneg+1,___ftadd@f2+1
  1959  000236  C062  F068         	movff	?___ftneg+2,___ftadd@f2+2
  1960  00023A  C088  F034         	movff	PID_Control@error,___ftmul@f2
  1961  00023E  C089  F035         	movff	PID_Control@error+1,___ftmul@f2+1
  1962  000242  C08A  F036         	movff	PID_Control@error+2,___ftmul@f2+2
  1963  000246  C091  F031         	movff	_PIDConfig+4,___ftmul@f1	;volatile
  1964  00024A  C092  F032         	movff	_PIDConfig+5,___ftmul@f1+1	;volatile
  1965  00024E  C093  F033         	movff	_PIDConfig+6,___ftmul@f1+2	;volatile
  1966  000252  EC73  F004         	call	___ftmul	;wreg free
  1967  000256  C031  F063         	movff	?___ftmul,___ftadd@f1
  1968  00025A  C032  F064         	movff	?___ftmul+1,___ftadd@f1+1
  1969  00025E  C033  F065         	movff	?___ftmul+2,___ftadd@f1+2
  1970  000262  EC9E  F001         	call	___ftadd	;wreg free
  1971  000266  C063  F085         	movff	?___ftadd,_PID_Control$1503
  1972  00026A  C064  F086         	movff	?___ftadd+1,_PID_Control$1503+1
  1973  00026E  C065  F087         	movff	?___ftadd+2,_PID_Control$1503+2
  1974                           
  1975                           ;PID.c: 40: Output = (int)(PIDConfig.Kp * error + ITerm - PIDConfig.Kd * dInput);
  1976  000272  C0A0  F066         	movff	_ITerm,___ftadd@f2
  1977  000276  C0A1  F067         	movff	_ITerm+1,___ftadd@f2+1
  1978  00027A  C0A2  F068         	movff	_ITerm+2,___ftadd@f2+2
  1979  00027E  C085  F063         	movff	_PID_Control$1503,___ftadd@f1
  1980  000282  C086  F064         	movff	_PID_Control$1503+1,___ftadd@f1+1
  1981  000286  C087  F065         	movff	_PID_Control$1503+2,___ftadd@f1+2
  1982  00028A  EC9E  F001         	call	___ftadd	;wreg free
  1983  00028E  C063  F06F         	movff	?___ftadd,___fttol@f1
  1984  000292  C064  F070         	movff	?___ftadd+1,___fttol@f1+1
  1985  000296  C065  F071         	movff	?___ftadd+2,___fttol@f1+2
  1986  00029A  ECD2  F002         	call	___fttol	;wreg free
  1987  00029E  C06F  F0A8         	movff	?___fttol,_Output
  1988  0002A2  C070  F0A9         	movff	?___fttol+1,_Output+1
  1989                           
  1990                           ;PID.c: 41: if (Output > PIDConfig.Max) Output = PIDConfig.Max;
  1991  0002A6  0100               	movlb	0	; () banked
  1992  0002A8  51A8               	movf	_Output& (0+255),w,b
  1993  0002AA  0100               	movlb	0	; () banked
  1994  0002AC  5D8F               	subwf	(_PIDConfig+2)& (0+255),w,b	;volatile
  1995  0002AE  0100               	movlb	0	; () banked
  1996  0002B0  5190               	movf	(_PIDConfig+3)& (0+255),w,b	;volatile
  1997  0002B2  0A80               	xorlw	128
  1998  0002B4  0100               	movlb	0	; () banked
  1999  0002B6  6F80               	movwf	??_PID_Control& (0+255),b
  2000  0002B8  0100               	movlb	0	; () banked
  2001  0002BA  51A9               	movf	(_Output+1)& (0+255),w,b
  2002  0002BC  0A80               	xorlw	128
  2003  0002BE  0100               	movlb	0	; () banked
  2004  0002C0  5980               	subwfb	??_PID_Control& (0+255),w,b
  2005  0002C2  B0D8               	btfsc	status,0,c
  2006  0002C4  D005               	goto	l2408
  2007                           
  2008                           ; BSR set to: 0
  2009  0002C6  C08F  F0A8         	movff	_PIDConfig+2,_Output	;volatile
  2010  0002CA  C090  F0A9         	movff	_PIDConfig+3,_Output+1	;volatile
  2011  0002CE  D014               	goto	l2412
  2012  0002D0                     l2408:
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;PID.c: 42: else if(Output < PIDConfig.Min) Output = PIDConfig.Min;
  2016  0002D0  0100               	movlb	0	; () banked
  2017  0002D2  518D               	movf	_PIDConfig& (0+255),w,b	;volatile
  2018  0002D4  0100               	movlb	0	; () banked
  2019  0002D6  5DA8               	subwf	_Output& (0+255),w,b
  2020  0002D8  0100               	movlb	0	; () banked
  2021  0002DA  51A9               	movf	(_Output+1)& (0+255),w,b
  2022  0002DC  0A80               	xorlw	128
  2023  0002DE  0100               	movlb	0	; () banked
  2024  0002E0  6F80               	movwf	??_PID_Control& (0+255),b
  2025  0002E2  0100               	movlb	0	; () banked
  2026  0002E4  518E               	movf	(_PIDConfig+1)& (0+255),w,b	;volatile
  2027  0002E6  0A80               	xorlw	128
  2028  0002E8  0100               	movlb	0	; () banked
  2029  0002EA  5980               	subwfb	??_PID_Control& (0+255),w,b
  2030  0002EC  B0D8               	btfsc	status,0,c
  2031  0002EE  D004               	goto	l2412
  2032                           
  2033                           ; BSR set to: 0
  2034  0002F0  C08D  F0A8         	movff	_PIDConfig,_Output	;volatile
  2035  0002F4  C08E  F0A9         	movff	_PIDConfig+1,_Output+1	;volatile
  2036  0002F8                     l2412:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;PID.c: 45: lastInput = Input;
  2040  0002F8  C0AA  F01E         	movff	_Input,___awtoft@c
  2041  0002FC  C0AB  F01F         	movff	_Input+1,___awtoft@c+1
  2042  000300  EC67  F008         	call	___awtoft	;wreg free
  2043  000304  C01E  F09D         	movff	?___awtoft,_lastInput
  2044  000308  C01F  F09E         	movff	?___awtoft+1,_lastInput+1
  2045  00030C  C020  F09F         	movff	?___awtoft+2,_lastInput+2
  2046                           
  2047                           ;PID.c: 47: }
  2048                           ;PID.c: 48: return (PIDConfig.Max - Output);
  2049  000310  C0A8  F080         	movff	_Output,??_PID_Control
  2050  000314  C0A9  F081         	movff	_Output+1,??_PID_Control+1
  2051  000318  0100               	movlb	0	; () banked
  2052  00031A  1F80               	comf	??_PID_Control& (0+255),f,b
  2053  00031C  1F81               	comf	(??_PID_Control+1)& (0+255),f,b
  2054  00031E  4B80               	infsnz	??_PID_Control& (0+255),f,b
  2055  000320  2B81               	incf	(??_PID_Control+1)& (0+255),f,b
  2056  000322  0100               	movlb	0	; () banked
  2057  000324  518F               	movf	(_PIDConfig+2)& (0+255),w,b	;volatile
  2058  000326  0100               	movlb	0	; () banked
  2059  000328  2580               	addwf	??_PID_Control& (0+255),w,b
  2060  00032A  0100               	movlb	0	; () banked
  2061  00032C  6F7E               	movwf	?_PID_Control& (0+255),b
  2062  00032E  0100               	movlb	0	; () banked
  2063  000330  5190               	movf	(_PIDConfig+3)& (0+255),w,b	;volatile
  2064  000332  0100               	movlb	0	; () banked
  2065  000334  2181               	addwfc	(??_PID_Control+1)& (0+255),w,b
  2066  000336  0100               	movlb	0	; () banked
  2067  000338  6F7F               	movwf	(?_PID_Control+1)& (0+255),b
  2068  00033A  0012               	return	
  2069  00033C                     __end_of_PID_Control:
  2070                           	opt stack 0
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           prodh	equ	0xFF4
  2076                           prodl	equ	0xFF3
  2077                           intcon	equ	0xFF2
  2078                           intcon2	equ	0xFF1
  2079                           postinc0	equ	0xFEE
  2080                           wreg	equ	0xFE8
  2081                           status	equ	0xFD8
  2082                           
  2083 ;; *************** function ___fttol *****************
  2084 ;; Defined at:
  2085 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\fttol.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  f1              3   15[BANK0 ] float 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  lval            4   25[BANK0 ] unsigned long 
  2090 ;;  exp1            1   29[BANK0 ] unsigned char 
  2091 ;;  sign1           1   24[BANK0 ] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  4   15[BANK0 ] long 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;Total ram usage:       15 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    4
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_TempAcquisition
  2112 ;;		_PID_Control
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text16
  2117  0005A4                     __ptext16:
  2118                           	opt stack 0
  2119  0005A4                     ___fttol:
  2120                           	opt stack 23
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;incstack = 0
  2124  0005A4  C071  F073         	movff	___fttol@f1+2,??___fttol
  2125  0005A8  0100               	movlb	0	; () banked
  2126  0005AA  6B74               	clrf	(??___fttol+1)& (0+255),b
  2127  0005AC  6B75               	clrf	(??___fttol+2)& (0+255),b
  2128  0005AE  0100               	movlb	0	; () banked
  2129  0005B0  3570               	rlcf	(___fttol@f1+1)& (0+255),w,b
  2130  0005B2  0100               	movlb	0	; () banked
  2131  0005B4  3773               	rlcf	??___fttol& (0+255),f,b
  2132  0005B6  E301               	bnc	u1501
  2133  0005B8  8174               	bsf	(??___fttol+1)& (0+255),0,b
  2134  0005BA                     u1501:
  2135  0005BA  0100               	movlb	0	; () banked
  2136  0005BC  5173               	movf	??___fttol& (0+255),w,b
  2137  0005BE  0100               	movlb	0	; () banked
  2138  0005C0  6F7D               	movwf	___fttol@exp1& (0+255),b
  2139  0005C2  0100               	movlb	0	; () banked
  2140  0005C4  517D               	movf	___fttol@exp1& (0+255),w,b
  2141  0005C6  A4D8               	btfss	status,2,c
  2142  0005C8  D00A               	goto	l1856
  2143                           
  2144                           ; BSR set to: 0
  2145  0005CA  0E00               	movlw	0
  2146  0005CC  0100               	movlb	0	; () banked
  2147  0005CE  6F6F               	movwf	?___fttol& (0+255),b
  2148  0005D0  0E00               	movlw	0
  2149  0005D2  6F70               	movwf	(?___fttol+1)& (0+255),b
  2150  0005D4  0E00               	movlw	0
  2151  0005D6  6F71               	movwf	(?___fttol+2)& (0+255),b
  2152  0005D8  0E00               	movlw	0
  2153  0005DA  6F72               	movwf	(?___fttol+3)& (0+255),b
  2154                           
  2155                           ; BSR set to: 0
  2156  0005DC  0012               	return	
  2157  0005DE                     l1856:
  2158                           
  2159                           ; BSR set to: 0
  2160  0005DE  0E17               	movlw	23
  2161  0005E0  0100               	movlb	0	; () banked
  2162  0005E2  6F73               	movwf	??___fttol& (0+255),b
  2163  0005E4  C06F  F074         	movff	___fttol@f1,??___fttol+1
  2164  0005E8  C070  F075         	movff	___fttol@f1+1,??___fttol+2
  2165  0005EC  C071  F076         	movff	___fttol@f1+2,??___fttol+3
  2166  0005F0  0100               	movlb	0	; () banked
  2167  0005F2  2973               	incf	??___fttol& (0+255),w,b
  2168  0005F4  0100               	movlb	0	; () banked
  2169  0005F6  6F77               	movwf	(??___fttol+4)& (0+255),b
  2170  0005F8  D005               	goto	u1520
  2171  0005FA                     u1525:
  2172  0005FA  0100               	movlb	0	; () banked
  2173  0005FC  90D8               	bcf	status,0,c
  2174  0005FE  3376               	rrcf	(??___fttol+3)& (0+255),f,b
  2175  000600  3375               	rrcf	(??___fttol+2)& (0+255),f,b
  2176  000602  3374               	rrcf	(??___fttol+1)& (0+255),f,b
  2177  000604                     u1520:
  2178  000604  0100               	movlb	0	; () banked
  2179  000606  2F77               	decfsz	(??___fttol+4)& (0+255),f,b
  2180  000608  D7F8               	goto	u1525
  2181  00060A  0100               	movlb	0	; () banked
  2182  00060C  5174               	movf	(??___fttol+1)& (0+255),w,b
  2183  00060E  0100               	movlb	0	; () banked
  2184  000610  6F78               	movwf	___fttol@sign1& (0+255),b
  2185                           
  2186                           ; BSR set to: 0
  2187  000612  0100               	movlb	0	; () banked
  2188  000614  8F70               	bsf	(___fttol@f1+1)& (0+255),7,b
  2189                           
  2190                           ; BSR set to: 0
  2191  000616  0EFF               	movlw	255
  2192  000618  0100               	movlb	0	; () banked
  2193  00061A  176F               	andwf	___fttol@f1& (0+255),f,b
  2194  00061C  0EFF               	movlw	255
  2195  00061E  0100               	movlb	0	; () banked
  2196  000620  1770               	andwf	(___fttol@f1+1)& (0+255),f,b
  2197  000622  0E00               	movlw	0
  2198  000624  0100               	movlb	0	; () banked
  2199  000626  1771               	andwf	(___fttol@f1+2)& (0+255),f,b
  2200                           
  2201                           ; BSR set to: 0
  2202  000628  0100               	movlb	0	; () banked
  2203  00062A  516F               	movf	___fttol@f1& (0+255),w,b
  2204  00062C  0100               	movlb	0	; () banked
  2205  00062E  6F79               	movwf	___fttol@lval& (0+255),b
  2206  000630  0100               	movlb	0	; () banked
  2207  000632  5170               	movf	(___fttol@f1+1)& (0+255),w,b
  2208  000634  0100               	movlb	0	; () banked
  2209  000636  6F7A               	movwf	(___fttol@lval+1)& (0+255),b
  2210  000638  0100               	movlb	0	; () banked
  2211  00063A  5171               	movf	(___fttol@f1+2)& (0+255),w,b
  2212  00063C  0100               	movlb	0	; () banked
  2213  00063E  6F7B               	movwf	(___fttol@lval+2)& (0+255),b
  2214  000640  0100               	movlb	0	; () banked
  2215  000642  6B7C               	clrf	(___fttol@lval+3)& (0+255),b
  2216                           
  2217                           ; BSR set to: 0
  2218  000644  0E8E               	movlw	142
  2219  000646  0100               	movlb	0	; () banked
  2220  000648  5F7D               	subwf	___fttol@exp1& (0+255),f,b
  2221                           
  2222                           ; BSR set to: 0
  2223  00064A  0100               	movlb	0	; () banked
  2224  00064C  AF7D               	btfss	___fttol@exp1& (0+255),7,b
  2225  00064E  D01A               	goto	l1878
  2226                           
  2227                           ; BSR set to: 0
  2228  000650  0100               	movlb	0	; () banked
  2229  000652  517D               	movf	___fttol@exp1& (0+255),w,b
  2230  000654  0A80               	xorlw	128
  2231  000656  0F8F               	addlw	143
  2232  000658  B0D8               	btfsc	status,0,c
  2233  00065A  D00A               	goto	l1874
  2234                           
  2235                           ; BSR set to: 0
  2236  00065C  0E00               	movlw	0
  2237  00065E  0100               	movlb	0	; () banked
  2238  000660  6F6F               	movwf	?___fttol& (0+255),b
  2239  000662  0E00               	movlw	0
  2240  000664  6F70               	movwf	(?___fttol+1)& (0+255),b
  2241  000666  0E00               	movlw	0
  2242  000668  6F71               	movwf	(?___fttol+2)& (0+255),b
  2243  00066A  0E00               	movlw	0
  2244  00066C  6F72               	movwf	(?___fttol+3)& (0+255),b
  2245                           
  2246                           ; BSR set to: 0
  2247  00066E  0012               	return	
  2248  000670                     l1874:
  2249                           
  2250                           ; BSR set to: 0
  2251  000670  0100               	movlb	0	; () banked
  2252  000672  90D8               	bcf	status,0,c
  2253  000674  337C               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2254  000676  337B               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2255  000678  337A               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2256  00067A  3379               	rrcf	___fttol@lval& (0+255),f,b
  2257                           
  2258                           ; BSR set to: 0
  2259  00067C  0100               	movlb	0	; () banked
  2260  00067E  3F7D               	incfsz	___fttol@exp1& (0+255),f,b
  2261  000680  D7F7               	goto	l1874
  2262                           
  2263                           ; BSR set to: 0
  2264  000682  D01B               	goto	l1888
  2265  000684                     l1878:
  2266                           
  2267                           ; BSR set to: 0
  2268  000684  0E17               	movlw	23
  2269  000686  0100               	movlb	0	; () banked
  2270  000688  657D               	cpfsgt	___fttol@exp1& (0+255),b
  2271  00068A  D012               	goto	l1886
  2272                           
  2273                           ; BSR set to: 0
  2274  00068C  0E00               	movlw	0
  2275  00068E  0100               	movlb	0	; () banked
  2276  000690  6F6F               	movwf	?___fttol& (0+255),b
  2277  000692  0E00               	movlw	0
  2278  000694  6F70               	movwf	(?___fttol+1)& (0+255),b
  2279  000696  0E00               	movlw	0
  2280  000698  6F71               	movwf	(?___fttol+2)& (0+255),b
  2281  00069A  0E00               	movlw	0
  2282  00069C  6F72               	movwf	(?___fttol+3)& (0+255),b
  2283                           
  2284                           ; BSR set to: 0
  2285  00069E  0012               	return	
  2286  0006A0                     l1884:
  2287                           
  2288                           ; BSR set to: 0
  2289  0006A0  0100               	movlb	0	; () banked
  2290  0006A2  90D8               	bcf	status,0,c
  2291  0006A4  3779               	rlcf	___fttol@lval& (0+255),f,b
  2292  0006A6  377A               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2293  0006A8  377B               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2294  0006AA  377C               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2295  0006AC  0100               	movlb	0	; () banked
  2296  0006AE  077D               	decf	___fttol@exp1& (0+255),f,b
  2297  0006B0                     l1886:
  2298                           
  2299                           ; BSR set to: 0
  2300  0006B0  0100               	movlb	0	; () banked
  2301  0006B2  517D               	movf	___fttol@exp1& (0+255),w,b
  2302  0006B4  0100               	movlb	0	; () banked
  2303  0006B6  A4D8               	btfss	status,2,c
  2304  0006B8  D7F3               	goto	l1884
  2305  0006BA                     l1888:
  2306                           
  2307                           ; BSR set to: 0
  2308  0006BA  0100               	movlb	0	; () banked
  2309  0006BC  5178               	movf	___fttol@sign1& (0+255),w,b
  2310  0006BE  0100               	movlb	0	; () banked
  2311  0006C0  B4D8               	btfsc	status,2,c
  2312  0006C2  D009               	goto	l1892
  2313                           
  2314                           ; BSR set to: 0
  2315  0006C4  0100               	movlb	0	; () banked
  2316  0006C6  1F7C               	comf	(___fttol@lval+3)& (0+255),f,b
  2317  0006C8  1F7B               	comf	(___fttol@lval+2)& (0+255),f,b
  2318  0006CA  1F7A               	comf	(___fttol@lval+1)& (0+255),f,b
  2319  0006CC  6D79               	negf	___fttol@lval& (0+255),b
  2320  0006CE  0E00               	movlw	0
  2321  0006D0  237A               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2322  0006D2  237B               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2323  0006D4  237C               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2324  0006D6                     l1892:
  2325                           
  2326                           ; BSR set to: 0
  2327  0006D6  C079  F06F         	movff	___fttol@lval,?___fttol
  2328  0006DA  C07A  F070         	movff	___fttol@lval+1,?___fttol+1
  2329  0006DE  C07B  F071         	movff	___fttol@lval+2,?___fttol+2
  2330  0006E2  C07C  F072         	movff	___fttol@lval+3,?___fttol+3
  2331  0006E6  0012               	return	
  2332  0006E8                     __end_of___fttol:
  2333                           	opt stack 0
  2334                           tblptru	equ	0xFF8
  2335                           tblptrh	equ	0xFF7
  2336                           tblptrl	equ	0xFF6
  2337                           tablat	equ	0xFF5
  2338                           prodh	equ	0xFF4
  2339                           prodl	equ	0xFF3
  2340                           intcon	equ	0xFF2
  2341                           intcon2	equ	0xFF1
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function ___ftadd *****************
  2347 ;; Defined at:
  2348 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftadd.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  f1              3    3[BANK0 ] float 
  2351 ;;  f2              3    6[BANK0 ] float 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  exp1            1   14[BANK0 ] unsigned char 
  2354 ;;  exp2            1   13[BANK0 ] unsigned char 
  2355 ;;  sign            1   12[BANK0 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  3    3[BANK0 ] float 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2365 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;Total ram usage:       12 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    5
  2372 ;; This function calls:
  2373 ;;		___ftpack
  2374 ;; This function is called by:
  2375 ;;		_PID_Control
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text17
  2380  00033C                     __ptext17:
  2381                           	opt stack 0
  2382  00033C                     ___ftadd:
  2383                           	opt stack 21
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;incstack = 0
  2387  00033C  C065  F069         	movff	___ftadd@f1+2,??___ftadd
  2388  000340  0100               	movlb	0	; () banked
  2389  000342  6B6A               	clrf	(??___ftadd+1)& (0+255),b
  2390  000344  6B6B               	clrf	(??___ftadd+2)& (0+255),b
  2391  000346  0100               	movlb	0	; () banked
  2392  000348  3564               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2393  00034A  0100               	movlb	0	; () banked
  2394  00034C  3769               	rlcf	??___ftadd& (0+255),f,b
  2395  00034E  E301               	bnc	u2231
  2396  000350  816A               	bsf	(??___ftadd+1)& (0+255),0,b
  2397  000352                     u2231:
  2398  000352  0100               	movlb	0	; () banked
  2399  000354  5169               	movf	??___ftadd& (0+255),w,b
  2400  000356  0100               	movlb	0	; () banked
  2401  000358  6F6E               	movwf	___ftadd@exp1& (0+255),b
  2402  00035A  C068  F069         	movff	___ftadd@f2+2,??___ftadd
  2403  00035E  0100               	movlb	0	; () banked
  2404  000360  6B6A               	clrf	(??___ftadd+1)& (0+255),b
  2405  000362  6B6B               	clrf	(??___ftadd+2)& (0+255),b
  2406  000364  0100               	movlb	0	; () banked
  2407  000366  3567               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2408  000368  0100               	movlb	0	; () banked
  2409  00036A  3769               	rlcf	??___ftadd& (0+255),f,b
  2410  00036C  E301               	bnc	u2241
  2411  00036E  816A               	bsf	(??___ftadd+1)& (0+255),0,b
  2412  000370                     u2241:
  2413  000370  0100               	movlb	0	; () banked
  2414  000372  5169               	movf	??___ftadd& (0+255),w,b
  2415  000374  0100               	movlb	0	; () banked
  2416  000376  6F6D               	movwf	___ftadd@exp2& (0+255),b
  2417                           
  2418                           ; BSR set to: 0
  2419  000378  0100               	movlb	0	; () banked
  2420  00037A  516E               	movf	___ftadd@exp1& (0+255),w,b
  2421  00037C  0100               	movlb	0	; () banked
  2422  00037E  B4D8               	btfsc	status,2,c
  2423  000380  D011               	goto	l664
  2424                           
  2425                           ; BSR set to: 0
  2426  000382  0100               	movlb	0	; () banked
  2427  000384  516D               	movf	___ftadd@exp2& (0+255),w,b
  2428  000386  0100               	movlb	0	; () banked
  2429  000388  5D6E               	subwf	___ftadd@exp1& (0+255),w,b
  2430  00038A  B0D8               	btfsc	status,0,c
  2431  00038C  D012               	goto	l2264
  2432                           
  2433                           ; BSR set to: 0
  2434  00038E  0100               	movlb	0	; () banked
  2435  000390  516E               	movf	___ftadd@exp1& (0+255),w,b
  2436  000392  0800               	sublw	0
  2437  000394  0100               	movlb	0	; () banked
  2438  000396  256D               	addwf	___ftadd@exp2& (0+255),w,b
  2439  000398  0100               	movlb	0	; () banked
  2440  00039A  6F69               	movwf	??___ftadd& (0+255),b
  2441  00039C  0E18               	movlw	24
  2442  00039E  0100               	movlb	0	; () banked
  2443  0003A0  6569               	cpfsgt	??___ftadd& (0+255),b
  2444  0003A2  D007               	goto	l2264
  2445  0003A4                     l664:
  2446                           
  2447                           ; BSR set to: 0
  2448  0003A4  C066  F063         	movff	___ftadd@f2,?___ftadd
  2449  0003A8  C067  F064         	movff	___ftadd@f2+1,?___ftadd+1
  2450  0003AC  C068  F065         	movff	___ftadd@f2+2,?___ftadd+2
  2451  0003B0  0012               	return	
  2452  0003B2                     l2264:
  2453                           
  2454                           ; BSR set to: 0
  2455  0003B2  0100               	movlb	0	; () banked
  2456  0003B4  516D               	movf	___ftadd@exp2& (0+255),w,b
  2457  0003B6  0100               	movlb	0	; () banked
  2458  0003B8  B4D8               	btfsc	status,2,c
  2459  0003BA  D011               	goto	l668
  2460                           
  2461                           ; BSR set to: 0
  2462  0003BC  0100               	movlb	0	; () banked
  2463  0003BE  516E               	movf	___ftadd@exp1& (0+255),w,b
  2464  0003C0  0100               	movlb	0	; () banked
  2465  0003C2  5D6D               	subwf	___ftadd@exp2& (0+255),w,b
  2466  0003C4  B0D8               	btfsc	status,0,c
  2467  0003C6  D012               	goto	l2270
  2468                           
  2469                           ; BSR set to: 0
  2470  0003C8  0100               	movlb	0	; () banked
  2471  0003CA  516D               	movf	___ftadd@exp2& (0+255),w,b
  2472  0003CC  0800               	sublw	0
  2473  0003CE  0100               	movlb	0	; () banked
  2474  0003D0  256E               	addwf	___ftadd@exp1& (0+255),w,b
  2475  0003D2  0100               	movlb	0	; () banked
  2476  0003D4  6F69               	movwf	??___ftadd& (0+255),b
  2477  0003D6  0E18               	movlw	24
  2478  0003D8  0100               	movlb	0	; () banked
  2479  0003DA  6569               	cpfsgt	??___ftadd& (0+255),b
  2480  0003DC  D007               	goto	l2270
  2481  0003DE                     l668:
  2482                           
  2483                           ; BSR set to: 0
  2484  0003DE  C063  F063         	movff	___ftadd@f1,?___ftadd
  2485  0003E2  C064  F064         	movff	___ftadd@f1+1,?___ftadd+1
  2486  0003E6  C065  F065         	movff	___ftadd@f1+2,?___ftadd+2
  2487  0003EA  0012               	return	
  2488  0003EC                     l2270:
  2489                           
  2490                           ; BSR set to: 0
  2491  0003EC  0E06               	movlw	6
  2492  0003EE  0100               	movlb	0	; () banked
  2493  0003F0  6F6C               	movwf	___ftadd@sign& (0+255),b
  2494                           
  2495                           ; BSR set to: 0
  2496  0003F2  0100               	movlb	0	; () banked
  2497  0003F4  AF65               	btfss	(___ftadd@f1+2)& (0+255),7,b
  2498  0003F6  D002               	goto	l2276
  2499                           
  2500                           ; BSR set to: 0
  2501  0003F8  0100               	movlb	0	; () banked
  2502  0003FA  8F6C               	bsf	___ftadd@sign& (0+255),7,b
  2503  0003FC                     l2276:
  2504                           
  2505                           ; BSR set to: 0
  2506  0003FC  0100               	movlb	0	; () banked
  2507  0003FE  AF68               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2508  000400  D002               	goto	l670
  2509                           
  2510                           ; BSR set to: 0
  2511  000402  0100               	movlb	0	; () banked
  2512  000404  8D6C               	bsf	___ftadd@sign& (0+255),6,b
  2513  000406                     l670:
  2514                           
  2515                           ; BSR set to: 0
  2516  000406  0100               	movlb	0	; () banked
  2517  000408  8F64               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2518                           
  2519                           ; BSR set to: 0
  2520  00040A  0EFF               	movlw	255
  2521  00040C  0100               	movlb	0	; () banked
  2522  00040E  1763               	andwf	___ftadd@f1& (0+255),f,b
  2523  000410  0EFF               	movlw	255
  2524  000412  0100               	movlb	0	; () banked
  2525  000414  1764               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2526  000416  0E00               	movlw	0
  2527  000418  0100               	movlb	0	; () banked
  2528  00041A  1765               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2529  00041C  0100               	movlb	0	; () banked
  2530  00041E  8F67               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2531                           
  2532                           ; BSR set to: 0
  2533  000420  0EFF               	movlw	255
  2534  000422  0100               	movlb	0	; () banked
  2535  000424  1766               	andwf	___ftadd@f2& (0+255),f,b
  2536  000426  0EFF               	movlw	255
  2537  000428  0100               	movlb	0	; () banked
  2538  00042A  1767               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2539  00042C  0E00               	movlw	0
  2540  00042E  0100               	movlb	0	; () banked
  2541  000430  1768               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2542                           
  2543                           ; BSR set to: 0
  2544  000432  0100               	movlb	0	; () banked
  2545  000434  516D               	movf	___ftadd@exp2& (0+255),w,b
  2546  000436  0100               	movlb	0	; () banked
  2547  000438  5D6E               	subwf	___ftadd@exp1& (0+255),w,b
  2548  00043A  B0D8               	btfsc	status,0,c
  2549  00043C  D025               	goto	l2296
  2550  00043E                     l2286:
  2551                           
  2552                           ; BSR set to: 0
  2553  00043E  0100               	movlb	0	; () banked
  2554  000440  90D8               	bcf	status,0,c
  2555  000442  3766               	rlcf	___ftadd@f2& (0+255),f,b
  2556  000444  3767               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2557  000446  3768               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2558  000448  0100               	movlb	0	; () banked
  2559  00044A  076D               	decf	___ftadd@exp2& (0+255),f,b
  2560                           
  2561                           ; BSR set to: 0
  2562  00044C  0100               	movlb	0	; () banked
  2563  00044E  516E               	movf	___ftadd@exp1& (0+255),w,b
  2564  000450  0100               	movlb	0	; () banked
  2565  000452  196D               	xorwf	___ftadd@exp2& (0+255),w,b
  2566  000454  B4D8               	btfsc	status,2,c
  2567  000456  D011               	goto	l2294
  2568                           
  2569                           ; BSR set to: 0
  2570  000458  0100               	movlb	0	; () banked
  2571  00045A  076C               	decf	___ftadd@sign& (0+255),f,b
  2572  00045C  C06C  F069         	movff	___ftadd@sign,??___ftadd
  2573  000460  0E07               	movlw	7
  2574  000462  0100               	movlb	0	; () banked
  2575  000464  1769               	andwf	??___ftadd& (0+255),f,b
  2576  000466  B4D8               	btfsc	status,2,c
  2577  000468  D008               	goto	l2294
  2578  00046A  D7E9               	goto	l2286
  2579  00046C                     l2292:
  2580                           
  2581                           ; BSR set to: 0
  2582  00046C  0100               	movlb	0	; () banked
  2583  00046E  90D8               	bcf	status,0,c
  2584  000470  3365               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2585  000472  3364               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2586  000474  3363               	rrcf	___ftadd@f1& (0+255),f,b
  2587  000476  0100               	movlb	0	; () banked
  2588  000478  2B6E               	incf	___ftadd@exp1& (0+255),f,b
  2589  00047A                     l2294:
  2590                           
  2591                           ; BSR set to: 0
  2592  00047A  0100               	movlb	0	; () banked
  2593  00047C  516D               	movf	___ftadd@exp2& (0+255),w,b
  2594  00047E  0100               	movlb	0	; () banked
  2595  000480  196E               	xorwf	___ftadd@exp1& (0+255),w,b
  2596  000482  B4D8               	btfsc	status,2,c
  2597  000484  D02B               	goto	l679
  2598  000486  D7F2               	goto	l2292
  2599  000488                     l2296:
  2600                           
  2601                           ; BSR set to: 0
  2602  000488  0100               	movlb	0	; () banked
  2603  00048A  516E               	movf	___ftadd@exp1& (0+255),w,b
  2604  00048C  0100               	movlb	0	; () banked
  2605  00048E  5D6D               	subwf	___ftadd@exp2& (0+255),w,b
  2606  000490  B0D8               	btfsc	status,0,c
  2607  000492  D024               	goto	l679
  2608  000494                     l2298:
  2609                           
  2610                           ; BSR set to: 0
  2611  000494  0100               	movlb	0	; () banked
  2612  000496  90D8               	bcf	status,0,c
  2613  000498  3763               	rlcf	___ftadd@f1& (0+255),f,b
  2614  00049A  3764               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2615  00049C  3765               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2616  00049E  0100               	movlb	0	; () banked
  2617  0004A0  076E               	decf	___ftadd@exp1& (0+255),f,b
  2618                           
  2619                           ; BSR set to: 0
  2620  0004A2  0100               	movlb	0	; () banked
  2621  0004A4  516E               	movf	___ftadd@exp1& (0+255),w,b
  2622  0004A6  0100               	movlb	0	; () banked
  2623  0004A8  196D               	xorwf	___ftadd@exp2& (0+255),w,b
  2624  0004AA  B4D8               	btfsc	status,2,c
  2625  0004AC  D011               	goto	l2306
  2626                           
  2627                           ; BSR set to: 0
  2628  0004AE  0100               	movlb	0	; () banked
  2629  0004B0  076C               	decf	___ftadd@sign& (0+255),f,b
  2630  0004B2  C06C  F069         	movff	___ftadd@sign,??___ftadd
  2631  0004B6  0E07               	movlw	7
  2632  0004B8  0100               	movlb	0	; () banked
  2633  0004BA  1769               	andwf	??___ftadd& (0+255),f,b
  2634  0004BC  B4D8               	btfsc	status,2,c
  2635  0004BE  D008               	goto	l2306
  2636  0004C0  D7E9               	goto	l2298
  2637  0004C2                     l2304:
  2638                           
  2639                           ; BSR set to: 0
  2640  0004C2  0100               	movlb	0	; () banked
  2641  0004C4  90D8               	bcf	status,0,c
  2642  0004C6  3368               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2643  0004C8  3367               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2644  0004CA  3366               	rrcf	___ftadd@f2& (0+255),f,b
  2645  0004CC  0100               	movlb	0	; () banked
  2646  0004CE  2B6D               	incf	___ftadd@exp2& (0+255),f,b
  2647  0004D0                     l2306:
  2648                           
  2649                           ; BSR set to: 0
  2650  0004D0  0100               	movlb	0	; () banked
  2651  0004D2  516D               	movf	___ftadd@exp2& (0+255),w,b
  2652  0004D4  0100               	movlb	0	; () banked
  2653  0004D6  196E               	xorwf	___ftadd@exp1& (0+255),w,b
  2654  0004D8  A4D8               	btfss	status,2,c
  2655  0004DA  D7F3               	goto	l2304
  2656  0004DC                     l679:
  2657                           
  2658                           ; BSR set to: 0
  2659  0004DC  0100               	movlb	0	; () banked
  2660  0004DE  AF6C               	btfss	___ftadd@sign& (0+255),7,b
  2661  0004E0  D012               	goto	l688
  2662                           
  2663                           ; BSR set to: 0
  2664  0004E2  0EFF               	movlw	255
  2665  0004E4  0100               	movlb	0	; () banked
  2666  0004E6  1B63               	xorwf	___ftadd@f1& (0+255),f,b
  2667  0004E8  0EFF               	movlw	255
  2668  0004EA  0100               	movlb	0	; () banked
  2669  0004EC  1B64               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2670  0004EE  0EFF               	movlw	255
  2671  0004F0  0100               	movlb	0	; () banked
  2672  0004F2  1B65               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2673  0004F4  0E01               	movlw	1
  2674  0004F6  0100               	movlb	0	; () banked
  2675  0004F8  2763               	addwf	___ftadd@f1& (0+255),f,b
  2676  0004FA  0E00               	movlw	0
  2677  0004FC  0100               	movlb	0	; () banked
  2678  0004FE  2364               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2679  000500  0E00               	movlw	0
  2680  000502  0100               	movlb	0	; () banked
  2681  000504  2365               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2682  000506                     l688:
  2683                           
  2684                           ; BSR set to: 0
  2685  000506  0100               	movlb	0	; () banked
  2686  000508  AD6C               	btfss	___ftadd@sign& (0+255),6,b
  2687  00050A  D012               	goto	l2312
  2688                           
  2689                           ; BSR set to: 0
  2690  00050C  0EFF               	movlw	255
  2691  00050E  0100               	movlb	0	; () banked
  2692  000510  1B66               	xorwf	___ftadd@f2& (0+255),f,b
  2693  000512  0EFF               	movlw	255
  2694  000514  0100               	movlb	0	; () banked
  2695  000516  1B67               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2696  000518  0EFF               	movlw	255
  2697  00051A  0100               	movlb	0	; () banked
  2698  00051C  1B68               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2699  00051E  0E01               	movlw	1
  2700  000520  0100               	movlb	0	; () banked
  2701  000522  2766               	addwf	___ftadd@f2& (0+255),f,b
  2702  000524  0E00               	movlw	0
  2703  000526  0100               	movlb	0	; () banked
  2704  000528  2367               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2705  00052A  0E00               	movlw	0
  2706  00052C  0100               	movlb	0	; () banked
  2707  00052E  2368               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2708  000530                     l2312:
  2709                           
  2710                           ; BSR set to: 0
  2711  000530  0E00               	movlw	0
  2712  000532  0100               	movlb	0	; () banked
  2713  000534  6F6C               	movwf	___ftadd@sign& (0+255),b
  2714                           
  2715                           ; BSR set to: 0
  2716  000536  0100               	movlb	0	; () banked
  2717  000538  5163               	movf	___ftadd@f1& (0+255),w,b
  2718  00053A  0100               	movlb	0	; () banked
  2719  00053C  2766               	addwf	___ftadd@f2& (0+255),f,b
  2720  00053E  0100               	movlb	0	; () banked
  2721  000540  5164               	movf	(___ftadd@f1+1)& (0+255),w,b
  2722  000542  0100               	movlb	0	; () banked
  2723  000544  2367               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2724  000546  0100               	movlb	0	; () banked
  2725  000548  5165               	movf	(___ftadd@f1+2)& (0+255),w,b
  2726  00054A  0100               	movlb	0	; () banked
  2727  00054C  2368               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2728                           
  2729                           ; BSR set to: 0
  2730  00054E  0100               	movlb	0	; () banked
  2731  000550  AF68               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2732  000552  D015               	goto	l2322
  2733                           
  2734                           ; BSR set to: 0
  2735  000554  0EFF               	movlw	255
  2736  000556  0100               	movlb	0	; () banked
  2737  000558  1B66               	xorwf	___ftadd@f2& (0+255),f,b
  2738  00055A  0EFF               	movlw	255
  2739  00055C  0100               	movlb	0	; () banked
  2740  00055E  1B67               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2741  000560  0EFF               	movlw	255
  2742  000562  0100               	movlb	0	; () banked
  2743  000564  1B68               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2744  000566  0E01               	movlw	1
  2745  000568  0100               	movlb	0	; () banked
  2746  00056A  2766               	addwf	___ftadd@f2& (0+255),f,b
  2747  00056C  0E00               	movlw	0
  2748  00056E  0100               	movlb	0	; () banked
  2749  000570  2367               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2750  000572  0E00               	movlw	0
  2751  000574  0100               	movlb	0	; () banked
  2752  000576  2368               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2753                           
  2754                           ; BSR set to: 0
  2755  000578  0E01               	movlw	1
  2756  00057A  0100               	movlb	0	; () banked
  2757  00057C  6F6C               	movwf	___ftadd@sign& (0+255),b
  2758  00057E                     l2322:
  2759                           
  2760                           ; BSR set to: 0
  2761  00057E  C066  F010         	movff	___ftadd@f2,___ftpack@arg
  2762  000582  C067  F011         	movff	___ftadd@f2+1,___ftpack@arg+1
  2763  000586  C068  F012         	movff	___ftadd@f2+2,___ftpack@arg+2
  2764  00058A  C06E  F013         	movff	___ftadd@exp1,___ftpack@exp
  2765  00058E  C06C  F014         	movff	___ftadd@sign,___ftpack@sign
  2766  000592  ECF4  F006         	call	___ftpack	;wreg free
  2767  000596  C010  F063         	movff	?___ftpack,?___ftadd
  2768  00059A  C011  F064         	movff	?___ftpack+1,?___ftadd+1
  2769  00059E  C012  F065         	movff	?___ftpack+2,?___ftadd+2
  2770  0005A2  0012               	return	
  2771  0005A4                     __end_of___ftadd:
  2772                           	opt stack 0
  2773                           tblptru	equ	0xFF8
  2774                           tblptrh	equ	0xFF7
  2775                           tblptrl	equ	0xFF6
  2776                           tablat	equ	0xFF5
  2777                           prodh	equ	0xFF4
  2778                           prodl	equ	0xFF3
  2779                           intcon	equ	0xFF2
  2780                           intcon2	equ	0xFF1
  2781                           postinc0	equ	0xFEE
  2782                           wreg	equ	0xFE8
  2783                           status	equ	0xFD8
  2784                           
  2785 ;; *************** function _ADC_IsConversionDone *****************
  2786 ;; Defined at:
  2787 ;;		line 96 in file "mcc_generated_files/adc.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      unsigned char 
  2794 ;; Registers used:
  2795 ;;		wreg
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    4
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_TempAcquisition
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text18
  2816  0012D6                     __ptext18:
  2817                           	opt stack 0
  2818  0012D6                     _ADC_IsConversionDone:
  2819                           	opt stack 23
  2820                           
  2821                           ;adc.c: 99: return (!ADCON0bits.GO_nDONE);
  2822                           
  2823                           ;incstack = 0
  2824  0012D6  B2C2               	btfsc	4034,1,c	;volatile
  2825  0012D8  D002               	goto	u1580
  2826  0012DA  0E01               	movlw	1
  2827  0012DC  0012               	return	
  2828  0012DE                     u1580:
  2829  0012DE  0E00               	movlw	0
  2830  0012E0  0012               	return	
  2831  0012E2                     __end_of_ADC_IsConversionDone:
  2832                           	opt stack 0
  2833                           tblptru	equ	0xFF8
  2834                           tblptrh	equ	0xFF7
  2835                           tblptrl	equ	0xFF6
  2836                           tablat	equ	0xFF5
  2837                           prodh	equ	0xFF4
  2838                           prodl	equ	0xFF3
  2839                           intcon	equ	0xFF2
  2840                           intcon2	equ	0xFF1
  2841                           postinc0	equ	0xFEE
  2842                           wreg	equ	0xFE8
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function _ADC_GetConversionResult *****************
  2846 ;; Defined at:
  2847 ;;		line 102 in file "mcc_generated_files/adc.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  2   15[COMRAM] unsigned int 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;Total ram usage:        4 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    4
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_TempAcquisition
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text19
  2876  0012A2                     __ptext19:
  2877                           	opt stack 0
  2878  0012A2                     _ADC_GetConversionResult:
  2879                           	opt stack 23
  2880                           
  2881                           ;adc.c: 105: return ((ADRESH << 8) + ADRESL);
  2882                           
  2883                           ;incstack = 0
  2884  0012A2  50C4               	movf	4036,w,c	;volatile
  2885  0012A4  6E13               	movwf	(??_ADC_GetConversionResult+1)& (0+255),c
  2886  0012A6  6A12               	clrf	??_ADC_GetConversionResult& (0+255),c
  2887  0012A8  50C3               	movf	4035,w,c	;volatile
  2888  0012AA  2412               	addwf	??_ADC_GetConversionResult,w,c
  2889  0012AC  6E10               	movwf	?_ADC_GetConversionResult,c
  2890  0012AE  0E00               	movlw	0
  2891  0012B0  2013               	addwfc	??_ADC_GetConversionResult+1,w,c
  2892  0012B2  6E11               	movwf	?_ADC_GetConversionResult+1,c
  2893  0012B4  0012               	return	
  2894  0012B6                     __end_of_ADC_GetConversionResult:
  2895                           	opt stack 0
  2896                           tblptru	equ	0xFF8
  2897                           tblptrh	equ	0xFF7
  2898                           tblptrl	equ	0xFF6
  2899                           tablat	equ	0xFF5
  2900                           prodh	equ	0xFF4
  2901                           prodl	equ	0xFF3
  2902                           intcon	equ	0xFF2
  2903                           intcon2	equ	0xFF1
  2904                           postinc0	equ	0xFEE
  2905                           wreg	equ	0xFE8
  2906                           status	equ	0xFD8
  2907                           
  2908 ;; *************** function _InitHardware *****************
  2909 ;; Defined at:
  2910 ;;		line 22 in file "tasks.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    8
  2931 ;; This function calls:
  2932 ;;		_ADC_SelectChannel
  2933 ;;		_ADC_StartConversion
  2934 ;;		_PID_SetControllerDirection
  2935 ;;		_PID_SetMode
  2936 ;;		_PID_SetOutputLimits
  2937 ;;		_PID_SetPoint
  2938 ;;		_PID_SetSampleTime
  2939 ;;		_PID_SetTunings
  2940 ;;		_TMR2_SetInterruptHandler
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text20
  2947  000E96                     __ptext20:
  2948                           	opt stack 0
  2949  000E96                     _InitHardware:
  2950                           	opt stack 22
  2951                           
  2952                           ;tasks.c: 24: TMR2_SetInterruptHandler(TMR2_Tick);
  2953                           
  2954                           ;incstack = 0
  2955  000E96  0EDA               	movlw	low _TMR2_Tick
  2956  000E98  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  2957  000E9A  0E09               	movlw	high _TMR2_Tick
  2958  000E9C  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  2959  000E9E  EC71  F009         	call	_TMR2_SetInterruptHandler	;wreg free
  2960                           
  2961                           ;tasks.c: 26: ADC_SelectChannel(TEMP_SENSOR);
  2962  000EA2  0E02               	movlw	2
  2963  000EA4  EC30  F009         	call	_ADC_SelectChannel
  2964                           
  2965                           ;tasks.c: 28: do { LATDbits.LATD7 = 1; } while(0);
  2966  000EA8  8E8C               	bsf	3980,7,c	;volatile
  2967                           
  2968                           ;tasks.c: 29: do { LATDbits.LATD6 = 1; } while(0);
  2969  000EAA  8C8C               	bsf	3980,6,c	;volatile
  2970                           
  2971                           ;tasks.c: 31: PID_SetPoint((int)(100 * 24));
  2972  000EAC  0E09               	movlw	9
  2973  000EAE  6E23               	movwf	PID_SetPoint@newSetPoint+1,c
  2974  000EB0  0E60               	movlw	96
  2975  000EB2  6E22               	movwf	PID_SetPoint@newSetPoint,c
  2976  000EB4  EC17  F009         	call	_PID_SetPoint	;wreg free
  2977                           
  2978                           ;tasks.c: 32: PID_SetTunings(0.1, 0.001, 0);
  2979  000EB8  0ECD               	movlw	205
  2980  000EBA  0100               	movlb	0	; () banked
  2981  000EBC  6F63               	movwf	PID_SetTunings@Kp& (0+255),b
  2982  000EBE  0ECC               	movlw	204
  2983  000EC0  0100               	movlb	0	; () banked
  2984  000EC2  6F64               	movwf	(PID_SetTunings@Kp+1)& (0+255),b
  2985  000EC4  0E3D               	movlw	61
  2986  000EC6  0100               	movlb	0	; () banked
  2987  000EC8  6F65               	movwf	(PID_SetTunings@Kp+2)& (0+255),b
  2988  000ECA  0E12               	movlw	18
  2989  000ECC  0100               	movlb	0	; () banked
  2990  000ECE  6F66               	movwf	PID_SetTunings@Ki& (0+255),b
  2991  000ED0  0E83               	movlw	131
  2992  000ED2  0100               	movlb	0	; () banked
  2993  000ED4  6F67               	movwf	(PID_SetTunings@Ki+1)& (0+255),b
  2994  000ED6  0E3A               	movlw	58
  2995  000ED8  0100               	movlb	0	; () banked
  2996  000EDA  6F68               	movwf	(PID_SetTunings@Ki+2)& (0+255),b
  2997  000EDC  0E00               	movlw	0
  2998  000EDE  0100               	movlb	0	; () banked
  2999  000EE0  6F69               	movwf	PID_SetTunings@Kd& (0+255),b
  3000  000EE2  0E00               	movlw	0
  3001  000EE4  0100               	movlb	0	; () banked
  3002  000EE6  6F6A               	movwf	(PID_SetTunings@Kd+1)& (0+255),b
  3003  000EE8  0E00               	movlw	0
  3004  000EEA  0100               	movlb	0	; () banked
  3005  000EEC  6F6B               	movwf	(PID_SetTunings@Kd+2)& (0+255),b
  3006  000EEE  EC74  F003         	call	_PID_SetTunings	;wreg free
  3007                           
  3008                           ;tasks.c: 33: PID_SetSampleTime(4000);
  3009  000EF2  0E0F               	movlw	15
  3010  000EF4  0100               	movlb	0	; () banked
  3011  000EF6  6F61               	movwf	(PID_SetSampleTime@newSampleTime+1)& (0+255),b
  3012  000EF8  0EA0               	movlw	160
  3013  000EFA  6F60               	movwf	PID_SetSampleTime@newSampleTime& (0+255),b
  3014  000EFC  EC9D  F006         	call	_PID_SetSampleTime	;wreg free
  3015                           
  3016                           ;tasks.c: 34: PID_SetOutputLimits(5, 80);
  3017  000F00  0E00               	movlw	0
  3018  000F02  6E2C               	movwf	PID_SetOutputLimits@Min+1,c
  3019  000F04  0E05               	movlw	5
  3020  000F06  6E2B               	movwf	PID_SetOutputLimits@Min,c
  3021  000F08  0E00               	movlw	0
  3022  000F0A  6E2E               	movwf	PID_SetOutputLimits@Max+1,c
  3023  000F0C  0E50               	movlw	80
  3024  000F0E  6E2D               	movwf	PID_SetOutputLimits@Max,c
  3025  000F10  ECF6  F003         	call	_PID_SetOutputLimits	;wreg free
  3026                           
  3027                           ;tasks.c: 35: PID_SetControllerDirection(0);
  3028  000F14  0E00               	movlw	0
  3029  000F16  6E11               	movwf	PID_SetControllerDirection@Direction+1,c
  3030  000F18  0E00               	movlw	0
  3031  000F1A  6E10               	movwf	PID_SetControllerDirection@Direction,c
  3032  000F1C  EC76  F009         	call	_PID_SetControllerDirection	;wreg free
  3033                           
  3034                           ;tasks.c: 36: PID_SetMode(1);
  3035  000F20  0E00               	movlw	0
  3036  000F22  6E2C               	movwf	PID_SetMode@Mode+1,c
  3037  000F24  0E01               	movlw	1
  3038  000F26  6E2B               	movwf	PID_SetMode@Mode,c
  3039  000F28  EC9B  F008         	call	_PID_SetMode	;wreg free
  3040                           
  3041                           ;tasks.c: 38: ADC_StartConversion();
  3042  000F2C  EC82  F009         	call	_ADC_StartConversion	;wreg free
  3043  000F30  0012               	return		;funcret
  3044  000F32                     __end_of_InitHardware:
  3045                           	opt stack 0
  3046                           tblptru	equ	0xFF8
  3047                           tblptrh	equ	0xFF7
  3048                           tblptrl	equ	0xFF6
  3049                           tablat	equ	0xFF5
  3050                           prodh	equ	0xFF4
  3051                           prodl	equ	0xFF3
  3052                           intcon	equ	0xFF2
  3053                           intcon2	equ	0xFF1
  3054                           postinc0	equ	0xFEE
  3055                           wreg	equ	0xFE8
  3056                           status	equ	0xFD8
  3057                           
  3058 ;; *************** function _TMR2_SetInterruptHandler *****************
  3059 ;; Defined at:
  3060 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  InterruptHan    2   15[COMRAM] PTR void 
  3063 ;;		 -> TMR2_Tick(1), TMR2_DefaultInterruptHandler(1), 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;Total ram usage:        2 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    4
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_TMR2_Initialize
  3086 ;;		_InitHardware
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text21
  3091  0012E2                     __ptext21:
  3092                           	opt stack 0
  3093  0012E2                     _TMR2_SetInterruptHandler:
  3094                           	opt stack 24
  3095                           
  3096                           ;tmr2.c: 152: TMR2_InterruptHandler = InterruptHandler;
  3097                           
  3098                           ;incstack = 0
  3099  0012E2  C010  F0B3         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  3100  0012E6  C011  F0B4         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  3101  0012EA  0012               	return		;funcret
  3102  0012EC                     __end_of_TMR2_SetInterruptHandler:
  3103                           	opt stack 0
  3104                           tblptru	equ	0xFF8
  3105                           tblptrh	equ	0xFF7
  3106                           tblptrl	equ	0xFF6
  3107                           tablat	equ	0xFF5
  3108                           prodh	equ	0xFF4
  3109                           prodl	equ	0xFF3
  3110                           intcon	equ	0xFF2
  3111                           intcon2	equ	0xFF1
  3112                           postinc0	equ	0xFEE
  3113                           wreg	equ	0xFE8
  3114                           status	equ	0xFD8
  3115                           
  3116 ;; *************** function _PID_SetTunings *****************
  3117 ;; Defined at:
  3118 ;;		line 55 in file "PID.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  Kp              3    3[BANK0 ] void 
  3121 ;;  Ki              3    6[BANK0 ] void 
  3122 ;;  Kd              3    9[BANK0 ] void 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  SampleTimeIn    3   12[BANK0 ] void 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3134 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;Total ram usage:       12 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    6
  3141 ;; This function calls:
  3142 ;;		___awtoft
  3143 ;;		___ftdiv
  3144 ;;		___ftmul
  3145 ;;		___ftneg
  3146 ;; This function is called by:
  3147 ;;		_InitHardware
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text22
  3152  0006E8                     __ptext22:
  3153                           	opt stack 0
  3154  0006E8                     _PID_SetTunings:
  3155                           	opt stack 23
  3156                           
  3157                           ;PID.c: 57: double SampleTimeInSec;
  3158                           ;PID.c: 59: if ((Kp < 0) || (Ki < 0) || (Kd < 0)) return;
  3159                           
  3160                           ;incstack = 0
  3161  0006E8  0100               	movlb	0	; () banked
  3162  0006EA  BF65               	btfsc	(PID_SetTunings@Kp+2)& (0+255),7,b
  3163  0006EC  0012               	return	
  3164                           
  3165                           ; BSR set to: 0
  3166  0006EE  0100               	movlb	0	; () banked
  3167  0006F0  BF68               	btfsc	(PID_SetTunings@Ki+2)& (0+255),7,b
  3168  0006F2  0012               	return	
  3169                           
  3170                           ; BSR set to: 0
  3171  0006F4  0100               	movlb	0	; () banked
  3172  0006F6  BF6B               	btfsc	(PID_SetTunings@Kd+2)& (0+255),7,b
  3173  0006F8  0012               	return	
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;PID.c: 61: SampleTimeInSec = ((double)SampleTime)/1000;
  3177                           
  3178                           ; BSR set to: 0
  3179                           
  3180                           ; BSR set to: 0
  3181  0006FA  C0B5  F01E         	movff	_SampleTime,___awtoft@c
  3182  0006FE  C0B6  F01F         	movff	_SampleTime+1,___awtoft@c+1
  3183  000702  EC67  F008         	call	___awtoft	;wreg free
  3184  000706  C01E  F022         	movff	?___awtoft,___ftdiv@f1
  3185  00070A  C01F  F023         	movff	?___awtoft+1,___ftdiv@f1+1
  3186  00070E  C020  F024         	movff	?___awtoft+2,___ftdiv@f1+2
  3187  000712  0E00               	movlw	0
  3188  000714  6E25               	movwf	___ftdiv@f2,c
  3189  000716  0E7A               	movlw	122
  3190  000718  6E26               	movwf	___ftdiv@f2+1,c
  3191  00071A  0E44               	movlw	68
  3192  00071C  6E27               	movwf	___ftdiv@f2+2,c
  3193  00071E  EC66  F005         	call	___ftdiv	;wreg free
  3194  000722  C022  F06C         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  3195  000726  C023  F06D         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  3196  00072A  C024  F06E         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  3197                           
  3198                           ;PID.c: 62: PIDConfig.Kp = Kp;
  3199  00072E  C063  F091         	movff	PID_SetTunings@Kp,_PIDConfig+4	;volatile
  3200  000732  C064  F092         	movff	PID_SetTunings@Kp+1,_PIDConfig+5	;volatile
  3201  000736  C065  F093         	movff	PID_SetTunings@Kp+2,_PIDConfig+6	;volatile
  3202                           
  3203                           ;PID.c: 63: PIDConfig.Ki = Ki * SampleTimeInSec;
  3204  00073A  C066  F031         	movff	PID_SetTunings@Ki,___ftmul@f1
  3205  00073E  C067  F032         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  3206  000742  C068  F033         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  3207  000746  C06C  F034         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  3208  00074A  C06D  F035         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  3209  00074E  C06E  F036         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  3210  000752  EC73  F004         	call	___ftmul	;wreg free
  3211  000756  C031  F094         	movff	?___ftmul,_PIDConfig+7	;volatile
  3212  00075A  C032  F095         	movff	?___ftmul+1,_PIDConfig+8	;volatile
  3213  00075E  C033  F096         	movff	?___ftmul+2,_PIDConfig+9	;volatile
  3214                           
  3215                           ;PID.c: 64: PIDConfig.Kd = Kd / SampleTimeInSec;
  3216  000762  C069  F022         	movff	PID_SetTunings@Kd,___ftdiv@f1
  3217  000766  C06A  F023         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  3218  00076A  C06B  F024         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  3219  00076E  C06C  F025         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  3220  000772  C06D  F026         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  3221  000776  C06E  F027         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  3222  00077A  EC66  F005         	call	___ftdiv	;wreg free
  3223  00077E  C022  F097         	movff	?___ftdiv,_PIDConfig+10	;volatile
  3224  000782  C023  F098         	movff	?___ftdiv+1,_PIDConfig+11	;volatile
  3225  000786  C024  F099         	movff	?___ftdiv+2,_PIDConfig+12	;volatile
  3226                           
  3227                           ;PID.c: 66: if(controllerDirection == 1)
  3228  00078A  0100               	movlb	0	; () banked
  3229  00078C  05A6               	decf	_controllerDirection& (0+255),w,b
  3230  00078E  0100               	movlb	0	; () banked
  3231  000790  11A7               	iorwf	(_controllerDirection+1)& (0+255),w,b
  3232  000792  A4D8               	btfss	status,2,c
  3233  000794  0012               	return	
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;PID.c: 67: {
  3237                           ;PID.c: 68: PIDConfig.Kp = (0 - PIDConfig.Kp);
  3238  000796  C091  F060         	movff	_PIDConfig+4,___ftneg@f1	;volatile
  3239  00079A  C092  F061         	movff	_PIDConfig+5,___ftneg@f1+1	;volatile
  3240  00079E  C093  F062         	movff	_PIDConfig+6,___ftneg@f1+2	;volatile
  3241  0007A2  EC83  F008         	call	___ftneg	;wreg free
  3242  0007A6  C060  F091         	movff	?___ftneg,_PIDConfig+4	;volatile
  3243  0007AA  C061  F092         	movff	?___ftneg+1,_PIDConfig+5	;volatile
  3244  0007AE  C062  F093         	movff	?___ftneg+2,_PIDConfig+6	;volatile
  3245                           
  3246                           ;PID.c: 69: PIDConfig.Ki = (0 - PIDConfig.Ki);
  3247  0007B2  C094  F060         	movff	_PIDConfig+7,___ftneg@f1	;volatile
  3248  0007B6  C095  F061         	movff	_PIDConfig+8,___ftneg@f1+1	;volatile
  3249  0007BA  C096  F062         	movff	_PIDConfig+9,___ftneg@f1+2	;volatile
  3250  0007BE  EC83  F008         	call	___ftneg	;wreg free
  3251  0007C2  C060  F094         	movff	?___ftneg,_PIDConfig+7	;volatile
  3252  0007C6  C061  F095         	movff	?___ftneg+1,_PIDConfig+8	;volatile
  3253  0007CA  C062  F096         	movff	?___ftneg+2,_PIDConfig+9	;volatile
  3254                           
  3255                           ;PID.c: 70: PIDConfig.Kd = (0 - PIDConfig.Kd);
  3256  0007CE  C097  F060         	movff	_PIDConfig+10,___ftneg@f1	;volatile
  3257  0007D2  C098  F061         	movff	_PIDConfig+11,___ftneg@f1+1	;volatile
  3258  0007D6  C099  F062         	movff	_PIDConfig+12,___ftneg@f1+2	;volatile
  3259  0007DA  EC83  F008         	call	___ftneg	;wreg free
  3260  0007DE  C060  F097         	movff	?___ftneg,_PIDConfig+10	;volatile
  3261  0007E2  C061  F098         	movff	?___ftneg+1,_PIDConfig+11	;volatile
  3262  0007E6  C062  F099         	movff	?___ftneg+2,_PIDConfig+12	;volatile
  3263  0007EA  0012               	return	
  3264  0007EC                     __end_of_PID_SetTunings:
  3265                           	opt stack 0
  3266                           tblptru	equ	0xFF8
  3267                           tblptrh	equ	0xFF7
  3268                           tblptrl	equ	0xFF6
  3269                           tablat	equ	0xFF5
  3270                           prodh	equ	0xFF4
  3271                           prodl	equ	0xFF3
  3272                           intcon	equ	0xFF2
  3273                           intcon2	equ	0xFF1
  3274                           postinc0	equ	0xFEE
  3275                           wreg	equ	0xFE8
  3276                           status	equ	0xFD8
  3277                           
  3278 ;; *************** function ___ftneg *****************
  3279 ;; Defined at:
  3280 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftneg.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  f1              3    0[BANK0 ] float 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  3    0[BANK0 ] float 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        3 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    4
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_PID_Control
  3305 ;;		_PID_SetTunings
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text23
  3310  001106                     __ptext23:
  3311                           	opt stack 0
  3312  001106                     ___ftneg:
  3313                           	opt stack 22
  3314                           
  3315                           ;incstack = 0
  3316  001106  0100               	movlb	0	; () banked
  3317  001108  5160               	movf	___ftneg@f1& (0+255),w,b
  3318  00110A  0100               	movlb	0	; () banked
  3319  00110C  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  3320  00110E  0100               	movlb	0	; () banked
  3321  001110  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  3322  001112  B4D8               	btfsc	status,2,c
  3323  001114  D009               	goto	l721
  3324                           
  3325                           ; BSR set to: 0
  3326  001116  0E00               	movlw	0
  3327  001118  0100               	movlb	0	; () banked
  3328  00111A  1B60               	xorwf	___ftneg@f1& (0+255),f,b
  3329  00111C  0E00               	movlw	0
  3330  00111E  0100               	movlb	0	; () banked
  3331  001120  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  3332  001122  0E80               	movlw	128
  3333  001124  0100               	movlb	0	; () banked
  3334  001126  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  3335  001128                     l721:
  3336                           
  3337                           ; BSR set to: 0
  3338  001128  C060  F060         	movff	___ftneg@f1,?___ftneg
  3339  00112C  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
  3340  001130  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
  3341                           
  3342                           ; BSR set to: 0
  3343  001134  0012               	return		;funcret
  3344  001136                     __end_of___ftneg:
  3345                           	opt stack 0
  3346                           tblptru	equ	0xFF8
  3347                           tblptrh	equ	0xFF7
  3348                           tblptrl	equ	0xFF6
  3349                           tablat	equ	0xFF5
  3350                           prodh	equ	0xFF4
  3351                           prodl	equ	0xFF3
  3352                           intcon	equ	0xFF2
  3353                           intcon2	equ	0xFF1
  3354                           postinc0	equ	0xFEE
  3355                           wreg	equ	0xFE8
  3356                           status	equ	0xFD8
  3357                           
  3358 ;; *************** function _PID_SetSampleTime *****************
  3359 ;; Defined at:
  3360 ;;		line 73 in file "PID.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  newSampleTim    2    0[BANK0 ] int 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  ratio           3    2[BANK0 ] int 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;Total ram usage:        5 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    6
  3381 ;; This function calls:
  3382 ;;		___awtoft
  3383 ;;		___ftdiv
  3384 ;;		___ftmul
  3385 ;; This function is called by:
  3386 ;;		_InitHardware
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text24
  3391  000D3A                     __ptext24:
  3392                           	opt stack 0
  3393  000D3A                     _PID_SetSampleTime:
  3394                           	opt stack 23
  3395                           
  3396                           ;PID.c: 75: if (newSampleTime > 0)
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;incstack = 0
  3400  000D3A  0100               	movlb	0	; () banked
  3401  000D3C  BF61               	btfsc	(PID_SetSampleTime@newSampleTime+1)& (0+255),7,b
  3402  000D3E  0012               	return	
  3403  000D40  0100               	movlb	0	; () banked
  3404  000D42  5161               	movf	(PID_SetSampleTime@newSampleTime+1)& (0+255),w,b
  3405  000D44  E104               	bnz	u2690
  3406  000D46  0100               	movlb	0	; () banked
  3407  000D48  0560               	decf	PID_SetSampleTime@newSampleTime& (0+255),w,b
  3408  000D4A  A0D8               	btfss	status,0,c
  3409  000D4C  0012               	return	
  3410  000D4E                     u2690:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;PID.c: 76: {
  3414                           ;PID.c: 77: double ratio = (double)newSampleTime / (double)SampleTime;
  3415  000D4E  C060  F01E         	movff	PID_SetSampleTime@newSampleTime,___awtoft@c
  3416  000D52  C061  F01F         	movff	PID_SetSampleTime@newSampleTime+1,___awtoft@c+1
  3417  000D56  EC67  F008         	call	___awtoft	;wreg free
  3418  000D5A  C01E  F022         	movff	?___awtoft,___ftdiv@f1
  3419  000D5E  C01F  F023         	movff	?___awtoft+1,___ftdiv@f1+1
  3420  000D62  C020  F024         	movff	?___awtoft+2,___ftdiv@f1+2
  3421  000D66  C0B5  F01E         	movff	_SampleTime,___awtoft@c
  3422  000D6A  C0B6  F01F         	movff	_SampleTime+1,___awtoft@c+1
  3423  000D6E  EC67  F008         	call	___awtoft	;wreg free
  3424  000D72  C01E  F025         	movff	?___awtoft,___ftdiv@f2
  3425  000D76  C01F  F026         	movff	?___awtoft+1,___ftdiv@f2+1
  3426  000D7A  C020  F027         	movff	?___awtoft+2,___ftdiv@f2+2
  3427  000D7E  EC66  F005         	call	___ftdiv	;wreg free
  3428  000D82  C022  F062         	movff	?___ftdiv,PID_SetSampleTime@ratio
  3429  000D86  C023  F063         	movff	?___ftdiv+1,PID_SetSampleTime@ratio+1
  3430  000D8A  C024  F064         	movff	?___ftdiv+2,PID_SetSampleTime@ratio+2
  3431                           
  3432                           ;PID.c: 78: PIDConfig.Ki *= ratio;
  3433  000D8E  C094  F031         	movff	_PIDConfig+7,___ftmul@f1	;volatile
  3434  000D92  C095  F032         	movff	_PIDConfig+8,___ftmul@f1+1	;volatile
  3435  000D96  C096  F033         	movff	_PIDConfig+9,___ftmul@f1+2	;volatile
  3436  000D9A  C062  F034         	movff	PID_SetSampleTime@ratio,___ftmul@f2
  3437  000D9E  C063  F035         	movff	PID_SetSampleTime@ratio+1,___ftmul@f2+1
  3438  000DA2  C064  F036         	movff	PID_SetSampleTime@ratio+2,___ftmul@f2+2
  3439  000DA6  EC73  F004         	call	___ftmul	;wreg free
  3440  000DAA  C031  F094         	movff	?___ftmul,_PIDConfig+7	;volatile
  3441  000DAE  C032  F095         	movff	?___ftmul+1,_PIDConfig+8	;volatile
  3442  000DB2  C033  F096         	movff	?___ftmul+2,_PIDConfig+9	;volatile
  3443                           
  3444                           ;PID.c: 79: PIDConfig.Kd /= ratio;
  3445  000DB6  C097  F022         	movff	_PIDConfig+10,___ftdiv@f1	;volatile
  3446  000DBA  C098  F023         	movff	_PIDConfig+11,___ftdiv@f1+1	;volatile
  3447  000DBE  C099  F024         	movff	_PIDConfig+12,___ftdiv@f1+2	;volatile
  3448  000DC2  C062  F025         	movff	PID_SetSampleTime@ratio,___ftdiv@f2
  3449  000DC6  C063  F026         	movff	PID_SetSampleTime@ratio+1,___ftdiv@f2+1
  3450  000DCA  C064  F027         	movff	PID_SetSampleTime@ratio+2,___ftdiv@f2+2
  3451  000DCE  EC66  F005         	call	___ftdiv	;wreg free
  3452  000DD2  C022  F097         	movff	?___ftdiv,_PIDConfig+10	;volatile
  3453  000DD6  C023  F098         	movff	?___ftdiv+1,_PIDConfig+11	;volatile
  3454  000DDA  C024  F099         	movff	?___ftdiv+2,_PIDConfig+12	;volatile
  3455                           
  3456                           ;PID.c: 80: SampleTime = (unsigned long)newSampleTime;
  3457  000DDE  C060  F0B5         	movff	PID_SetSampleTime@newSampleTime,_SampleTime
  3458  000DE2  C061  F0B6         	movff	PID_SetSampleTime@newSampleTime+1,_SampleTime+1
  3459  000DE6  0012               	return	
  3460  000DE8                     __end_of_PID_SetSampleTime:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           tblptrh	equ	0xFF7
  3464                           tblptrl	equ	0xFF6
  3465                           tablat	equ	0xFF5
  3466                           prodh	equ	0xFF4
  3467                           prodl	equ	0xFF3
  3468                           intcon	equ	0xFF2
  3469                           intcon2	equ	0xFF1
  3470                           postinc0	equ	0xFEE
  3471                           wreg	equ	0xFE8
  3472                           status	equ	0xFD8
  3473                           
  3474 ;; *************** function ___ftmul *****************
  3475 ;; Defined at:
  3476 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftmul.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  f1              3   48[COMRAM] float 
  3479 ;;  f2              3   51[COMRAM] float 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  f3_as_produc    3   58[COMRAM] unsigned um
  3482 ;;  sign            1   62[COMRAM] unsigned char 
  3483 ;;  cntr            1   61[COMRAM] unsigned char 
  3484 ;;  exp             1   57[COMRAM] unsigned char 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  3   48[COMRAM] float 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3494 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;Total ram usage:       15 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    5
  3501 ;; This function calls:
  3502 ;;		___ftpack
  3503 ;; This function is called by:
  3504 ;;		_TempAcquisition
  3505 ;;		_PID_Control
  3506 ;;		_PID_SetTunings
  3507 ;;		_PID_SetSampleTime
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text25
  3512  0008E6                     __ptext25:
  3513                           	opt stack 0
  3514  0008E6                     ___ftmul:
  3515                           	opt stack 22
  3516                           
  3517                           ;incstack = 0
  3518  0008E6  C033  F037         	movff	___ftmul@f1+2,??___ftmul
  3519  0008EA  6A38               	clrf	(??___ftmul+1)& (0+255),c
  3520  0008EC  6A39               	clrf	(??___ftmul+2)& (0+255),c
  3521  0008EE  3432               	rlcf	___ftmul@f1+1,w,c
  3522  0008F0  3637               	rlcf	??___ftmul& (0+255),f,c
  3523  0008F2  E301               	bnc	u2441
  3524  0008F4  8038               	bsf	(??___ftmul+1)& (0+255),0,c
  3525  0008F6                     u2441:
  3526  0008F6  5037               	movf	??___ftmul,w,c
  3527  0008F8  6E3A               	movwf	___ftmul@exp,c
  3528  0008FA  503A               	movf	___ftmul@exp,w,c
  3529  0008FC  A4D8               	btfss	status,2,c
  3530  0008FE  D007               	goto	l2332
  3531  000900  0E00               	movlw	0
  3532  000902  6E31               	movwf	?___ftmul,c
  3533  000904  0E00               	movlw	0
  3534  000906  6E32               	movwf	?___ftmul+1,c
  3535  000908  0E00               	movlw	0
  3536  00090A  6E33               	movwf	?___ftmul+2,c
  3537  00090C  0012               	return	
  3538  00090E                     l2332:
  3539  00090E  C036  F037         	movff	___ftmul@f2+2,??___ftmul
  3540  000912  6A38               	clrf	(??___ftmul+1)& (0+255),c
  3541  000914  6A39               	clrf	(??___ftmul+2)& (0+255),c
  3542  000916  3435               	rlcf	___ftmul@f2+1,w,c
  3543  000918  3637               	rlcf	??___ftmul& (0+255),f,c
  3544  00091A  E301               	bnc	u2461
  3545  00091C  8038               	bsf	(??___ftmul+1)& (0+255),0,c
  3546  00091E                     u2461:
  3547  00091E  5037               	movf	??___ftmul,w,c
  3548  000920  6E3F               	movwf	___ftmul@sign,c
  3549  000922  503F               	movf	___ftmul@sign,w,c
  3550  000924  A4D8               	btfss	status,2,c
  3551  000926  D007               	goto	l2338
  3552  000928  0E00               	movlw	0
  3553  00092A  6E31               	movwf	?___ftmul,c
  3554  00092C  0E00               	movlw	0
  3555  00092E  6E32               	movwf	?___ftmul+1,c
  3556  000930  0E00               	movlw	0
  3557  000932  6E33               	movwf	?___ftmul+2,c
  3558  000934  0012               	return	
  3559  000936                     l2338:
  3560  000936  503F               	movf	___ftmul@sign,w,c
  3561  000938  0F7B               	addlw	123
  3562  00093A  263A               	addwf	___ftmul@exp,f,c
  3563  00093C  C033  F03F         	movff	___ftmul@f1+2,___ftmul@sign
  3564  000940  5036               	movf	___ftmul@f2+2,w,c
  3565  000942  1A3F               	xorwf	___ftmul@sign,f,c
  3566  000944  0E80               	movlw	128
  3567  000946  163F               	andwf	___ftmul@sign,f,c
  3568  000948  8E32               	bsf	___ftmul@f1+1,7,c
  3569  00094A  8E35               	bsf	___ftmul@f2+1,7,c
  3570  00094C  0EFF               	movlw	255
  3571  00094E  1634               	andwf	___ftmul@f2,f,c
  3572  000950  0EFF               	movlw	255
  3573  000952  1635               	andwf	___ftmul@f2+1,f,c
  3574  000954  0E00               	movlw	0
  3575  000956  1636               	andwf	___ftmul@f2+2,f,c
  3576  000958  0E00               	movlw	0
  3577  00095A  6E3B               	movwf	___ftmul@f3_as_product,c
  3578  00095C  0E00               	movlw	0
  3579  00095E  6E3C               	movwf	___ftmul@f3_as_product+1,c
  3580  000960  0E00               	movlw	0
  3581  000962  6E3D               	movwf	___ftmul@f3_as_product+2,c
  3582  000964  0E07               	movlw	7
  3583  000966  6E3E               	movwf	___ftmul@cntr,c
  3584  000968                     l2352:
  3585  000968  A031               	btfss	___ftmul@f1,0,c
  3586  00096A  D006               	goto	l2356
  3587  00096C  5034               	movf	___ftmul@f2,w,c
  3588  00096E  263B               	addwf	___ftmul@f3_as_product,f,c
  3589  000970  5035               	movf	___ftmul@f2+1,w,c
  3590  000972  223C               	addwfc	___ftmul@f3_as_product+1,f,c
  3591  000974  5036               	movf	___ftmul@f2+2,w,c
  3592  000976  223D               	addwfc	___ftmul@f3_as_product+2,f,c
  3593  000978                     l2356:
  3594  000978  90D8               	bcf	status,0,c
  3595  00097A  3233               	rrcf	___ftmul@f1+2,f,c
  3596  00097C  3232               	rrcf	___ftmul@f1+1,f,c
  3597  00097E  3231               	rrcf	___ftmul@f1,f,c
  3598  000980  90D8               	bcf	status,0,c
  3599  000982  3634               	rlcf	___ftmul@f2,f,c
  3600  000984  3635               	rlcf	___ftmul@f2+1,f,c
  3601  000986  3636               	rlcf	___ftmul@f2+2,f,c
  3602  000988  2E3E               	decfsz	___ftmul@cntr,f,c
  3603  00098A  D7EE               	goto	l2352
  3604  00098C  0E09               	movlw	9
  3605  00098E  6E3E               	movwf	___ftmul@cntr,c
  3606  000990                     l2362:
  3607  000990  A031               	btfss	___ftmul@f1,0,c
  3608  000992  D006               	goto	l2366
  3609  000994  5034               	movf	___ftmul@f2,w,c
  3610  000996  263B               	addwf	___ftmul@f3_as_product,f,c
  3611  000998  5035               	movf	___ftmul@f2+1,w,c
  3612  00099A  223C               	addwfc	___ftmul@f3_as_product+1,f,c
  3613  00099C  5036               	movf	___ftmul@f2+2,w,c
  3614  00099E  223D               	addwfc	___ftmul@f3_as_product+2,f,c
  3615  0009A0                     l2366:
  3616  0009A0  90D8               	bcf	status,0,c
  3617  0009A2  3233               	rrcf	___ftmul@f1+2,f,c
  3618  0009A4  3232               	rrcf	___ftmul@f1+1,f,c
  3619  0009A6  3231               	rrcf	___ftmul@f1,f,c
  3620  0009A8  90D8               	bcf	status,0,c
  3621  0009AA  323D               	rrcf	___ftmul@f3_as_product+2,f,c
  3622  0009AC  323C               	rrcf	___ftmul@f3_as_product+1,f,c
  3623  0009AE  323B               	rrcf	___ftmul@f3_as_product,f,c
  3624  0009B0  2E3E               	decfsz	___ftmul@cntr,f,c
  3625  0009B2  D7EE               	goto	l2362
  3626  0009B4  C03B  F010         	movff	___ftmul@f3_as_product,___ftpack@arg
  3627  0009B8  C03C  F011         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3628  0009BC  C03D  F012         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3629  0009C0  C03A  F013         	movff	___ftmul@exp,___ftpack@exp
  3630  0009C4  C03F  F014         	movff	___ftmul@sign,___ftpack@sign
  3631  0009C8  ECF4  F006         	call	___ftpack	;wreg free
  3632  0009CC  C010  F031         	movff	?___ftpack,?___ftmul
  3633  0009D0  C011  F032         	movff	?___ftpack+1,?___ftmul+1
  3634  0009D4  C012  F033         	movff	?___ftpack+2,?___ftmul+2
  3635  0009D8  0012               	return	
  3636  0009DA                     __end_of___ftmul:
  3637                           	opt stack 0
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           intcon2	equ	0xFF1
  3646                           postinc0	equ	0xFEE
  3647                           wreg	equ	0xFE8
  3648                           status	equ	0xFD8
  3649                           
  3650 ;; *************** function ___ftdiv *****************
  3651 ;; Defined at:
  3652 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  f1              3   33[COMRAM] float 
  3655 ;;  f2              3   36[COMRAM] float 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  f3              3   43[COMRAM] float 
  3658 ;;  sign            1   47[COMRAM] unsigned char 
  3659 ;;  exp             1   46[COMRAM] unsigned char 
  3660 ;;  cntr            1   42[COMRAM] unsigned char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  3   33[COMRAM] float 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3670 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;Total ram usage:       15 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    5
  3677 ;; This function calls:
  3678 ;;		___ftpack
  3679 ;; This function is called by:
  3680 ;;		_TempAcquisition
  3681 ;;		_PID_SetTunings
  3682 ;;		_PID_SetSampleTime
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text26
  3687  000ACC                     __ptext26:
  3688                           	opt stack 0
  3689  000ACC                     ___ftdiv:
  3690                           	opt stack 22
  3691                           
  3692                           ;incstack = 0
  3693  000ACC  C024  F028         	movff	___ftdiv@f1+2,??___ftdiv
  3694  000AD0  6A29               	clrf	(??___ftdiv+1)& (0+255),c
  3695  000AD2  6A2A               	clrf	(??___ftdiv+2)& (0+255),c
  3696  000AD4  3423               	rlcf	___ftdiv@f1+1,w,c
  3697  000AD6  3628               	rlcf	??___ftdiv& (0+255),f,c
  3698  000AD8  E301               	bnc	u2571
  3699  000ADA  8029               	bsf	(??___ftdiv+1)& (0+255),0,c
  3700  000ADC                     u2571:
  3701  000ADC  5028               	movf	??___ftdiv,w,c
  3702  000ADE  6E2F               	movwf	___ftdiv@exp,c
  3703  000AE0  502F               	movf	___ftdiv@exp,w,c
  3704  000AE2  A4D8               	btfss	status,2,c
  3705  000AE4  D007               	goto	l2424
  3706  000AE6  0E00               	movlw	0
  3707  000AE8  6E22               	movwf	?___ftdiv,c
  3708  000AEA  0E00               	movlw	0
  3709  000AEC  6E23               	movwf	?___ftdiv+1,c
  3710  000AEE  0E00               	movlw	0
  3711  000AF0  6E24               	movwf	?___ftdiv+2,c
  3712  000AF2  0012               	return	
  3713  000AF4                     l2424:
  3714  000AF4  C027  F028         	movff	___ftdiv@f2+2,??___ftdiv
  3715  000AF8  6A29               	clrf	(??___ftdiv+1)& (0+255),c
  3716  000AFA  6A2A               	clrf	(??___ftdiv+2)& (0+255),c
  3717  000AFC  3426               	rlcf	___ftdiv@f2+1,w,c
  3718  000AFE  3628               	rlcf	??___ftdiv& (0+255),f,c
  3719  000B00  E301               	bnc	u2591
  3720  000B02  8029               	bsf	(??___ftdiv+1)& (0+255),0,c
  3721  000B04                     u2591:
  3722  000B04  5028               	movf	??___ftdiv,w,c
  3723  000B06  6E30               	movwf	___ftdiv@sign,c
  3724  000B08  5030               	movf	___ftdiv@sign,w,c
  3725  000B0A  A4D8               	btfss	status,2,c
  3726  000B0C  D007               	goto	l2430
  3727  000B0E  0E00               	movlw	0
  3728  000B10  6E22               	movwf	?___ftdiv,c
  3729  000B12  0E00               	movlw	0
  3730  000B14  6E23               	movwf	?___ftdiv+1,c
  3731  000B16  0E00               	movlw	0
  3732  000B18  6E24               	movwf	?___ftdiv+2,c
  3733  000B1A  0012               	return	
  3734  000B1C                     l2430:
  3735  000B1C  0E00               	movlw	0
  3736  000B1E  6E2C               	movwf	___ftdiv@f3,c
  3737  000B20  0E00               	movlw	0
  3738  000B22  6E2D               	movwf	___ftdiv@f3+1,c
  3739  000B24  0E00               	movlw	0
  3740  000B26  6E2E               	movwf	___ftdiv@f3+2,c
  3741  000B28  5030               	movf	___ftdiv@sign,w,c
  3742  000B2A  0F89               	addlw	137
  3743  000B2C  5E2F               	subwf	___ftdiv@exp,f,c
  3744  000B2E  C024  F030         	movff	___ftdiv@f1+2,___ftdiv@sign
  3745  000B32  5027               	movf	___ftdiv@f2+2,w,c
  3746  000B34  1A30               	xorwf	___ftdiv@sign,f,c
  3747  000B36  0E80               	movlw	128
  3748  000B38  1630               	andwf	___ftdiv@sign,f,c
  3749  000B3A  8E23               	bsf	___ftdiv@f1+1,7,c
  3750  000B3C  0EFF               	movlw	255
  3751  000B3E  1622               	andwf	___ftdiv@f1,f,c
  3752  000B40  0EFF               	movlw	255
  3753  000B42  1623               	andwf	___ftdiv@f1+1,f,c
  3754  000B44  0E00               	movlw	0
  3755  000B46  1624               	andwf	___ftdiv@f1+2,f,c
  3756  000B48  8E26               	bsf	___ftdiv@f2+1,7,c
  3757  000B4A  0EFF               	movlw	255
  3758  000B4C  1625               	andwf	___ftdiv@f2,f,c
  3759  000B4E  0EFF               	movlw	255
  3760  000B50  1626               	andwf	___ftdiv@f2+1,f,c
  3761  000B52  0E00               	movlw	0
  3762  000B54  1627               	andwf	___ftdiv@f2+2,f,c
  3763  000B56  0E18               	movlw	24
  3764  000B58  6E2B               	movwf	___ftdiv@cntr,c
  3765  000B5A                     l2450:
  3766  000B5A  90D8               	bcf	status,0,c
  3767  000B5C  362C               	rlcf	___ftdiv@f3,f,c
  3768  000B5E  362D               	rlcf	___ftdiv@f3+1,f,c
  3769  000B60  362E               	rlcf	___ftdiv@f3+2,f,c
  3770  000B62  5025               	movf	___ftdiv@f2,w,c
  3771  000B64  5C22               	subwf	___ftdiv@f1,w,c
  3772  000B66  5026               	movf	___ftdiv@f2+1,w,c
  3773  000B68  5823               	subwfb	___ftdiv@f1+1,w,c
  3774  000B6A  5027               	movf	___ftdiv@f2+2,w,c
  3775  000B6C  5824               	subwfb	___ftdiv@f1+2,w,c
  3776  000B6E  A0D8               	btfss	status,0,c
  3777  000B70  D007               	goto	l699
  3778  000B72  5025               	movf	___ftdiv@f2,w,c
  3779  000B74  5E22               	subwf	___ftdiv@f1,f,c
  3780  000B76  5026               	movf	___ftdiv@f2+1,w,c
  3781  000B78  5A23               	subwfb	___ftdiv@f1+1,f,c
  3782  000B7A  5027               	movf	___ftdiv@f2+2,w,c
  3783  000B7C  5A24               	subwfb	___ftdiv@f1+2,f,c
  3784  000B7E  802C               	bsf	___ftdiv@f3,0,c
  3785  000B80                     l699:
  3786  000B80  90D8               	bcf	status,0,c
  3787  000B82  3622               	rlcf	___ftdiv@f1,f,c
  3788  000B84  3623               	rlcf	___ftdiv@f1+1,f,c
  3789  000B86  3624               	rlcf	___ftdiv@f1+2,f,c
  3790  000B88  2E2B               	decfsz	___ftdiv@cntr,f,c
  3791  000B8A  D7E7               	goto	l2450
  3792  000B8C  C02C  F010         	movff	___ftdiv@f3,___ftpack@arg
  3793  000B90  C02D  F011         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3794  000B94  C02E  F012         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3795  000B98  C02F  F013         	movff	___ftdiv@exp,___ftpack@exp
  3796  000B9C  C030  F014         	movff	___ftdiv@sign,___ftpack@sign
  3797  000BA0  ECF4  F006         	call	___ftpack	;wreg free
  3798  000BA4  C010  F022         	movff	?___ftpack,?___ftdiv
  3799  000BA8  C011  F023         	movff	?___ftpack+1,?___ftdiv+1
  3800  000BAC  C012  F024         	movff	?___ftpack+2,?___ftdiv+2
  3801  000BB0  0012               	return	
  3802  000BB2                     __end_of___ftdiv:
  3803                           	opt stack 0
  3804                           tblptru	equ	0xFF8
  3805                           tblptrh	equ	0xFF7
  3806                           tblptrl	equ	0xFF6
  3807                           tablat	equ	0xFF5
  3808                           prodh	equ	0xFF4
  3809                           prodl	equ	0xFF3
  3810                           intcon	equ	0xFF2
  3811                           intcon2	equ	0xFF1
  3812                           postinc0	equ	0xFEE
  3813                           wreg	equ	0xFE8
  3814                           status	equ	0xFD8
  3815                           
  3816 ;; *************** function _PID_SetPoint *****************
  3817 ;; Defined at:
  3818 ;;		line 51 in file "PID.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  newSetPoint     2   33[COMRAM] int 
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;Total ram usage:        2 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    6
  3839 ;; This function calls:
  3840 ;;		___awtoft
  3841 ;; This function is called by:
  3842 ;;		_InitHardware
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text27
  3847  00122E                     __ptext27:
  3848                           	opt stack 0
  3849  00122E                     _PID_SetPoint:
  3850                           	opt stack 23
  3851                           
  3852                           ;PID.c: 53: PIDConfig.SetPoint = newSetPoint;
  3853                           
  3854                           ;incstack = 0
  3855  00122E  C022  F01E         	movff	PID_SetPoint@newSetPoint,___awtoft@c
  3856  001232  C023  F01F         	movff	PID_SetPoint@newSetPoint+1,___awtoft@c+1
  3857  001236  EC67  F008         	call	___awtoft	;wreg free
  3858  00123A  C01E  F09A         	movff	?___awtoft,_PIDConfig+13	;volatile
  3859  00123E  C01F  F09B         	movff	?___awtoft+1,_PIDConfig+14	;volatile
  3860  001242  C020  F09C         	movff	?___awtoft+2,_PIDConfig+15	;volatile
  3861  001246  0012               	return		;funcret
  3862  001248                     __end_of_PID_SetPoint:
  3863                           	opt stack 0
  3864                           tblptru	equ	0xFF8
  3865                           tblptrh	equ	0xFF7
  3866                           tblptrl	equ	0xFF6
  3867                           tablat	equ	0xFF5
  3868                           prodh	equ	0xFF4
  3869                           prodl	equ	0xFF3
  3870                           intcon	equ	0xFF2
  3871                           intcon2	equ	0xFF1
  3872                           postinc0	equ	0xFEE
  3873                           wreg	equ	0xFE8
  3874                           status	equ	0xFD8
  3875                           
  3876 ;; *************** function _PID_SetOutputLimits *****************
  3877 ;; Defined at:
  3878 ;;		line 83 in file "PID.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  Min             2   42[COMRAM] int 
  3881 ;;  Max             2   44[COMRAM] int 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;Total ram usage:        5 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    6
  3900 ;; This function calls:
  3901 ;;		___awtoft
  3902 ;;		___ftge
  3903 ;; This function is called by:
  3904 ;;		_InitHardware
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text28
  3909  0007EC                     __ptext28:
  3910                           	opt stack 0
  3911  0007EC                     _PID_SetOutputLimits:
  3912                           	opt stack 23
  3913                           
  3914                           ;PID.c: 85: if(Min > Max) return;
  3915                           
  3916                           ;incstack = 0
  3917  0007EC  502B               	movf	PID_SetOutputLimits@Min,w,c
  3918  0007EE  5C2D               	subwf	PID_SetOutputLimits@Max,w,c
  3919  0007F0  502E               	movf	PID_SetOutputLimits@Max+1,w,c
  3920  0007F2  0A80               	xorlw	128
  3921  0007F4  6E2F               	movwf	??_PID_SetOutputLimits& (0+255),c
  3922  0007F6  502C               	movf	PID_SetOutputLimits@Min+1,w,c
  3923  0007F8  0A80               	xorlw	128
  3924  0007FA  582F               	subwfb	??_PID_SetOutputLimits& (0+255),w,c
  3925  0007FC  A0D8               	btfss	status,0,c
  3926  0007FE  0012               	return	
  3927                           
  3928                           ;PID.c: 86: PIDConfig.Min = Min;
  3929  000800  C02B  F08D         	movff	PID_SetOutputLimits@Min,_PIDConfig	;volatile
  3930  000804  C02C  F08E         	movff	PID_SetOutputLimits@Min+1,_PIDConfig+1	;volatile
  3931                           
  3932                           ;PID.c: 87: PIDConfig.Max = Max;
  3933  000808  C02D  F08F         	movff	PID_SetOutputLimits@Max,_PIDConfig+2	;volatile
  3934  00080C  C02E  F090         	movff	PID_SetOutputLimits@Max+1,_PIDConfig+3	;volatile
  3935                           
  3936                           ;PID.c: 89: if (Output > PIDConfig.Max) Output = PIDConfig.Max;
  3937  000810  0100               	movlb	0	; () banked
  3938  000812  51A8               	movf	_Output& (0+255),w,b
  3939  000814  0100               	movlb	0	; () banked
  3940  000816  5D8F               	subwf	(_PIDConfig+2)& (0+255),w,b	;volatile
  3941  000818  0100               	movlb	0	; () banked
  3942  00081A  5190               	movf	(_PIDConfig+3)& (0+255),w,b	;volatile
  3943  00081C  0A80               	xorlw	128
  3944  00081E  6E2F               	movwf	??_PID_SetOutputLimits& (0+255),c
  3945  000820  0100               	movlb	0	; () banked
  3946  000822  51A9               	movf	(_Output+1)& (0+255),w,b
  3947  000824  0A80               	xorlw	128
  3948  000826  582F               	subwfb	??_PID_SetOutputLimits& (0+255),w,c
  3949  000828  B0D8               	btfsc	status,0,c
  3950  00082A  D005               	goto	l2518
  3951                           
  3952                           ; BSR set to: 0
  3953  00082C  C08F  F0A8         	movff	_PIDConfig+2,_Output	;volatile
  3954  000830  C090  F0A9         	movff	_PIDConfig+3,_Output+1	;volatile
  3955  000834  D012               	goto	l2522
  3956  000836                     l2518:
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;PID.c: 90: else if (Output < PIDConfig.Min) Output = PIDConfig.Min;
  3960  000836  0100               	movlb	0	; () banked
  3961  000838  518D               	movf	_PIDConfig& (0+255),w,b	;volatile
  3962  00083A  0100               	movlb	0	; () banked
  3963  00083C  5DA8               	subwf	_Output& (0+255),w,b
  3964  00083E  0100               	movlb	0	; () banked
  3965  000840  51A9               	movf	(_Output+1)& (0+255),w,b
  3966  000842  0A80               	xorlw	128
  3967  000844  6E2F               	movwf	??_PID_SetOutputLimits& (0+255),c
  3968  000846  0100               	movlb	0	; () banked
  3969  000848  518E               	movf	(_PIDConfig+1)& (0+255),w,b	;volatile
  3970  00084A  0A80               	xorlw	128
  3971  00084C  582F               	subwfb	??_PID_SetOutputLimits& (0+255),w,c
  3972  00084E  B0D8               	btfsc	status,0,c
  3973  000850  D004               	goto	l2522
  3974                           
  3975                           ; BSR set to: 0
  3976  000852  C08D  F0A8         	movff	_PIDConfig,_Output	;volatile
  3977  000856  C08E  F0A9         	movff	_PIDConfig+1,_Output+1	;volatile
  3978  00085A                     l2522:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;PID.c: 92: if (ITerm > PIDConfig.Max) ITerm= PIDConfig.Max;
  3982  00085A  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  3983  00085E  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  3984  000862  EC67  F008         	call	___awtoft	;wreg free
  3985  000866  C01E  F022         	movff	?___awtoft,___ftge@ff1
  3986  00086A  C01F  F023         	movff	?___awtoft+1,___ftge@ff1+1
  3987  00086E  C020  F024         	movff	?___awtoft+2,___ftge@ff1+2
  3988  000872  C0A0  F025         	movff	_ITerm,___ftge@ff2
  3989  000876  C0A1  F026         	movff	_ITerm+1,___ftge@ff2+1
  3990  00087A  C0A2  F027         	movff	_ITerm+2,___ftge@ff2+2
  3991  00087E  EC99  F007         	call	___ftge	;wreg free
  3992  000882  B0D8               	btfsc	status,0,c
  3993  000884  D00D               	goto	l2526
  3994  000886  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  3995  00088A  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  3996  00088E  EC67  F008         	call	___awtoft	;wreg free
  3997  000892  C01E  F0A0         	movff	?___awtoft,_ITerm
  3998  000896  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  3999  00089A  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  4000  00089E  0012               	return	
  4001  0008A0                     l2526:
  4002                           
  4003                           ;PID.c: 93: else if (ITerm < PIDConfig.Min) ITerm= PIDConfig.Min;
  4004  0008A0  C0A0  F022         	movff	_ITerm,___ftge@ff1
  4005  0008A4  C0A1  F023         	movff	_ITerm+1,___ftge@ff1+1
  4006  0008A8  C0A2  F024         	movff	_ITerm+2,___ftge@ff1+2
  4007  0008AC  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  4008  0008B0  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  4009  0008B4  EC67  F008         	call	___awtoft	;wreg free
  4010  0008B8  C01E  F025         	movff	?___awtoft,___ftge@ff2
  4011  0008BC  C01F  F026         	movff	?___awtoft+1,___ftge@ff2+1
  4012  0008C0  C020  F027         	movff	?___awtoft+2,___ftge@ff2+2
  4013  0008C4  EC99  F007         	call	___ftge	;wreg free
  4014  0008C8  B0D8               	btfsc	status,0,c
  4015  0008CA  0012               	return	
  4016  0008CC  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  4017  0008D0  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  4018  0008D4  EC67  F008         	call	___awtoft	;wreg free
  4019  0008D8  C01E  F0A0         	movff	?___awtoft,_ITerm
  4020  0008DC  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  4021  0008E0  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  4022  0008E4  0012               	return	
  4023  0008E6                     __end_of_PID_SetOutputLimits:
  4024                           	opt stack 0
  4025                           tblptru	equ	0xFF8
  4026                           tblptrh	equ	0xFF7
  4027                           tblptrl	equ	0xFF6
  4028                           tablat	equ	0xFF5
  4029                           prodh	equ	0xFF4
  4030                           prodl	equ	0xFF3
  4031                           intcon	equ	0xFF2
  4032                           intcon2	equ	0xFF1
  4033                           postinc0	equ	0xFEE
  4034                           wreg	equ	0xFE8
  4035                           status	equ	0xFD8
  4036                           
  4037 ;; *************** function _PID_SetMode *****************
  4038 ;; Defined at:
  4039 ;;		line 99 in file "PID.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  Mode            2   42[COMRAM] int 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  newAuto         1   44[COMRAM] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;Total ram usage:        3 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    7
  4060 ;; This function calls:
  4061 ;;		_PID_Initialize
  4062 ;; This function is called by:
  4063 ;;		_InitHardware
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text29
  4068  001136                     __ptext29:
  4069                           	opt stack 0
  4070  001136                     _PID_SetMode:
  4071                           	opt stack 22
  4072                           
  4073                           ;PID.c: 101: unsigned char newAuto = (Mode == 1);
  4074                           
  4075                           ;incstack = 0
  4076  001136  042B               	decf	PID_SetMode@Mode,w,c
  4077  001138  102C               	iorwf	PID_SetMode@Mode+1,w,c
  4078  00113A  A4D8               	btfss	status,2,c
  4079  00113C  D002               	goto	u2750
  4080  00113E  0E01               	movlw	1
  4081  001140  D001               	goto	u2760
  4082  001142                     u2750:
  4083  001142  0E00               	movlw	0
  4084  001144                     u2760:
  4085  001144  6E2D               	movwf	PID_SetMode@newAuto,c
  4086                           
  4087                           ;PID.c: 102: if (newAuto == !inAuto)
  4088  001146  0100               	movlb	0	; () banked
  4089  001148  51B2               	movf	_inAuto& (0+255),w,b
  4090  00114A  A4D8               	btfss	status,2,c
  4091  00114C  D002               	goto	u2770
  4092  00114E  0E01               	movlw	1
  4093  001150  D001               	goto	u2780
  4094  001152                     u2770:
  4095  001152  0E00               	movlw	0
  4096  001154                     u2780:
  4097  001154  182D               	xorwf	PID_SetMode@newAuto,w,c
  4098  001156  B4D8               	btfsc	status,2,c
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;PID.c: 103: {
  4102                           ;PID.c: 105: PID_Initialize();
  4103  001158  EC3F  F006         	call	_PID_Initialize	;wreg free
  4104                           
  4105                           ;PID.c: 106: }
  4106                           ;PID.c: 107: inAuto = newAuto;
  4107  00115C  C02D  F0B2         	movff	PID_SetMode@newAuto,_inAuto
  4108  001160  0012               	return		;funcret
  4109  001162                     __end_of_PID_SetMode:
  4110                           	opt stack 0
  4111                           tblptru	equ	0xFF8
  4112                           tblptrh	equ	0xFF7
  4113                           tblptrl	equ	0xFF6
  4114                           tablat	equ	0xFF5
  4115                           prodh	equ	0xFF4
  4116                           prodl	equ	0xFF3
  4117                           intcon	equ	0xFF2
  4118                           intcon2	equ	0xFF1
  4119                           postinc0	equ	0xFEE
  4120                           wreg	equ	0xFE8
  4121                           status	equ	0xFD8
  4122                           
  4123 ;; *************** function _PID_Initialize *****************
  4124 ;; Defined at:
  4125 ;;		line 109 in file "PID.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;Total ram usage:        0 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    6
  4146 ;; This function calls:
  4147 ;;		___awtoft
  4148 ;;		___ftge
  4149 ;; This function is called by:
  4150 ;;		_PID_SetMode
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text30
  4155  000C7E                     __ptext30:
  4156                           	opt stack 0
  4157  000C7E                     _PID_Initialize:
  4158                           	opt stack 22
  4159                           
  4160                           ;PID.c: 111: lastInput = Input;
  4161                           
  4162                           ;incstack = 0
  4163  000C7E  C0AA  F01E         	movff	_Input,___awtoft@c
  4164  000C82  C0AB  F01F         	movff	_Input+1,___awtoft@c+1
  4165  000C86  EC67  F008         	call	___awtoft	;wreg free
  4166  000C8A  C01E  F09D         	movff	?___awtoft,_lastInput
  4167  000C8E  C01F  F09E         	movff	?___awtoft+1,_lastInput+1
  4168  000C92  C020  F09F         	movff	?___awtoft+2,_lastInput+2
  4169                           
  4170                           ;PID.c: 112: ITerm = Output;
  4171  000C96  C0A8  F01E         	movff	_Output,___awtoft@c
  4172  000C9A  C0A9  F01F         	movff	_Output+1,___awtoft@c+1
  4173  000C9E  EC67  F008         	call	___awtoft	;wreg free
  4174  000CA2  C01E  F0A0         	movff	?___awtoft,_ITerm
  4175  000CA6  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  4176  000CAA  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  4177                           
  4178                           ;PID.c: 113: if (ITerm > PIDConfig.Max) ITerm = PIDConfig.Max;
  4179  000CAE  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  4180  000CB2  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  4181  000CB6  EC67  F008         	call	___awtoft	;wreg free
  4182  000CBA  C01E  F022         	movff	?___awtoft,___ftge@ff1
  4183  000CBE  C01F  F023         	movff	?___awtoft+1,___ftge@ff1+1
  4184  000CC2  C020  F024         	movff	?___awtoft+2,___ftge@ff1+2
  4185  000CC6  C0A0  F025         	movff	_ITerm,___ftge@ff2
  4186  000CCA  C0A1  F026         	movff	_ITerm+1,___ftge@ff2+1
  4187  000CCE  C0A2  F027         	movff	_ITerm+2,___ftge@ff2+2
  4188  000CD2  EC99  F007         	call	___ftge	;wreg free
  4189  000CD6  B0D8               	btfsc	status,0,c
  4190  000CD8  D00D               	goto	l2484
  4191  000CDA  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  4192  000CDE  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  4193  000CE2  EC67  F008         	call	___awtoft	;wreg free
  4194  000CE6  C01E  F0A0         	movff	?___awtoft,_ITerm
  4195  000CEA  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  4196  000CEE  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  4197  000CF2  0012               	return	
  4198  000CF4                     l2484:
  4199                           
  4200                           ;PID.c: 114: else if (ITerm < PIDConfig.Min) ITerm = PIDConfig.Min;
  4201  000CF4  C0A0  F022         	movff	_ITerm,___ftge@ff1
  4202  000CF8  C0A1  F023         	movff	_ITerm+1,___ftge@ff1+1
  4203  000CFC  C0A2  F024         	movff	_ITerm+2,___ftge@ff1+2
  4204  000D00  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  4205  000D04  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  4206  000D08  EC67  F008         	call	___awtoft	;wreg free
  4207  000D0C  C01E  F025         	movff	?___awtoft,___ftge@ff2
  4208  000D10  C01F  F026         	movff	?___awtoft+1,___ftge@ff2+1
  4209  000D14  C020  F027         	movff	?___awtoft+2,___ftge@ff2+2
  4210  000D18  EC99  F007         	call	___ftge	;wreg free
  4211  000D1C  B0D8               	btfsc	status,0,c
  4212  000D1E  0012               	return	
  4213  000D20  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  4214  000D24  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  4215  000D28  EC67  F008         	call	___awtoft	;wreg free
  4216  000D2C  C01E  F0A0         	movff	?___awtoft,_ITerm
  4217  000D30  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  4218  000D34  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  4219  000D38  0012               	return	
  4220  000D3A                     __end_of_PID_Initialize:
  4221                           	opt stack 0
  4222                           tblptru	equ	0xFF8
  4223                           tblptrh	equ	0xFF7
  4224                           tblptrl	equ	0xFF6
  4225                           tablat	equ	0xFF5
  4226                           prodh	equ	0xFF4
  4227                           prodl	equ	0xFF3
  4228                           intcon	equ	0xFF2
  4229                           intcon2	equ	0xFF1
  4230                           postinc0	equ	0xFEE
  4231                           wreg	equ	0xFE8
  4232                           status	equ	0xFD8
  4233                           
  4234 ;; *************** function ___ftge *****************
  4235 ;; Defined at:
  4236 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftge.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  ff1             3   33[COMRAM] float 
  4239 ;;  ff2             3   36[COMRAM] float 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;		None               void
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4251 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;Total ram usage:        9 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    4
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_PID_Control
  4262 ;;		_PID_SetOutputLimits
  4263 ;;		_PID_Initialize
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text31
  4268  000F32                     __ptext31:
  4269                           	opt stack 0
  4270  000F32                     ___ftge:
  4271                           	opt stack 22
  4272                           
  4273                           ;incstack = 0
  4274  000F32  AE24               	btfss	___ftge@ff1+2,7,c
  4275  000F34  D016               	goto	l1832
  4276  000F36  C022  F028         	movff	___ftge@ff1,??___ftge
  4277  000F3A  C023  F029         	movff	___ftge@ff1+1,??___ftge+1
  4278  000F3E  C024  F02A         	movff	___ftge@ff1+2,??___ftge+2
  4279  000F42  1E28               	comf	??___ftge,f,c
  4280  000F44  1E29               	comf	??___ftge+1,f,c
  4281  000F46  1E2A               	comf	??___ftge+2,f,c
  4282  000F48  2A28               	incf	??___ftge,f,c
  4283  000F4A  0E00               	movlw	0
  4284  000F4C  2229               	addwfc	??___ftge+1,f,c
  4285  000F4E  222A               	addwfc	??___ftge+2,f,c
  4286  000F50  0E00               	movlw	0
  4287  000F52  2428               	addwf	??___ftge,w,c
  4288  000F54  6E22               	movwf	___ftge@ff1,c
  4289  000F56  0E00               	movlw	0
  4290  000F58  2029               	addwfc	??___ftge+1,w,c
  4291  000F5A  6E23               	movwf	___ftge@ff1+1,c
  4292  000F5C  0E80               	movlw	128
  4293  000F5E  202A               	addwfc	??___ftge+2,w,c
  4294  000F60  6E24               	movwf	___ftge@ff1+2,c
  4295  000F62                     l1832:
  4296  000F62  AE27               	btfss	___ftge@ff2+2,7,c
  4297  000F64  D016               	goto	l1836
  4298  000F66  C025  F028         	movff	___ftge@ff2,??___ftge
  4299  000F6A  C026  F029         	movff	___ftge@ff2+1,??___ftge+1
  4300  000F6E  C027  F02A         	movff	___ftge@ff2+2,??___ftge+2
  4301  000F72  1E28               	comf	??___ftge,f,c
  4302  000F74  1E29               	comf	??___ftge+1,f,c
  4303  000F76  1E2A               	comf	??___ftge+2,f,c
  4304  000F78  2A28               	incf	??___ftge,f,c
  4305  000F7A  0E00               	movlw	0
  4306  000F7C  2229               	addwfc	??___ftge+1,f,c
  4307  000F7E  222A               	addwfc	??___ftge+2,f,c
  4308  000F80  0E00               	movlw	0
  4309  000F82  2428               	addwf	??___ftge,w,c
  4310  000F84  6E25               	movwf	___ftge@ff2,c
  4311  000F86  0E00               	movlw	0
  4312  000F88  2029               	addwfc	??___ftge+1,w,c
  4313  000F8A  6E26               	movwf	___ftge@ff2+1,c
  4314  000F8C  0E80               	movlw	128
  4315  000F8E  202A               	addwfc	??___ftge+2,w,c
  4316  000F90  6E27               	movwf	___ftge@ff2+2,c
  4317  000F92                     l1836:
  4318  000F92  0E00               	movlw	0
  4319  000F94  1A22               	xorwf	___ftge@ff1,f,c
  4320  000F96  0E00               	movlw	0
  4321  000F98  1A23               	xorwf	___ftge@ff1+1,f,c
  4322  000F9A  0E80               	movlw	128
  4323  000F9C  1A24               	xorwf	___ftge@ff1+2,f,c
  4324  000F9E  0E00               	movlw	0
  4325  000FA0  1A25               	xorwf	___ftge@ff2,f,c
  4326  000FA2  0E00               	movlw	0
  4327  000FA4  1A26               	xorwf	___ftge@ff2+1,f,c
  4328  000FA6  0E80               	movlw	128
  4329  000FA8  1A27               	xorwf	___ftge@ff2+2,f,c
  4330  000FAA  5025               	movf	___ftge@ff2,w,c
  4331  000FAC  5C22               	subwf	___ftge@ff1,w,c
  4332  000FAE  5026               	movf	___ftge@ff2+1,w,c
  4333  000FB0  5823               	subwfb	___ftge@ff1+1,w,c
  4334  000FB2  5027               	movf	___ftge@ff2+2,w,c
  4335  000FB4  5824               	subwfb	___ftge@ff1+2,w,c
  4336  000FB6  B0D8               	btfsc	status,0,c
  4337  000FB8  D002               	goto	l1842
  4338  000FBA  90D8               	bcf	status,0,c
  4339  000FBC  0012               	return	
  4340  000FBE                     l1842:
  4341  000FBE  80D8               	bsf	status,0,c
  4342  000FC0  0012               	return	
  4343  000FC2                     __end_of___ftge:
  4344                           	opt stack 0
  4345                           tblptru	equ	0xFF8
  4346                           tblptrh	equ	0xFF7
  4347                           tblptrl	equ	0xFF6
  4348                           tablat	equ	0xFF5
  4349                           prodh	equ	0xFF4
  4350                           prodl	equ	0xFF3
  4351                           intcon	equ	0xFF2
  4352                           intcon2	equ	0xFF1
  4353                           postinc0	equ	0xFEE
  4354                           wreg	equ	0xFE8
  4355                           status	equ	0xFD8
  4356                           
  4357 ;; *************** function ___awtoft *****************
  4358 ;; Defined at:
  4359 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awtoft.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  c               2   29[COMRAM] int 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  sign            1   32[COMRAM] unsigned char 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  3   29[COMRAM] float 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2, status,0, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4373 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;Total ram usage:        4 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    5
  4380 ;; This function calls:
  4381 ;;		___ftpack
  4382 ;; This function is called by:
  4383 ;;		_TempAcquisition
  4384 ;;		_PID_Control
  4385 ;;		_PID_SetPoint
  4386 ;;		_PID_SetTunings
  4387 ;;		_PID_SetSampleTime
  4388 ;;		_PID_SetOutputLimits
  4389 ;;		_PID_Initialize
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text32
  4394  0010CE                     __ptext32:
  4395                           	opt stack 0
  4396  0010CE                     ___awtoft:
  4397                           	opt stack 22
  4398                           
  4399                           ;incstack = 0
  4400  0010CE  0E00               	movlw	0
  4401  0010D0  6E21               	movwf	___awtoft@sign,c
  4402  0010D2  AE1F               	btfss	___awtoft@c+1,7,c
  4403  0010D4  D006               	goto	l2382
  4404  0010D6  6C1E               	negf	___awtoft@c,c
  4405  0010D8  1E1F               	comf	___awtoft@c+1,f,c
  4406  0010DA  B0D8               	btfsc	status,0,c
  4407  0010DC  2A1F               	incf	___awtoft@c+1,f,c
  4408  0010DE  0E01               	movlw	1
  4409  0010E0  6E21               	movwf	___awtoft@sign,c
  4410  0010E2                     l2382:
  4411  0010E2  C01E  F010         	movff	___awtoft@c,___ftpack@arg
  4412  0010E6  C01F  F011         	movff	___awtoft@c+1,___ftpack@arg+1
  4413  0010EA  6A12               	clrf	___ftpack@arg+2,c
  4414  0010EC  0E8E               	movlw	142
  4415  0010EE  6E13               	movwf	___ftpack@exp,c
  4416  0010F0  C021  F014         	movff	___awtoft@sign,___ftpack@sign
  4417  0010F4  ECF4  F006         	call	___ftpack	;wreg free
  4418  0010F8  C010  F01E         	movff	?___ftpack,?___awtoft
  4419  0010FC  C011  F01F         	movff	?___ftpack+1,?___awtoft+1
  4420  001100  C012  F020         	movff	?___ftpack+2,?___awtoft+2
  4421  001104  0012               	return	
  4422  001106                     __end_of___awtoft:
  4423                           	opt stack 0
  4424                           tblptru	equ	0xFF8
  4425                           tblptrh	equ	0xFF7
  4426                           tblptrl	equ	0xFF6
  4427                           tablat	equ	0xFF5
  4428                           prodh	equ	0xFF4
  4429                           prodl	equ	0xFF3
  4430                           intcon	equ	0xFF2
  4431                           intcon2	equ	0xFF1
  4432                           postinc0	equ	0xFEE
  4433                           wreg	equ	0xFE8
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function ___ftpack *****************
  4437 ;; Defined at:
  4438 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\float.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  arg             3   15[COMRAM] unsigned um
  4441 ;;  exp             1   18[COMRAM] unsigned char 
  4442 ;;  sign            1   19[COMRAM] unsigned char 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;		None
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  3   15[COMRAM] float 
  4447 ;; Registers used:
  4448 ;;		wreg, status,2, status,0
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4454 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;Total ram usage:        8 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    4
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		___awtoft
  4465 ;;		___ftadd
  4466 ;;		___ftdiv
  4467 ;;		___ftmul
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text33
  4472  000DE8                     __ptext33:
  4473                           	opt stack 0
  4474  000DE8                     ___ftpack:
  4475                           	opt stack 22
  4476                           
  4477                           ;incstack = 0
  4478  000DE8  5013               	movf	___ftpack@exp,w,c
  4479  000DEA  B4D8               	btfsc	status,2,c
  4480  000DEC  D005               	goto	l2224
  4481  000DEE  5010               	movf	___ftpack@arg,w,c
  4482  000DF0  1011               	iorwf	___ftpack@arg+1,w,c
  4483  000DF2  1012               	iorwf	___ftpack@arg+2,w,c
  4484  000DF4  A4D8               	btfss	status,2,c
  4485  000DF6  D00C               	goto	l2230
  4486  000DF8                     l2224:
  4487  000DF8  0E00               	movlw	0
  4488  000DFA  6E10               	movwf	?___ftpack,c
  4489  000DFC  0E00               	movlw	0
  4490  000DFE  6E11               	movwf	?___ftpack+1,c
  4491  000E00  0E00               	movlw	0
  4492  000E02  6E12               	movwf	?___ftpack+2,c
  4493  000E04  0012               	return	
  4494  000E06                     l2228:
  4495  000E06  2A13               	incf	___ftpack@exp,f,c
  4496  000E08  90D8               	bcf	status,0,c
  4497  000E0A  3212               	rrcf	___ftpack@arg+2,f,c
  4498  000E0C  3211               	rrcf	___ftpack@arg+1,f,c
  4499  000E0E  3210               	rrcf	___ftpack@arg,f,c
  4500  000E10                     l2230:
  4501  000E10  0E00               	movlw	0
  4502  000E12  1410               	andwf	___ftpack@arg,w,c
  4503  000E14  6E15               	movwf	??___ftpack& (0+255),c
  4504  000E16  0E00               	movlw	0
  4505  000E18  1411               	andwf	___ftpack@arg+1,w,c
  4506  000E1A  6E16               	movwf	(??___ftpack+1)& (0+255),c
  4507  000E1C  0EFE               	movlw	254
  4508  000E1E  1412               	andwf	___ftpack@arg+2,w,c
  4509  000E20  6E17               	movwf	(??___ftpack+2)& (0+255),c
  4510  000E22  5015               	movf	??___ftpack,w,c
  4511  000E24  1016               	iorwf	??___ftpack+1,w,c
  4512  000E26  1017               	iorwf	??___ftpack+2,w,c
  4513  000E28  B4D8               	btfsc	status,2,c
  4514  000E2A  D00C               	goto	l2236
  4515  000E2C  D7EC               	goto	l2228
  4516  000E2E                     l2232:
  4517  000E2E  2A13               	incf	___ftpack@exp,f,c
  4518  000E30  0E01               	movlw	1
  4519  000E32  2610               	addwf	___ftpack@arg,f,c
  4520  000E34  0E00               	movlw	0
  4521  000E36  2211               	addwfc	___ftpack@arg+1,f,c
  4522  000E38  0E00               	movlw	0
  4523  000E3A  2212               	addwfc	___ftpack@arg+2,f,c
  4524  000E3C  90D8               	bcf	status,0,c
  4525  000E3E  3212               	rrcf	___ftpack@arg+2,f,c
  4526  000E40  3211               	rrcf	___ftpack@arg+1,f,c
  4527  000E42  3210               	rrcf	___ftpack@arg,f,c
  4528  000E44                     l2236:
  4529  000E44  0E00               	movlw	0
  4530  000E46  1410               	andwf	___ftpack@arg,w,c
  4531  000E48  6E15               	movwf	??___ftpack& (0+255),c
  4532  000E4A  0E00               	movlw	0
  4533  000E4C  1411               	andwf	___ftpack@arg+1,w,c
  4534  000E4E  6E16               	movwf	(??___ftpack+1)& (0+255),c
  4535  000E50  0EFF               	movlw	255
  4536  000E52  1412               	andwf	___ftpack@arg+2,w,c
  4537  000E54  6E17               	movwf	(??___ftpack+2)& (0+255),c
  4538  000E56  5015               	movf	??___ftpack,w,c
  4539  000E58  1016               	iorwf	??___ftpack+1,w,c
  4540  000E5A  1017               	iorwf	??___ftpack+2,w,c
  4541  000E5C  B4D8               	btfsc	status,2,c
  4542  000E5E  D006               	goto	l2240
  4543  000E60  D7E6               	goto	l2232
  4544  000E62                     l2238:
  4545  000E62  0613               	decf	___ftpack@exp,f,c
  4546  000E64  90D8               	bcf	status,0,c
  4547  000E66  3610               	rlcf	___ftpack@arg,f,c
  4548  000E68  3611               	rlcf	___ftpack@arg+1,f,c
  4549  000E6A  3612               	rlcf	___ftpack@arg+2,f,c
  4550  000E6C                     l2240:
  4551  000E6C  BE11               	btfsc	___ftpack@arg+1,7,c
  4552  000E6E  D003               	goto	l641
  4553  000E70  0E02               	movlw	2
  4554  000E72  6013               	cpfslt	___ftpack@exp,c
  4555  000E74  D7F6               	goto	l2238
  4556  000E76                     l641:
  4557  000E76  A013               	btfss	___ftpack@exp,0,c
  4558  000E78  9E11               	bcf	___ftpack@arg+1,7,c
  4559  000E7A  90D8               	bcf	status,0,c
  4560  000E7C  3213               	rrcf	___ftpack@exp,f,c
  4561  000E7E  5013               	movf	___ftpack@exp,w,c
  4562  000E80  1212               	iorwf	___ftpack@arg+2,f,c
  4563  000E82  5014               	movf	___ftpack@sign,w,c
  4564  000E84  A4D8               	btfss	status,2,c
  4565  000E86  8E12               	bsf	___ftpack@arg+2,7,c
  4566  000E88  C010  F010         	movff	___ftpack@arg,?___ftpack
  4567  000E8C  C011  F011         	movff	___ftpack@arg+1,?___ftpack+1
  4568  000E90  C012  F012         	movff	___ftpack@arg+2,?___ftpack+2
  4569  000E94  0012               	return	
  4570  000E96                     __end_of___ftpack:
  4571                           	opt stack 0
  4572                           tblptru	equ	0xFF8
  4573                           tblptrh	equ	0xFF7
  4574                           tblptrl	equ	0xFF6
  4575                           tablat	equ	0xFF5
  4576                           prodh	equ	0xFF4
  4577                           prodl	equ	0xFF3
  4578                           intcon	equ	0xFF2
  4579                           intcon2	equ	0xFF1
  4580                           postinc0	equ	0xFEE
  4581                           wreg	equ	0xFE8
  4582                           status	equ	0xFD8
  4583                           
  4584 ;; *************** function _PID_SetControllerDirection *****************
  4585 ;; Defined at:
  4586 ;;		line 95 in file "PID.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  Direction       2   15[COMRAM] int 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      void 
  4593 ;; Registers used:
  4594 ;;		None
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;Total ram usage:        2 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    4
  4607 ;; This function calls:
  4608 ;;		Nothing
  4609 ;; This function is called by:
  4610 ;;		_InitHardware
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text34
  4615  0012EC                     __ptext34:
  4616                           	opt stack 0
  4617  0012EC                     _PID_SetControllerDirection:
  4618                           	opt stack 25
  4619                           
  4620                           ;PID.c: 97: controllerDirection = Direction;
  4621                           
  4622                           ;incstack = 0
  4623  0012EC  C010  F0A6         	movff	PID_SetControllerDirection@Direction,_controllerDirection
  4624  0012F0  C011  F0A7         	movff	PID_SetControllerDirection@Direction+1,_controllerDirection+1
  4625  0012F4  0012               	return		;funcret
  4626  0012F6                     __end_of_PID_SetControllerDirection:
  4627                           	opt stack 0
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           intcon	equ	0xFF2
  4635                           intcon2	equ	0xFF1
  4636                           postinc0	equ	0xFEE
  4637                           wreg	equ	0xFE8
  4638                           status	equ	0xFD8
  4639                           
  4640 ;; *************** function _ADC_StartConversion *****************
  4641 ;; Defined at:
  4642 ;;		line 89 in file "mcc_generated_files/adc.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;		None
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		None
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;Total ram usage:        0 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    4
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_InitHardware
  4667 ;;		_TempAcquisition
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text35
  4672  001304                     __ptext35:
  4673                           	opt stack 0
  4674  001304                     _ADC_StartConversion:
  4675                           	opt stack 23
  4676                           
  4677                           ;adc.c: 92: ADCON0bits.GO_nDONE = 1;
  4678                           
  4679                           ;incstack = 0
  4680  001304  82C2               	bsf	4034,1,c	;volatile
  4681  001306  0012               	return		;funcret
  4682  001308                     __end_of_ADC_StartConversion:
  4683                           	opt stack 0
  4684                           tblptru	equ	0xFF8
  4685                           tblptrh	equ	0xFF7
  4686                           tblptrl	equ	0xFF6
  4687                           tablat	equ	0xFF5
  4688                           prodh	equ	0xFF4
  4689                           prodl	equ	0xFF3
  4690                           intcon	equ	0xFF2
  4691                           intcon2	equ	0xFF1
  4692                           postinc0	equ	0xFEE
  4693                           wreg	equ	0xFE8
  4694                           status	equ	0xFD8
  4695                           
  4696 ;; *************** function _ADC_SelectChannel *****************
  4697 ;; Defined at:
  4698 ;;		line 81 in file "mcc_generated_files/adc.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  channel         1    wreg     enum E6986
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  channel         1   16[COMRAM] enum E6986
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2, status,0
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;Total ram usage:        2 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    4
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_InitHardware
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text36
  4727  001260                     __ptext36:
  4728                           	opt stack 0
  4729  001260                     _ADC_SelectChannel:
  4730                           	opt stack 25
  4731                           
  4732                           ;incstack = 0
  4733                           ;ADC_SelectChannel@channel stored from wreg
  4734  001260  6E11               	movwf	ADC_SelectChannel@channel,c
  4735                           
  4736                           ;adc.c: 84: ADCON0bits.CHS = channel;
  4737  001262  C011  F010         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  4738  001266  4610               	rlncf	??_ADC_SelectChannel,f,c
  4739  001268  4610               	rlncf	??_ADC_SelectChannel,f,c
  4740  00126A  50C2               	movf	4034,w,c	;volatile
  4741  00126C  1810               	xorwf	??_ADC_SelectChannel,w,c
  4742  00126E  0B83               	andlw	-125
  4743  001270  1810               	xorwf	??_ADC_SelectChannel,w,c
  4744  001272  6EC2               	movwf	4034,c	;volatile
  4745                           
  4746                           ;adc.c: 86: ADCON0bits.ADON = 1;
  4747  001274  80C2               	bsf	4034,0,c	;volatile
  4748  001276  0012               	return		;funcret
  4749  001278                     __end_of_ADC_SelectChannel:
  4750                           	opt stack 0
  4751                           tblptru	equ	0xFF8
  4752                           tblptrh	equ	0xFF7
  4753                           tblptrl	equ	0xFF6
  4754                           tablat	equ	0xFF5
  4755                           prodh	equ	0xFF4
  4756                           prodl	equ	0xFF3
  4757                           intcon	equ	0xFF2
  4758                           intcon2	equ	0xFF1
  4759                           postinc0	equ	0xFEE
  4760                           wreg	equ	0xFE8
  4761                           status	equ	0xFD8
  4762                           
  4763 ;; *************** function _INTERRUPT_InterruptManager *****************
  4764 ;; Defined at:
  4765 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;Total ram usage:       14 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    3
  4786 ;; This function calls:
  4787 ;;		_ADC_ISR
  4788 ;;		_TMR2_ISR
  4789 ;; This function is called by:
  4790 ;;		Interrupt level 2
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	intcode
  4795  000008                     __pintcode:
  4796                           	opt stack 0
  4797  000008                     _INTERRUPT_InterruptManager:
  4798                           	opt stack 21
  4799                           
  4800                           ;incstack = 0
  4801  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4802  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
  4803  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4804  000012  CFE9 F004          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4805  000016  CFEA F005          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4806  00001A  CFE1 F006          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4807  00001E  CFE2 F007          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4808  000022  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4809  000026  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4810  00002A  CFF3 F00A          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4811  00002E  CFF4 F00B          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4812  000032  CFF6 F00C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4813  000036  CFF7 F00D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4814  00003A  CFF8 F00E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4815  00003E  CFF5 F00F          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4816                           
  4817                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  4818  000042  BCF2               	btfsc	intcon,6,c	;volatile
  4819  000044  AC9D               	btfss	3997,6,c	;volatile
  4820  000046  D005               	goto	i2l100
  4821  000048  AC9E               	btfss	3998,6,c	;volatile
  4822  00004A  D003               	goto	i2l100
  4823                           
  4824                           ;interrupt_manager.c: 61: {
  4825                           ;interrupt_manager.c: 62: ADC_ISR();
  4826  00004C  EC84  F009         	call	_ADC_ISR	;wreg free
  4827                           
  4828                           ;interrupt_manager.c: 63: }
  4829  000050  D006               	goto	i2l104
  4830  000052                     i2l100:
  4831                           
  4832                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  4833  000052  BCF2               	btfsc	intcon,6,c	;volatile
  4834  000054  A29D               	btfss	3997,1,c	;volatile
  4835  000056  D003               	goto	i2l104
  4836  000058  B29E               	btfsc	3998,1,c	;volatile
  4837                           
  4838                           ;interrupt_manager.c: 65: {
  4839                           ;interrupt_manager.c: 66: TMR2_ISR();
  4840  00005A  ECF8  F008         	call	_TMR2_ISR	;wreg free
  4841  00005E                     i2l104:
  4842  00005E  C00F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4843  000062  C00E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4844  000066  C00D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4845  00006A  C00C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4846  00006E  C00B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4847  000072  C00A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4848  000076  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4849  00007A  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4850  00007E  C007  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4851  000082  C006  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4852  000086  C005  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4853  00008A  C004  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4854  00008E  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4855  000092  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4856  000096  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4857  000098  0011               	retfie		f
  4858  00009A                     __end_of_INTERRUPT_InterruptManager:
  4859                           	opt stack 0
  4860                           pclatu	equ	0xFFB
  4861                           pclath	equ	0xFFA
  4862                           tblptru	equ	0xFF8
  4863                           tblptrh	equ	0xFF7
  4864                           tblptrl	equ	0xFF6
  4865                           tablat	equ	0xFF5
  4866                           prodh	equ	0xFF4
  4867                           prodl	equ	0xFF3
  4868                           intcon	equ	0xFF2
  4869                           intcon2	equ	0xFF1
  4870                           postinc0	equ	0xFEE
  4871                           fsr0h	equ	0xFEA
  4872                           fsr0l	equ	0xFE9
  4873                           wreg	equ	0xFE8
  4874                           fsr1h	equ	0xFE2
  4875                           fsr1l	equ	0xFE1
  4876                           fsr2h	equ	0xFDA
  4877                           fsr2l	equ	0xFD9
  4878                           status	equ	0xFD8
  4879                           
  4880 ;; *************** function _TMR2_ISR *****************
  4881 ;; Defined at:
  4882 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;Total ram usage:        0 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    2
  4903 ;; This function calls:
  4904 ;;		_TMR2_CallBack
  4905 ;; This function is called by:
  4906 ;;		_INTERRUPT_InterruptManager
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text38
  4911  0011F0                     __ptext38:
  4912                           	opt stack 0
  4913  0011F0                     _TMR2_ISR:
  4914                           	opt stack 21
  4915                           
  4916                           ;tmr2.c: 125: static volatile unsigned int CountCallBack = 0;
  4917                           ;tmr2.c: 127: PIR1bits.TMR2IF = 0;
  4918                           
  4919                           ;incstack = 0
  4920  0011F0  929E               	bcf	3998,1,c	;volatile
  4921                           
  4922                           ;tmr2.c: 130: if (++CountCallBack >= 20)
  4923  0011F2  4A4C               	infsnz	TMR2_ISR@CountCallBack,f,c	;volatile
  4924  0011F4  2A4D               	incf	TMR2_ISR@CountCallBack+1,f,c	;volatile
  4925  0011F6  504D               	movf	TMR2_ISR@CountCallBack+1,w,c	;volatile
  4926  0011F8  E104               	bnz	i2u208_40
  4927  0011FA  0E14               	movlw	20
  4928  0011FC  5C4C               	subwf	TMR2_ISR@CountCallBack,w,c	;volatile
  4929  0011FE  A0D8               	btfss	status,0,c
  4930  001200  0012               	return	
  4931  001202                     i2u208_40:
  4932                           
  4933                           ;tmr2.c: 131: {
  4934                           ;tmr2.c: 134: TMR2_CallBack();
  4935  001202  ECC4  F008         	call	_TMR2_CallBack	;wreg free
  4936                           
  4937                           ;tmr2.c: 137: CountCallBack = 0;
  4938  001206  0E00               	movlw	0
  4939  001208  6E4D               	movwf	TMR2_ISR@CountCallBack+1,c	;volatile
  4940  00120A  0E00               	movlw	0
  4941  00120C  6E4C               	movwf	TMR2_ISR@CountCallBack,c	;volatile
  4942  00120E  0012               	return	
  4943  001210                     __end_of_TMR2_ISR:
  4944                           	opt stack 0
  4945                           pclatu	equ	0xFFB
  4946                           pclath	equ	0xFFA
  4947                           tblptru	equ	0xFF8
  4948                           tblptrh	equ	0xFF7
  4949                           tblptrl	equ	0xFF6
  4950                           tablat	equ	0xFF5
  4951                           prodh	equ	0xFF4
  4952                           prodl	equ	0xFF3
  4953                           intcon	equ	0xFF2
  4954                           intcon2	equ	0xFF1
  4955                           postinc0	equ	0xFEE
  4956                           fsr0h	equ	0xFEA
  4957                           fsr0l	equ	0xFE9
  4958                           wreg	equ	0xFE8
  4959                           fsr1h	equ	0xFE2
  4960                           fsr1l	equ	0xFE1
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _TMR2_CallBack *****************
  4966 ;; Defined at:
  4967 ;;		line 141 in file "mcc_generated_files/tmr2.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  1    wreg      void 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;Total ram usage:        0 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    1
  4988 ;; This function calls:
  4989 ;;		Absolute function
  4990 ;;		_TMR2_DefaultInterruptHandler
  4991 ;;		_TMR2_Tick
  4992 ;; This function is called by:
  4993 ;;		_TMR2_ISR
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text39
  4998  001188                     __ptext39:
  4999                           	opt stack 0
  5000  001188                     _TMR2_CallBack:
  5001                           	opt stack 21
  5002                           
  5003                           ;tmr2.c: 145: if(TMR2_InterruptHandler)
  5004                           
  5005                           ;incstack = 0
  5006  001188  0100               	movlb	0	; () banked
  5007  00118A  51B3               	movf	_TMR2_InterruptHandler& (0+255),w,b
  5008  00118C  0100               	movlb	0	; () banked
  5009  00118E  11B4               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  5010  001190  B4D8               	btfsc	status,2,c
  5011  001192  0012               	return	
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;tmr2.c: 146: {
  5015                           ;tmr2.c: 147: TMR2_InterruptHandler();
  5016  001194  D801               	call	i2u191_48
  5017  001196  0012               	return	
  5018  001198                     i2u191_48:
  5019  001198  0005               	push	
  5020  00119A  0100               	movlb	0	; () banked
  5021  00119C  6EFA               	movwf	pclath,c
  5022  00119E  51B3               	movf	_TMR2_InterruptHandler& (0+255),w,b
  5023  0011A0  6EFD               	movwf	tosl,c
  5024  0011A2  51B4               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  5025  0011A4  6EFE               	movwf	tosh,c
  5026  0011A6  50F8               	movf	tblptru,w,c
  5027  0011A8  6EFF               	movwf	tosu,c
  5028  0011AA  50FA               	movf	pclath,w,c
  5029  0011AC  0012               	return		;indir
  5030  0011AE                     __end_of_TMR2_CallBack:
  5031                           	opt stack 0
  5032                           tosu	equ	0xFFF
  5033                           tosh	equ	0xFFE
  5034                           tosl	equ	0xFFD
  5035                           pclatu	equ	0xFFB
  5036                           pclath	equ	0xFFA
  5037                           tblptru	equ	0xFF8
  5038                           tblptrh	equ	0xFF7
  5039                           tblptrl	equ	0xFF6
  5040                           tablat	equ	0xFF5
  5041                           prodh	equ	0xFF4
  5042                           prodl	equ	0xFF3
  5043                           intcon	equ	0xFF2
  5044                           intcon2	equ	0xFF1
  5045                           postinc0	equ	0xFEE
  5046                           fsr0h	equ	0xFEA
  5047                           fsr0l	equ	0xFE9
  5048                           wreg	equ	0xFE8
  5049                           fsr1h	equ	0xFE2
  5050                           fsr1l	equ	0xFE1
  5051                           fsr2h	equ	0xFDA
  5052                           fsr2l	equ	0xFD9
  5053                           status	equ	0xFD8
  5054                           
  5055 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5056 ;; Defined at:
  5057 ;;		line 155 in file "mcc_generated_files/tmr2.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;		None
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;		None
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		None
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;Total ram usage:        0 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_TMR2_Initialize
  5081 ;;		_TMR2_CallBack
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text40
  5086  00130E                     __ptext40:
  5087                           	opt stack 0
  5088  00130E                     _TMR2_DefaultInterruptHandler:
  5089                           	opt stack 21
  5090                           
  5091                           ;incstack = 0
  5092  00130E  0012               	return		;funcret
  5093  001310                     __end_of_TMR2_DefaultInterruptHandler:
  5094                           	opt stack 0
  5095                           tosu	equ	0xFFF
  5096                           tosh	equ	0xFFE
  5097                           tosl	equ	0xFFD
  5098                           pclatu	equ	0xFFB
  5099                           pclath	equ	0xFFA
  5100                           tblptru	equ	0xFF8
  5101                           tblptrh	equ	0xFF7
  5102                           tblptrl	equ	0xFF6
  5103                           tablat	equ	0xFF5
  5104                           prodh	equ	0xFF4
  5105                           prodl	equ	0xFF3
  5106                           intcon	equ	0xFF2
  5107                           intcon2	equ	0xFF1
  5108                           postinc0	equ	0xFEE
  5109                           fsr0h	equ	0xFEA
  5110                           fsr0l	equ	0xFE9
  5111                           wreg	equ	0xFE8
  5112                           fsr1h	equ	0xFE2
  5113                           fsr1l	equ	0xFE1
  5114                           fsr2h	equ	0xFDA
  5115                           fsr2l	equ	0xFD9
  5116                           status	equ	0xFD8
  5117                           
  5118 ;; *************** function _TMR2_Tick *****************
  5119 ;; Defined at:
  5120 ;;		line 47 in file "tasks.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;Total ram usage:        1 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_InitHardware
  5144 ;;		_TMR2_CallBack
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text41
  5149  0009DA                     __ptext41:
  5150                           	opt stack 0
  5151  0009DA                     _TMR2_Tick:
  5152                           	opt stack 21
  5153                           
  5154                           ;tasks.c: 49: TempCounter++;
  5155                           
  5156                           ;incstack = 0
  5157  0009DA  0100               	movlb	0	; () banked
  5158  0009DC  4BB0               	infsnz	_TempCounter& (0+255),f,b
  5159  0009DE  2BB1               	incf	(_TempCounter+1)& (0+255),f,b
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;tasks.c: 51: static volatile unsigned uint16_t seg = 0;
  5163                           ;tasks.c: 52: static volatile unsigned uint16_t min = 0;
  5164                           ;tasks.c: 53: static volatile unsigned uint16_t Hard_ON = 0;
  5165                           ;tasks.c: 54: static volatile unsigned uint16_t Hard_OFF = 0;
  5166                           ;tasks.c: 55: static volatile unsigned uint16_t State = 0;
  5167                           ;tasks.c: 57: if (++seg >= 1000)
  5168  0009E0  4A4A               	infsnz	TMR2_Tick@seg,f,c	;volatile
  5169  0009E2  2A4B               	incf	TMR2_Tick@seg+1,f,c	;volatile
  5170  0009E4  0EE8               	movlw	232
  5171  0009E6  5C4A               	subwf	TMR2_Tick@seg,w,c	;volatile
  5172  0009E8  0E03               	movlw	3
  5173  0009EA  584B               	subwfb	TMR2_Tick@seg+1,w,c	;volatile
  5174  0009EC  A0D8               	btfss	status,0,c
  5175  0009EE  D048               	goto	i2l2056
  5176                           
  5177                           ; BSR set to: 0
  5178                           
  5179                           ; BSR set to: 0
  5180                           
  5181                           ;tasks.c: 58: {
  5182                           ;tasks.c: 59: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  5183  0009F0  A089               	btfss	3977,0,c	;volatile
  5184  0009F2  D002               	goto	i2u177_40
  5185  0009F4  0E01               	movlw	1
  5186  0009F6  D001               	goto	i2u177_46
  5187  0009F8                     i2u177_40:
  5188  0009F8  0E00               	movlw	0
  5189  0009FA                     i2u177_46:
  5190  0009FA  0AFF               	xorlw	255
  5191  0009FC  6E01               	movwf	??_TMR2_Tick& (0+255),c
  5192  0009FE  5089               	movf	3977,w,c	;volatile
  5193  000A00  1801               	xorwf	??_TMR2_Tick,w,c
  5194  000A02  0BFE               	andlw	-2
  5195  000A04  1801               	xorwf	??_TMR2_Tick,w,c
  5196  000A06  6E89               	movwf	3977,c	;volatile
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;tasks.c: 60: if ((++Hard_OFF >= 10))
  5200  000A08  4A44               	infsnz	TMR2_Tick@Hard_OFF,f,c	;volatile
  5201  000A0A  2A45               	incf	TMR2_Tick@Hard_OFF+1,f,c	;volatile
  5202  000A0C  5045               	movf	TMR2_Tick@Hard_OFF+1,w,c	;volatile
  5203  000A0E  E104               	bnz	i2u178_40
  5204  000A10  0E0A               	movlw	10
  5205  000A12  5C44               	subwf	TMR2_Tick@Hard_OFF,w,c	;volatile
  5206  000A14  A0D8               	btfss	status,0,c
  5207  000A16  D00E               	goto	i2l2042
  5208  000A18                     i2u178_40:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;tasks.c: 61: {
  5212                           ;tasks.c: 62: if (State == 0)
  5213  000A18  5042               	movf	TMR2_Tick@State,w,c	;volatile
  5214  000A1A  1043               	iorwf	TMR2_Tick@State+1,w,c	;volatile
  5215  000A1C  A4D8               	btfss	status,2,c
  5216  000A1E  D006               	goto	i2l308
  5217                           
  5218                           ; BSR set to: 0
  5219                           
  5220                           ;tasks.c: 63: {
  5221                           ;tasks.c: 64: do { LATDbits.LATD6 = 0; } while(0);
  5222  000A20  9C8C               	bcf	3980,6,c	;volatile
  5223                           
  5224                           ; BSR set to: 0
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;tasks.c: 65: do { LATDbits.LATD7 = 0; } while(0);
  5228  000A22  9E8C               	bcf	3980,7,c	;volatile
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;tasks.c: 66: State = 1;
  5232                           
  5233                           ; BSR set to: 0
  5234  000A24  0E00               	movlw	0
  5235  000A26  6E43               	movwf	TMR2_Tick@State+1,c	;volatile
  5236  000A28  0E01               	movlw	1
  5237  000A2A  6E42               	movwf	TMR2_Tick@State,c	;volatile
  5238  000A2C                     i2l308:
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;tasks.c: 67: }
  5242                           ;tasks.c: 68: Hard_OFF = 0;
  5243  000A2C  0E00               	movlw	0
  5244  000A2E  6E45               	movwf	TMR2_Tick@Hard_OFF+1,c	;volatile
  5245  000A30  0E00               	movlw	0
  5246  000A32  6E44               	movwf	TMR2_Tick@Hard_OFF,c	;volatile
  5247  000A34                     i2l2042:
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;tasks.c: 70: }
  5251                           ;tasks.c: 71: if (++min >= 60)
  5252  000A34  4A48               	infsnz	TMR2_Tick@min,f,c	;volatile
  5253  000A36  2A49               	incf	TMR2_Tick@min+1,f,c	;volatile
  5254  000A38  5049               	movf	TMR2_Tick@min+1,w,c	;volatile
  5255  000A3A  E104               	bnz	i2u180_40
  5256  000A3C  0E3C               	movlw	60
  5257  000A3E  5C48               	subwf	TMR2_Tick@min,w,c	;volatile
  5258  000A40  A0D8               	btfss	status,0,c
  5259  000A42  D01A               	goto	i2l313
  5260  000A44                     i2u180_40:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;tasks.c: 72: {
  5264                           ;tasks.c: 73: if ((++Hard_ON >= 60))
  5265  000A44  4A46               	infsnz	TMR2_Tick@Hard_ON,f,c	;volatile
  5266  000A46  2A47               	incf	TMR2_Tick@Hard_ON+1,f,c	;volatile
  5267  000A48  5047               	movf	TMR2_Tick@Hard_ON+1,w,c	;volatile
  5268  000A4A  E104               	bnz	i2u181_40
  5269  000A4C  0E3C               	movlw	60
  5270  000A4E  5C46               	subwf	TMR2_Tick@Hard_ON,w,c	;volatile
  5271  000A50  A0D8               	btfss	status,0,c
  5272  000A52  D00E               	goto	i2l314
  5273  000A54                     i2u181_40:
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;tasks.c: 74: {
  5277                           ;tasks.c: 75: Hard_ON=0;
  5278  000A54  0E00               	movlw	0
  5279  000A56  6E47               	movwf	TMR2_Tick@Hard_ON+1,c	;volatile
  5280  000A58  0E00               	movlw	0
  5281  000A5A  6E46               	movwf	TMR2_Tick@Hard_ON,c	;volatile
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;tasks.c: 76: if(State == 1)
  5285  000A5C  0442               	decf	TMR2_Tick@State,w,c	;volatile
  5286  000A5E  1043               	iorwf	TMR2_Tick@State+1,w,c	;volatile
  5287  000A60  A4D8               	btfss	status,2,c
  5288  000A62  D006               	goto	i2l314
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;tasks.c: 77: {
  5292                           ;tasks.c: 78: State = 0;
  5293  000A64  0E00               	movlw	0
  5294  000A66  6E43               	movwf	TMR2_Tick@State+1,c	;volatile
  5295  000A68  0E00               	movlw	0
  5296  000A6A  6E42               	movwf	TMR2_Tick@State,c	;volatile
  5297                           
  5298                           ; BSR set to: 0
  5299                           
  5300                           ; BSR set to: 0
  5301                           
  5302                           ;tasks.c: 79: do { LATDbits.LATD6 = 1; } while(0);
  5303  000A6C  8C8C               	bsf	3980,6,c	;volatile
  5304                           
  5305                           ; BSR set to: 0
  5306                           
  5307                           ; BSR set to: 0
  5308                           
  5309                           ;tasks.c: 80: do { LATDbits.LATD7 = 1; } while(0);
  5310                           
  5311                           ; BSR set to: 0
  5312  000A6E  8E8C               	bsf	3980,7,c	;volatile
  5313  000A70                     i2l314:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;tasks.c: 81: }
  5317                           ;tasks.c: 82: }
  5318                           ;tasks.c: 83: min = 0;
  5319  000A70  0E00               	movlw	0
  5320  000A72  6E49               	movwf	TMR2_Tick@min+1,c	;volatile
  5321  000A74  0E00               	movlw	0
  5322  000A76  6E48               	movwf	TMR2_Tick@min,c	;volatile
  5323  000A78                     i2l313:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;tasks.c: 84: }
  5327                           ;tasks.c: 85: seg = 0;
  5328  000A78  0E00               	movlw	0
  5329  000A7A  6E4B               	movwf	TMR2_Tick@seg+1,c	;volatile
  5330  000A7C  0E00               	movlw	0
  5331  000A7E  6E4A               	movwf	TMR2_Tick@seg,c	;volatile
  5332  000A80                     i2l2056:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;tasks.c: 86: }
  5336                           ;tasks.c: 88: if (DutyPeltier == 0)
  5337  000A80  0100               	movlb	0	; () banked
  5338  000A82  51AE               	movf	_DutyPeltier& (0+255),w,b
  5339  000A84  0100               	movlb	0	; () banked
  5340  000A86  11AF               	iorwf	(_DutyPeltier+1)& (0+255),w,b
  5341  000A88  A4D8               	btfss	status,2,c
  5342  000A8A  D002               	goto	i2l2058
  5343                           
  5344                           ; BSR set to: 0
  5345                           
  5346                           ;tasks.c: 89: {
  5347                           ;tasks.c: 90: do { LATAbits.LATA4 = 0; } while(0);
  5348  000A8C  9889               	bcf	3977,4,c	;volatile
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;tasks.c: 91: }
  5352  000A8E  0012               	return	
  5353  000A90                     i2l2058:
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;tasks.c: 92: else
  5357                           ;tasks.c: 93: {
  5358                           ;tasks.c: 94: static unsigned int PeltierCounter;
  5359                           ;tasks.c: 95: if (PeltierCounter++ == 0)
  5360  000A90  4A40               	infsnz	TMR2_Tick@PeltierCounter,f,c
  5361  000A92  2A41               	incf	TMR2_Tick@PeltierCounter+1,f,c
  5362  000A94  0440               	decf	TMR2_Tick@PeltierCounter,w,c
  5363  000A96  1041               	iorwf	TMR2_Tick@PeltierCounter+1,w,c
  5364  000A98  A4D8               	btfss	status,2,c
  5365  000A9A  D002               	goto	i2l2060
  5366                           
  5367                           ; BSR set to: 0
  5368                           
  5369                           ;tasks.c: 96: {
  5370                           ;tasks.c: 97: do { LATAbits.LATA4 = 1; } while(0);
  5371  000A9C  8889               	bsf	3977,4,c	;volatile
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;tasks.c: 98: }
  5375  000A9E  0012               	return	
  5376  000AA0                     i2l2060:
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;tasks.c: 99: else if (PeltierCounter == DutyPeltier)
  5380  000AA0  0100               	movlb	0	; () banked
  5381  000AA2  51AE               	movf	_DutyPeltier& (0+255),w,b
  5382  000AA4  1840               	xorwf	TMR2_Tick@PeltierCounter,w,c
  5383  000AA6  E107               	bnz	i2l2062
  5384  000AA8  0100               	movlb	0	; () banked
  5385  000AAA  51AF               	movf	(_DutyPeltier+1)& (0+255),w,b
  5386  000AAC  1841               	xorwf	TMR2_Tick@PeltierCounter+1,w,c
  5387  000AAE  A4D8               	btfss	status,2,c
  5388  000AB0  D002               	goto	i2l2062
  5389                           
  5390                           ; BSR set to: 0
  5391                           
  5392                           ;tasks.c: 100: {
  5393                           ;tasks.c: 101: do { LATAbits.LATA4 = 0; } while(0);
  5394  000AB2  9889               	bcf	3977,4,c	;volatile
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;tasks.c: 102: }
  5398  000AB4  0012               	return	
  5399  000AB6                     i2l2062:
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;tasks.c: 103: else if (PeltierCounter > 100)
  5403  000AB6  5041               	movf	TMR2_Tick@PeltierCounter+1,w,c
  5404  000AB8  E104               	bnz	i2u186_40
  5405  000ABA  0E65               	movlw	101
  5406  000ABC  5C40               	subwf	TMR2_Tick@PeltierCounter,w,c
  5407  000ABE  A0D8               	btfss	status,0,c
  5408  000AC0  0012               	return	
  5409  000AC2                     i2u186_40:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;tasks.c: 104: {
  5413                           ;tasks.c: 105: PeltierCounter = 0;
  5414  000AC2  0E00               	movlw	0
  5415  000AC4  6E41               	movwf	TMR2_Tick@PeltierCounter+1,c
  5416  000AC6  0E00               	movlw	0
  5417  000AC8  6E40               	movwf	TMR2_Tick@PeltierCounter,c
  5418                           
  5419                           ; BSR set to: 0
  5420                           
  5421                           ; BSR set to: 0
  5422                           
  5423                           ; BSR set to: 0
  5424  000ACA  0012               	return	
  5425  000ACC                     __end_of_TMR2_Tick:
  5426                           	opt stack 0
  5427                           tosu	equ	0xFFF
  5428                           tosh	equ	0xFFE
  5429                           tosl	equ	0xFFD
  5430                           pclatu	equ	0xFFB
  5431                           pclath	equ	0xFFA
  5432                           tblptru	equ	0xFF8
  5433                           tblptrh	equ	0xFF7
  5434                           tblptrl	equ	0xFF6
  5435                           tablat	equ	0xFF5
  5436                           prodh	equ	0xFF4
  5437                           prodl	equ	0xFF3
  5438                           intcon	equ	0xFF2
  5439                           intcon2	equ	0xFF1
  5440                           postinc0	equ	0xFEE
  5441                           fsr0h	equ	0xFEA
  5442                           fsr0l	equ	0xFE9
  5443                           wreg	equ	0xFE8
  5444                           fsr1h	equ	0xFE2
  5445                           fsr1l	equ	0xFE1
  5446                           fsr2h	equ	0xFDA
  5447                           fsr2l	equ	0xFD9
  5448                           status	equ	0xFD8
  5449                           
  5450 ;; *************** function _ADC_ISR *****************
  5451 ;; Defined at:
  5452 ;;		line 129 in file "mcc_generated_files/adc.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		None
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; This function calls:
  5473 ;;		Nothing
  5474 ;; This function is called by:
  5475 ;;		_INTERRUPT_InterruptManager
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text42
  5480  001308                     __ptext42:
  5481                           	opt stack 0
  5482  001308                     _ADC_ISR:
  5483                           	opt stack 23
  5484                           
  5485                           ;adc.c: 132: PIR1bits.ADIF = 0;
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;incstack = 0
  5489  001308  9C9E               	bcf	3998,6,c	;volatile
  5490  00130A  0012               	return		;funcret
  5491  00130C                     __end_of_ADC_ISR:
  5492                           	opt stack 0
  5493  0000                     tosu	equ	0xFFF
  5494                           tosh	equ	0xFFE
  5495                           tosl	equ	0xFFD
  5496                           pclatu	equ	0xFFB
  5497                           pclath	equ	0xFFA
  5498                           tblptru	equ	0xFF8
  5499                           tblptrh	equ	0xFF7
  5500                           tblptrl	equ	0xFF6
  5501                           tablat	equ	0xFF5
  5502                           prodh	equ	0xFF4
  5503                           prodl	equ	0xFF3
  5504                           intcon	equ	0xFF2
  5505                           intcon2	equ	0xFF1
  5506                           postinc0	equ	0xFEE
  5507                           fsr0h	equ	0xFEA
  5508                           fsr0l	equ	0xFE9
  5509                           wreg	equ	0xFE8
  5510                           fsr1h	equ	0xFE2
  5511                           fsr1l	equ	0xFE1
  5512                           fsr2h	equ	0xFDA
  5513                           fsr2l	equ	0xFD9
  5514                           status	equ	0xFD8
  5515                           tosu	equ	0xFFF
  5516                           tosh	equ	0xFFE
  5517                           tosl	equ	0xFFD
  5518                           pclatu	equ	0xFFB
  5519                           pclath	equ	0xFFA
  5520                           tblptru	equ	0xFF8
  5521                           tblptrh	equ	0xFF7
  5522                           tblptrl	equ	0xFF6
  5523                           tablat	equ	0xFF5
  5524                           prodh	equ	0xFF4
  5525                           prodl	equ	0xFF3
  5526                           intcon	equ	0xFF2
  5527                           intcon2	equ	0xFF1
  5528                           postinc0	equ	0xFEE
  5529                           fsr0h	equ	0xFEA
  5530                           fsr0l	equ	0xFE9
  5531                           wreg	equ	0xFE8
  5532                           fsr1h	equ	0xFE2
  5533                           fsr1l	equ	0xFE1
  5534                           fsr2h	equ	0xFDA
  5535                           fsr2l	equ	0xFD9
  5536                           status	equ	0xFD8
  5537                           
  5538                           	psect	text43
  5539  000000                     __ptext43:
  5540                           	opt stack 0
  5541                           tosu	equ	0xFFF
  5542                           tosh	equ	0xFFE
  5543                           tosl	equ	0xFFD
  5544                           pclatu	equ	0xFFB
  5545                           pclath	equ	0xFFA
  5546                           tblptru	equ	0xFF8
  5547                           tblptrh	equ	0xFF7
  5548                           tblptrl	equ	0xFF6
  5549                           tablat	equ	0xFF5
  5550                           prodh	equ	0xFF4
  5551                           prodl	equ	0xFF3
  5552                           intcon	equ	0xFF2
  5553                           intcon2	equ	0xFF1
  5554                           postinc0	equ	0xFEE
  5555                           fsr0h	equ	0xFEA
  5556                           fsr0l	equ	0xFE9
  5557                           wreg	equ	0xFE8
  5558                           fsr1h	equ	0xFE2
  5559                           fsr1l	equ	0xFE1
  5560                           fsr2h	equ	0xFDA
  5561                           fsr2l	equ	0xFD9
  5562                           status	equ	0xFD8
  5563                           
  5564                           	psect	rparam
  5565  0000                     tosu	equ	0xFFF
  5566                           tosh	equ	0xFFE
  5567                           tosl	equ	0xFFD
  5568                           pclatu	equ	0xFFB
  5569                           pclath	equ	0xFFA
  5570                           tblptru	equ	0xFF8
  5571                           tblptrh	equ	0xFF7
  5572                           tblptrl	equ	0xFF6
  5573                           tablat	equ	0xFF5
  5574                           prodh	equ	0xFF4
  5575                           prodl	equ	0xFF3
  5576                           intcon	equ	0xFF2
  5577                           intcon2	equ	0xFF1
  5578                           postinc0	equ	0xFEE
  5579                           fsr0h	equ	0xFEA
  5580                           fsr0l	equ	0xFE9
  5581                           wreg	equ	0xFE8
  5582                           fsr1h	equ	0xFE2
  5583                           fsr1l	equ	0xFE1
  5584                           fsr2h	equ	0xFDA
  5585                           fsr2l	equ	0xFD9
  5586                           status	equ	0xFD8
  5587                           
  5588                           	psect	temp
  5589  000050                     btemp:
  5590                           	opt stack 0
  5591  000050                     	ds	1
  5592  0000                     int$flags	set	btemp
  5593                           tosu	equ	0xFFF
  5594                           tosh	equ	0xFFE
  5595                           tosl	equ	0xFFD
  5596                           pclatu	equ	0xFFB
  5597                           pclath	equ	0xFFA
  5598                           tblptru	equ	0xFF8
  5599                           tblptrh	equ	0xFF7
  5600                           tblptrl	equ	0xFF6
  5601                           tablat	equ	0xFF5
  5602                           prodh	equ	0xFF4
  5603                           prodl	equ	0xFF3
  5604                           intcon	equ	0xFF2
  5605                           intcon2	equ	0xFF1
  5606                           postinc0	equ	0xFEE
  5607                           fsr0h	equ	0xFEA
  5608                           fsr0l	equ	0xFE9
  5609                           wreg	equ	0xFE8
  5610                           fsr1h	equ	0xFE2
  5611                           fsr1l	equ	0xFE1
  5612                           fsr2h	equ	0xFDA
  5613                           fsr2l	equ	0xFD9
  5614                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         54
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      79
    BANK0           160     45      87
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_Tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TempAcquisition->___ftmul
    ___awdiv->___wmul
    _PID_Control->___ftmul
    ___fttol->___ftmul
    ___ftadd->___ftmul
    _PID_SetTunings->___ftmul
    ___ftneg->___ftmul
    _PID_SetSampleTime->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    _PID_SetPoint->___awtoft
    _PID_SetOutputLimits->___ftge
    _PID_Initialize->___ftge
    ___ftge->___awtoft
    ___awtoft->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_CallBack->_TMR2_Tick

Critical Paths under _main in BANK0

    _TempUpdate->_TempAcquisition
    _TempAcquisition->_PID_Control
    _PID_Control->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftneg
    _InitHardware->_PID_SetTunings
    _PID_SetTunings->___ftneg

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69181
                       _InitHardware
                           _MainTask
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     150
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     150
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainTask                                             0     0      0   28198
                         _TempUpdate
 ---------------------------------------------------------------------------------
 (2) _TempUpdate                                           0     0      0   28198
                    _TempAcquisition
 ---------------------------------------------------------------------------------
 (3) _TempAcquisition                                      2     2      0   28198
                                             43 BANK0      2     2      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                _ADC_StartConversion
                        _PID_Control
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     428
                                             21 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PID_Control                                         13    11      2   15020
                                             30 BANK0     13    11      2
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     380
                                             15 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4687
                                              3 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversionResult                              4     2      2       0
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _InitHardware                                         0     0      0   40833
                  _ADC_SelectChannel
                _ADC_StartConversion
         _PID_SetControllerDirection
                        _PID_SetMode
                _PID_SetOutputLimits
                       _PID_SetPoint
                  _PID_SetSampleTime
                     _PID_SetTunings
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     150
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      12     3      9   13058
                                              3 BANK0     12     3      9
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     527
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetSampleTime                                    5     3      2   12284
                                              0 BANK0      5     3      2
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    3990
                                             48 COMRAM    15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3768
                                             33 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _PID_SetPoint                                         2     0      2    4399
                                             33 COMRAM     2     0      2
                           ___awtoft
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  5     1      4    5473
                                             42 COMRAM     5     1      4
                           ___awtoft
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetMode                                          3     1      2    5368
                                             42 COMRAM     3     1      2
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (3) _PID_Initialize                                       0     0      0    5195
                           ___awtoft
                             ___ftge
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     904
                                             33 COMRAM     9     3      6
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    4291
                                             29 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2464
                                             15 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           2     0      2      86
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      15
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0       0
                                              1 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                          _TMR2_Tick *
 ---------------------------------------------------------------------------------
 (10) _TMR2_Tick                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitHardware
     _ADC_SelectChannel
     _ADC_StartConversion
     _PID_SetControllerDirection
     _PID_SetMode
       _PID_Initialize
         ___awtoft
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
     _PID_SetOutputLimits
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftge
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
     _PID_SetPoint
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
     _PID_SetSampleTime
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
     _PID_SetTunings
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
     _TMR2_SetInterruptHandler
   _MainTask
     _TempUpdate
       _TempAcquisition
         _ADC_GetConversionResult
         _ADC_IsConversionDone
         _ADC_StartConversion
         _PID_Control
           ___awtoft
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
           ___ftmul
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
           ___fttol
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___awdiv (ARG)
                         ___wmul (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awtoft
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___fttol
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
         ___wmul
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _TMR2_Tick *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      57       5       54.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6      12        0.0%
DATA                 0      0      A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Jan 29 10:18:36 2018

        __end_of_TMR2_SetInterruptHandler 12EC                           PID_SetMode@Mode 002B  
                            ___awdiv@sign 001B                    __end_of_PID_Initialize 0D3A  
                     ___wmul@multiplicand 0012                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 006E  
                            ___ftadd@exp2 006D                     ??_PID_SetOutputLimits 002F  
                             __CFG_LVP$ON 000000                              ___ftadd@sign 006C  
                                     l375 01BE                                       l641 0E76  
                                     l721 1128                                       l670 0406  
                                     l664 03A4                                       l668 03DE  
                                     l679 04DC                                       l688 0506  
                                     l699 0B80                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 130C                           _TMR2_Initialize 11AE  
                                     tosl 000FFD                                       wreg 000FE8  
                         _CCP5_Initialize 128E                              ___ftdiv@cntr 002B  
                            ___ftdiv@sign 0030                                      l2000 0FE6  
                                    l2010 1008                                      l2006 0FFC  
                                    l2022 102E                                      l2008 1004  
                                    l2026 103C                                      l2018 1024  
                                    l2230 0E10                                      l2240 0E6C  
                                    l2232 0E2E                                      l2224 0DF8  
                                    l2312 0530                                      l2304 04C2  
                                    l2400 017A                                      l2322 057E  
                                    l2306 04D0                                      l2236 0E44  
                                    l2228 0E06                                      l2332 090E  
                                    l2412 02F8                                      l2238 0E62  
                                    l2430 0B1C                                      l2270 03EC  
                                    l2424 0AF4                                      l2352 0968  
                                    l2264 03B2                                      l2408 02D0  
                                    l2522 085A                                      l2450 0B5A  
                                    l2362 0990                                      l2338 0936  
                                    l2356 0978                                      l2292 046C  
                                    l2276 03FC                                      l2382 10E2  
                                    l2526 08A0                                      l2518 0836  
                                    l2366 09A0                                      l2294 047A  
                                    l2286 043E                                      l1832 0F62  
                                    l2296 0488                                      l1842 0FBE  
                                    l2298 0494                                      l2466 0BB2  
                                    l1836 0F92                                      l2484 0CF4  
                                    l2396 00B8                                      l2564 12C2  
                                    l1856 05DE                                      l1874 0670  
                                    l1892 06D6                                      l1884 06A0  
                                    l1886 06B0                                      l1878 0684  
                                    l1888 06BA                                      l1994 0FD6  
                                    u1501 05BA                                      _LATA 000F89  
                                    _LATB 000F8A                                      u2231 0352  
                                    _LATC 000F8B                                      u1520 0604  
                                    _LATD 000F8C                                      u2241 0370  
                                    _LATE 000F8D                                      u1525 05FA  
                                    u2441 08F6                                      u1580 12DE  
                                    u2461 091E                                      u2571 0ADC  
                                    u2750 1142                                      u2591 0B04  
                                    u2760 1144                                      u2770 1152  
                                    u2690 0D4E                                      u2780 1154  
                                    _TMR2 000FBC                                      _WPUB 000F61  
                           ?_InitHardware 0001                                      _main 12B6  
                            ___ftpack@arg 0010                              ___ftpack@exp 0013  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0050                    PID_SetOutputLimits@Max 002D  
                           __CFG_BORV$190 000000                    PID_SetOutputLimits@Min 002B  
                  __end_of_PID_SetTunings 07EC                                      prodh 000FF4  
                                    prodl 000FF3                                      start 009A  
                           __CFG_IESO$OFF 000000                   TMR2_Tick@PeltierCounter 0040  
                            ___ftmul@cntr 003E                              ___param_bank 000000  
                            ___ftmul@sign 003F                   __end_of_TempAcquisition 0C7E  
                            ___fttol@exp1 007D                              ___fttol@lval 0079  
                         ?_PID_Initialize 0001            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 12D6                                     ?_main 0001  
                         __end_of___awdiv 1046                           __end_of___ftadd 05A4  
                         __end_of___ftdiv 0BB2                           __end_of___ftneg 1136  
                         __end_of___ftmul 09DA                           ___awdiv@divisor 0018  
                         __end_of___fttol 06E8                                     _T2CON 000FBA  
                          __CFG_DEBUG$OFF 000000                                     i2l100 0052  
                                   i2l104 005E                                     i2l313 0A78  
                                   i2l314 0A70                                     i2l308 0A2C  
                         ___awdiv@counter 001A                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _ITerm 00A0          __size_of_ADC_GetConversionResult 0014  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                       PID_Control@dInput 0082                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                                     _Input 00AA  
              __size_of_PID_SetSampleTime 00AE                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR2_ISR 1210                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                             ___awtoft@sign 0021  
                      __size_of_TMR2_Tick 00F2            PID_SetSampleTime@newSampleTime 0060  
                      PID_SetMode@newAuto 002D                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 0014                            ??_InitHardware 0040  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 12FC                           ?_PID_SetTunings 0063  
                          __CFG_PBADEN$ON 000000                              ?_PID_Control 007E  
                         __initialization 1090                          __end_of_MainTask 12FC  
              __end_of_EUSART1_Initialize 128E                              __end_of_main 12C8  
                            ?_PID_SetMode 002B                   __end_of_TMR2_Initialize 11D0  
                               ??_ADC_ISR 0001               ?_INTERRUPT_InterruptManager 0001  
                _TMR2_SetInterruptHandler 12E2                                    ??_main 0040  
                           ___fttol@sign1 0078                   __end_of_CCP5_Initialize 12A2  
                           __activetblptr 000002                          PID_SetTunings@Kd 0069  
                        PID_SetTunings@Ki 0066                          PID_SetTunings@Kp 0063  
           __size_of_ADC_IsConversionDone 000C                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                     _controllerDirection 00A6                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                          ___awdiv@dividend 0016  
                        __end_of___awtoft 1106                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                        __end_of___ftpack 0E96                                _SampleTime 00B5  
                                  i2l2042 0A34                                    i2l2060 0AA0  
                                  i2l2062 0AB6                                    i2l2056 0A80  
                                  i2l2058 0A90                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                              _TempUpdate 11D0                            __CFG_XINST$OFF 000000  
                                  _Output 00A8                                    ___ftge 0F32  
                        ?_TempAcquisition 0001                         __end_of_TMR2_Tick 0ACC  
                                  ___wmul 1162                                 ??___awdiv 001A  
                               ??___ftadd 0069                            __CFG_STVREN$ON 000000  
                               ??___ftdiv 0028                                 ??___ftneg 0040  
                               ??___ftmul 0037                                 ??___fttol 0073  
                                  _inAuto 00B2                                    clear_0 10AE  
                                  clear_1 10BA                          ___awdiv@quotient 001C  
                   ___ftmul@f3_as_product 003B                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                 __end_of_TMR2_StartTimer 1300  TMR2_SetInterruptHandler@InterruptHandler 0010  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 1210  
                              __accesstop 0060                   __end_of__initialization 10C0  
                              ___ftadd@f1 0063                                ___ftadd@f2 0066  
                   __end_of_TMR2_CallBack 11AE                                ___ftge@ff1 0022  
                              ___ftge@ff2 0025                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                ___ftdiv@f1 0022  
                              ___ftdiv@f2 0025                                ___ftdiv@f3 002C  
                              ___ftneg@f1 0060                                ___awtoft@c 001E  
                              ___ftmul@f1 0031                                ___ftmul@f2 0034  
                              ___fttol@f1 006F              __size_of_ADC_StartConversion 0004  
                          __pcstackCOMRAM 0001                              __pidataBANK0 130C  
                     ??_SYSTEM_Initialize 0012                                 ?_TMR2_ISR 0001  
                           ?_PID_SetPoint 0022                          ?_TMR2_Initialize 0001  
                    __end_of_InitHardware 0F32                          ?_CCP5_Initialize 0001  
                 _ADC_GetConversionResult 12A2                               _DutyPeltier 00AE  
               __end_of_SYSTEM_Initialize 122E                                 ?_MainTask 0001  
                              __pbssBANK0 008D                           __CFG_PLLCFG$OFF 000000  
                             ?_TempUpdate 0001                        __CFG_CCP2MX$PORTC1 000000  
                        ??_PID_Initialize 002B                                   ?___ftge 0022  
             __end_of_PID_SetOutputLimits 08E6                                   ?___wmul 0010  
                              ??_TMR2_ISR 0002                      __size_of_PID_Control 029E  
                      __CFG_CCP3MX$PORTB5 000000                    PID_SetSampleTime@ratio 0062  
                          ??_PID_SetPoint 0024                                   _CCP5CON 000F54  
                                 _ADC_ISR 1308                      __size_of_PID_SetMode 002C  
                               ?___awtoft 001E                                 ?___ftpack 0010  
                 __size_of_ADC_Initialize 0018                          TMR2_Tick@Hard_ON 0046  
                                 _OSCCON2 000FD2                                   _OSCTUNE 000F9B  
                                 _SPBRGH1 000FB0                          ?_TMR2_StartTimer 0001  
                              ??_MainTask 0040                          ??_PID_SetTunings 0040  
                             _TempCounter 00B0                TempAcquisition@TEMPERATURA 00AC  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                 PID_SetPoint@newSetPoint 0022                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 0012              ??_PID_SetControllerDirection 0012  
     PID_SetControllerDirection@Direction 0010                           __size_of___ftge 0090  
                                 ___awdiv 0FC2                                   ___ftadd 033C  
                                 ___ftdiv 0ACC                                   ___ftneg 1106  
                         __size_of___wmul 0026                                   ___ftmul 08E6  
                                 ___fttol 05A4                 ??_ADC_GetConversionResult 0012  
                                 __pcinit 1090                                ??___awtoft 0021  
                              ??___ftpack 0015                                   __ramtop 1000  
                                 __ptext0 12B6                                   __ptext1 1210  
                                 __ptext2 11AE                                   __ptext3 12FC  
                                 __ptext4 1046                                   __ptext5 12C8  
                                 __ptext6 1300                                   __ptext7 1278  
                                 __ptext8 128E                                   __ptext9 1248  
                   _OSCILLATOR_Initialize 12C8                                 _T2CONbits 000FBA  
                      _EUSART1_Initialize 1278                  ??_PIN_MANAGER_Initialize 0010  
                     __size_of_TempUpdate 0020                       PID_Control@newInput 007E  
              __size_of_SYSTEM_Initialize 001E                      end_of_initialization 10C0  
                     ?_EUSART1_Initialize 0001       __size_of_PID_SetControllerDirection 000A  
                           __Lmediumconst 0000                                 _PIDConfig 008D  
            __end_of_ADC_IsConversionDone 12E2                     __size_of_InitHardware 009C  
                                 postinc0 000FEE                      _TempAcquisition$1502 008B  
                    ??_EUSART1_Initialize 0010                                 _TMR2_Tick 09DA  
                     _ADC_StartConversion 1304                      __end_of_PID_SetPoint 1248  
                            _InitHardware 0E96                               ___ftdiv@exp 002F  
                             ___ftmul@exp 003A                      ?_ADC_StartConversion 0001  
            __end_of_INTERRUPT_Initialize 1304      __end_of_TMR2_DefaultInterruptHandler 1310  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 130E  
                          __end_of___ftge 0FC2                            __end_of___wmul 1188  
                       __size_of_TMR2_ISR 0020                      TempAcquisition@TEMPH 004F  
                    TempAcquisition@TEMPL 004E                            _ADC_Initialize 1248  
                              ?_TMR2_Tick 0001                    ?_OSCILLATOR_Initialize 0001  
                        PID_Control@error 0088                  __size_of_TempAcquisition 00CC  
                     start_initialization 1090           __size_of_PIN_MANAGER_Initialize 004A  
                       __size_of_MainTask 0006                            TMR2_Tick@State 0042  
                            ??_TempUpdate 0040        __end_of_PID_SetControllerDirection 12F6  
              _PID_SetControllerDirection 12EC                     ??_ADC_StartConversion 0010  
                                ??___ftge 0028                                  ??___wmul 0014  
                  __end_of_ADC_Initialize 1260                               __pdataBANK0 00B5  
                                ?_ADC_ISR 0001             ?_TMR2_DefaultInterruptHandler 0001  
                       __size_of___awtoft 0038                         __size_of___ftpack 00AE  
                  __size_of_TMR2_CallBack 0026                               __pbssCOMRAM 0040  
                           __pcstackBANK0 0060                      _ADC_IsConversionDone 12D6  
                __size_of_TMR2_Initialize 0022                        __end_of_TempUpdate 11F0  
                __size_of_CCP5_Initialize 0014                                 __pnvBANK0 00B3  
                           ??_PID_Control 0080                    _PIN_MANAGER_Initialize 1046  
                               __pintcode 0008                             ??_PID_SetMode 002D  
                       _ADC_SelectChannel 1260                                  ?___awdiv 0016  
                                ?___ftadd 0063                                  ?___ftdiv 0022  
                                ?___ftneg 0060                                  ?___ftmul 0031  
                        _PID_Control$1503 0085                                  ?___fttol 006F  
                         ?_ADC_Initialize 0001                        ?_ADC_SelectChannel 0001  
            ??_INTERRUPT_InterruptManager 0002                          __CFG_PRICLKEN$ON 000000  
                             ??_TMR2_Tick 0001              __size_of_PID_SetOutputLimits 00FA  
                                _BAUDCON1 000FB8                       ??_ADC_SelectChannel 0010  
                   ?_ADC_IsConversionDone 0001                                 _lastInput 009D  
                   __size_of_PID_SetPoint 001A                         TMR2_Tick@Hard_OFF 0044  
                       ??_TempAcquisition 0040                      _INTERRUPT_Initialize 1300  
                          ___wmul@product 0014                                  _LATAbits 000F89  
                                _LATDbits 000F8C                             _TMR2_CallBack 1188  
                                _PIE1bits 000F9D                  __size_of_TMR2_StartTimer 0004  
               __end_of_ADC_SelectChannel 1278       __size_of_INTERRUPT_InterruptManager 0092  
                                i2u208_40 1202                                  i2u180_40 0A44  
                                i2u181_40 0A54                                  i2u191_48 1198  
                                i2u177_40 09F8                                  _PIR1bits 000F9E  
                                i2u177_46 09FA                                  i2u186_40 0AC2  
                                i2u178_40 0A18                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR2_ISR 11F0  
                            _PID_SetPoint 122E                       __end_of_PID_Control 033C  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
                       ___wmul@multiplier 0010                       __end_of_PID_SetMode 1162  
                ADC_SelectChannel@channel 0011                   __size_of_PID_Initialize 00BC  
          ??_TMR2_DefaultInterruptHandler 0001         __size_of_TMR2_SetInterruptHandler 000A  
               ?_TMR2_SetInterruptHandler 0010                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                                  _MainTask 12F6  
                       ??_TMR2_Initialize 0012                            ?_TMR2_CallBack 0001  
                       ??_CCP5_Initialize 0010                                  __Hrparam 0000  
                                __Lrparam 0000                  ?_ADC_GetConversionResult 0010  
                      __CFG_BOREN$SBORDIS 000000                   __size_of_PID_SetTunings 0104  
                       __CFG_P2BMX$PORTD2 000000                   ??_OSCILLATOR_Initialize 0010  
                        __size_of___awdiv 0084                          __size_of___ftadd 0268  
                        __size_of___ftdiv 00E6                          __size_of___ftneg 0030  
                        __size_of___ftmul 00F4                          __size_of___fttol 0144  
             __size_of_EUSART1_Initialize 0016                                  ___awtoft 10CE  
                                ___ftpack 0DE8                    ??_ADC_IsConversionDone 0010  
                                __ptext10 12F6                                  __ptext11 11D0  
                                __ptext20 0E96                                  __ptext12 0BB2  
                                __ptext21 12E2                                  __ptext13 1162  
                                __ptext30 0C7E                                  __ptext22 06E8  
                                __ptext14 0FC2                                  __ptext31 0F32  
                                __ptext23 1106                                  __ptext15 009E  
                                __ptext40 130E                                  __ptext32 10CE  
                                __ptext24 0D3A                                  __ptext16 05A4  
                                __ptext41 09DA                                  __ptext33 0DE8  
                                __ptext25 08E6                                  __ptext17 033C  
                                __ptext42 1308                                  __ptext34 12EC  
                                __ptext26 0ACC                                  __ptext18 12D6  
                                __ptext43 0000                                  __ptext35 1304  
                                __ptext27 122E                                  __ptext19 12A2  
                                __ptext36 1260                                  __ptext28 07EC  
                                __ptext29 1136                                  __ptext38 11F0  
                                __ptext39 1188                             __size_of_main 0012  
              __size_of_ADC_SelectChannel 0018                               _PID_Control 009E  
             ?_PID_SetControllerDirection 0010                               _PID_SetMode 1136  
                                int$flags 0050                         ??_TMR2_StartTimer 0010  
      __end_of_INTERRUPT_InterruptManager 009A                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                              TMR2_Tick@min 0048  
                            TMR2_Tick@seg 004A                    ??_INTERRUPT_Initialize 0010  
                       _PID_SetSampleTime 0D3A                                  intlevel2 0000  
                         ??_TMR2_CallBack 0002                        ?_PID_SetSampleTime 0060  
             __end_of_ADC_StartConversion 1308                   ?_PIN_MANAGER_Initialize 0001  
         __end_of_ADC_GetConversionResult 12B6                       _PID_SetOutputLimits 07EC  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 0010  
                     ??_PID_SetSampleTime 0040                                _TEMP_FLOAT 00A3  
                         _TempAcquisition 0BB2                            _PID_Initialize 0C7E  
                    ?_PID_SetOutputLimits 002B                     TMR2_ISR@CountCallBack 004C  
               __end_of_PID_SetSampleTime 0DE8                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 1090                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 00B3             PID_SetTunings@SampleTimeInSec 006C  
                          _PID_SetTunings 06E8  
