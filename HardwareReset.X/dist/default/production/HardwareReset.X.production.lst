

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jan 26 11:26:21 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 1.41
    62                           ; Generated 25/01/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F46K22 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataCOMRAM
    97  00136E                     __pidataCOMRAM:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _SampleTime
   101  00136E  03E8               	dw	1000
   102                           
   103                           	psect	nvBANK0
   104  0000B7                     __pnvBANK0:
   105                           	opt stack 0
   106  0000B7                     _TMR2_InterruptHandler:
   107                           	opt stack 0
   108  0000B7                     	ds	2
   109  0000                     _CCPR5H	set	3926
   110  0000                     _CCPR5L	set	3925
   111  0000                     _CCP5CON	set	3924
   112  0000                     _ANSELA	set	3896
   113  0000                     _ANSELE	set	3900
   114  0000                     _ANSELD	set	3899
   115  0000                     _ANSELB	set	3897
   116  0000                     _ANSELC	set	3898
   117  0000                     _LATAbits	set	3977
   118  0000                     _LATDbits	set	3980
   119  0000                     _TXREG1	set	4013
   120  0000                     _RCREG1	set	4014
   121  0000                     _RCSTA1bits	set	4011
   122  0000                     _SPBRGH1	set	4016
   123  0000                     _SPBRG1	set	4015
   124  0000                     _TXSTA1	set	4012
   125  0000                     _RCSTA1	set	4011
   126  0000                     _BAUDCON1	set	4024
   127  0000                     _ADCON0bits	set	4034
   128  0000                     _ADRESH	set	4036
   129  0000                     _ADRESL	set	4035
   130  0000                     _ADCON2	set	4032
   131  0000                     _ADCON1	set	4033
   132  0000                     _ADCON0	set	4034
   133  0000                     _INTCON2bits	set	4081
   134  0000                     _WPUB	set	3937
   135  0000                     _TRISD	set	3989
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISB	set	3987
   138  0000                     _TRISA	set	3986
   139  0000                     _TRISE	set	3990
   140  0000                     _LATC	set	3979
   141  0000                     _LATB	set	3978
   142  0000                     _LATA	set	3977
   143  0000                     _LATD	set	3980
   144  0000                     _LATE	set	3981
   145  0000                     _INTCONbits	set	4082
   146  0000                     _RCONbits	set	4048
   147  0000                     _OSCTUNE	set	3995
   148  0000                     _OSCCON2	set	4050
   149  0000                     _OSCCON	set	4051
   150  0000                     _T2CONbits	set	4026
   151  0000                     _PIE1bits	set	3997
   152  0000                     _PIR1bits	set	3998
   153  0000                     _TMR2	set	4028
   154  0000                     _PR2	set	4027
   155  0000                     _T2CON	set	4026
   156                           
   157                           ; #config settings
   158  0000                     
   159                           	psect	cinit
   160  0010D6                     __pcinit:
   161                           	opt stack 0
   162  0010D6                     start_initialization:
   163                           	opt stack 0
   164  0010D6                     __initialization:
   165                           	opt stack 0
   166                           
   167                           ; Initialize objects allocated to COMRAM (2 bytes)
   168                           ; load TBLPTR registers with __pidataCOMRAM
   169  0010D6  0E6E               	movlw	low __pidataCOMRAM
   170  0010D8  6EF6               	movwf	tblptrl,c
   171  0010DA  0E13               	movlw	high __pidataCOMRAM
   172  0010DC  6EF7               	movwf	tblptrh,c
   173  0010DE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   174  0010E0  6EF8               	movwf	tblptru,c
   175  0010E2  0009               	tblrd		*+	;fetch initializer
   176  0010E4  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   177  0010E8  0009               	tblrd		*+	;fetch initializer
   178  0010EA  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   179                           
   180                           ; Clear objects allocated to BANK0 (42 bytes)
   181  0010EE  EE00  F08D         	lfsr	0,__pbssBANK0
   182  0010F2  0E2A               	movlw	42
   183  0010F4                     clear_0:
   184  0010F4  6AEE               	clrf	postinc0,c
   185  0010F6  06E8               	decf	wreg,f,c
   186  0010F8  E1FD               	bnz	clear_0
   187                           
   188                           ; Clear objects allocated to COMRAM (14 bytes)
   189  0010FA  EE00  F040         	lfsr	0,__pbssCOMRAM
   190  0010FE  0E0E               	movlw	14
   191  001100                     clear_1:
   192  001100  6AEE               	clrf	postinc0,c
   193  001102  06E8               	decf	wreg,f,c
   194  001104  E1FD               	bnz	clear_1
   195  001106                     end_of_initialization:
   196                           	opt stack 0
   197  001106                     __end_of__initialization:
   198                           	opt stack 0
   199  001106  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   200  001108  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   201  00110A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202  00110C  6EF8               	movwf	tblptru,c
   203  00110E  0100               	movlb	0
   204  001110  EF8C  F009         	goto	_main	;jump to C main() function
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	bssCOMRAM
   213  000040                     __pbssCOMRAM:
   214                           	opt stack 0
   215  000040                     TMR2_Tick@PeltierCounter:
   216                           	opt stack 0
   217  000040                     	ds	2
   218  000042                     TMR2_Tick@State:
   219                           	opt stack 0
   220  000042                     	ds	2
   221  000044                     TMR2_Tick@Hard_OFF:
   222                           	opt stack 0
   223  000044                     	ds	2
   224  000046                     TMR2_Tick@Hard_ON:
   225                           	opt stack 0
   226  000046                     	ds	2
   227  000048                     TMR2_Tick@min:
   228                           	opt stack 0
   229  000048                     	ds	2
   230  00004A                     TMR2_Tick@seg:
   231                           	opt stack 0
   232  00004A                     	ds	2
   233  00004C                     TMR2_ISR@CountCallBack:
   234                           	opt stack 0
   235  00004C                     	ds	2
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           
   243                           	psect	dataCOMRAM
   244  00004E                     __pdataCOMRAM:
   245                           	opt stack 0
   246  00004E                     _SampleTime:
   247                           	opt stack 0
   248  00004E                     	ds	2
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           
   256                           	psect	bssBANK0
   257  00008D                     __pbssBANK0:
   258                           	opt stack 0
   259  00008D                     _PIDConfig:
   260                           	opt stack 0
   261  00008D                     	ds	16
   262  00009D                     _lastInput:
   263                           	opt stack 0
   264  00009D                     	ds	3
   265  0000A0                     _ITerm:
   266                           	opt stack 0
   267  0000A0                     	ds	3
   268  0000A3                     _TEMP_FLOAT:
   269                           	opt stack 0
   270  0000A3                     	ds	3
   271  0000A6                     _controllerDirection:
   272                           	opt stack 0
   273  0000A6                     	ds	2
   274  0000A8                     _Output:
   275                           	opt stack 0
   276  0000A8                     	ds	2
   277  0000AA                     _Input:
   278                           	opt stack 0
   279  0000AA                     	ds	2
   280  0000AC                     TempAcquisition@TEMPL:
   281                           	opt stack 0
   282  0000AC                     	ds	2
   283  0000AE                     TempAcquisition@TEMPH:
   284                           	opt stack 0
   285  0000AE                     	ds	2
   286  0000B0                     _DutyPeltier:
   287                           	opt stack 0
   288  0000B0                     	ds	2
   289  0000B2                     _TempCounter:
   290                           	opt stack 0
   291  0000B2                     	ds	2
   292  0000B4                     _inAuto:
   293                           	opt stack 0
   294  0000B4                     	ds	1
   295  0000B5                     TempAcquisition@TEMPERATURA:
   296                           	opt stack 0
   297  0000B5                     	ds	2
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           
   305                           	psect	cstackBANK0
   306  000060                     __pcstackBANK0:
   307                           	opt stack 0
   308  000060                     ?___ftneg:
   309                           	opt stack 0
   310  000060                     PID_SetSampleTime@newSampleTime:
   311                           	opt stack 0
   312  000060                     ___ftneg@f1:
   313                           	opt stack 0
   314                           
   315                           ; 3 bytes @ 0x0
   316  000060                     	ds	2
   317  000062                     PID_SetSampleTime@ratio:
   318                           	opt stack 0
   319                           
   320                           ; 3 bytes @ 0x2
   321  000062                     	ds	1
   322  000063                     ?___ftadd:
   323                           	opt stack 0
   324  000063                     PID_SetTunings@Kp:
   325                           	opt stack 0
   326  000063                     ___ftadd@f1:
   327                           	opt stack 0
   328                           
   329                           ; 3 bytes @ 0x3
   330  000063                     	ds	3
   331  000066                     PID_SetTunings@Ki:
   332                           	opt stack 0
   333  000066                     ___ftadd@f2:
   334                           	opt stack 0
   335                           
   336                           ; 3 bytes @ 0x6
   337  000066                     	ds	3
   338  000069                     ??___ftadd:
   339  000069                     PID_SetTunings@Kd:
   340                           	opt stack 0
   341                           
   342                           ; 3 bytes @ 0x9
   343  000069                     	ds	3
   344  00006C                     ___ftadd@sign:
   345                           	opt stack 0
   346  00006C                     PID_SetTunings@SampleTimeInSec:
   347                           	opt stack 0
   348                           
   349                           ; 3 bytes @ 0xC
   350  00006C                     	ds	1
   351  00006D                     ___ftadd@exp2:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0xD
   355  00006D                     	ds	1
   356  00006E                     ___ftadd@exp1:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0xE
   360  00006E                     	ds	1
   361  00006F                     ?___fttol:
   362                           	opt stack 0
   363  00006F                     ___fttol@f1:
   364                           	opt stack 0
   365                           
   366                           ; 3 bytes @ 0xF
   367  00006F                     	ds	4
   368  000073                     ??___fttol:
   369                           
   370                           ; 1 bytes @ 0x13
   371  000073                     	ds	5
   372  000078                     ___fttol@sign1:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x18
   376  000078                     	ds	1
   377  000079                     ___fttol@lval:
   378                           	opt stack 0
   379                           
   380                           ; 4 bytes @ 0x19
   381  000079                     	ds	4
   382  00007D                     ___fttol@exp1:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x1D
   386  00007D                     	ds	1
   387  00007E                     ?_PID_Control:
   388                           	opt stack 0
   389  00007E                     PID_Control@newInput:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x1E
   393  00007E                     	ds	2
   394  000080                     ??_PID_Control:
   395                           
   396                           ; 1 bytes @ 0x20
   397  000080                     	ds	2
   398  000082                     PID_Control@dInput:
   399                           	opt stack 0
   400                           
   401                           ; 3 bytes @ 0x22
   402  000082                     	ds	3
   403  000085                     _PID_Control$1503:
   404                           	opt stack 0
   405                           
   406                           ; 3 bytes @ 0x25
   407  000085                     	ds	3
   408  000088                     PID_Control@error:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0x28
   412  000088                     	ds	3
   413  00008B                     _TempAcquisition$1502:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x2B
   417  00008B                     	ds	2
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           
   425                           	psect	cstackCOMRAM
   426  000001                     __pcstackCOMRAM:
   427                           	opt stack 0
   428  000001                     ??_TMR2_Tick:
   429  000001                     
   430                           ; 1 bytes @ 0x0
   431  000001                     	ds	1
   432  000002                     ??_INTERRUPT_InterruptManager:
   433                           
   434                           ; 1 bytes @ 0x1
   435  000002                     	ds	14
   436  000010                     ??_ADC_SelectChannel:
   437  000010                     ?_ADC_GetConversion:
   438                           	opt stack 0
   439  000010                     ?___wmul:
   440                           	opt stack 0
   441  000010                     ?___ftpack:
   442                           	opt stack 0
   443  000010                     EUSART1_Write@txData:
   444                           	opt stack 0
   445  000010                     TMR2_SetInterruptHandler@InterruptHandler:
   446                           	opt stack 0
   447  000010                     PID_SetControllerDirection@Direction:
   448                           	opt stack 0
   449  000010                     ___wmul@multiplier:
   450                           	opt stack 0
   451  000010                     ___ftpack@arg:
   452                           	opt stack 0
   453                           
   454                           ; 3 bytes @ 0xF
   455  000010                     	ds	1
   456  000011                     ADC_SelectChannel@channel:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x10
   460  000011                     	ds	1
   461  000012                     ??_ADC_GetConversion:
   462  000012                     ___wmul@multiplicand:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x11
   466  000012                     	ds	1
   467  000013                     ___ftpack@exp:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x12
   471  000013                     	ds	1
   472  000014                     ADC_GetConversion@channel:
   473                           	opt stack 0
   474  000014                     ___ftpack@sign:
   475                           	opt stack 0
   476  000014                     ___wmul@product:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x13
   480  000014                     	ds	1
   481  000015                     ??___ftpack:
   482                           
   483                           ; 1 bytes @ 0x14
   484  000015                     	ds	1
   485  000016                     ?___awdiv:
   486                           	opt stack 0
   487  000016                     ___awdiv@dividend:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x15
   491  000016                     	ds	2
   492  000018                     ___awdiv@divisor:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x17
   496  000018                     	ds	2
   497  00001A                     ___awdiv@counter:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x19
   501  00001A                     	ds	1
   502  00001B                     ___awdiv@sign:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1A
   506  00001B                     	ds	1
   507  00001C                     ___awdiv@quotient:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x1B
   511  00001C                     	ds	2
   512  00001E                     ?___awtoft:
   513                           	opt stack 0
   514  00001E                     ___awtoft@c:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x1D
   518  00001E                     	ds	3
   519  000021                     ___awtoft@sign:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x20
   523  000021                     	ds	1
   524  000022                     ?___ftdiv:
   525                           	opt stack 0
   526  000022                     PID_SetPoint@newSetPoint:
   527                           	opt stack 0
   528  000022                     ___ftdiv@f1:
   529                           	opt stack 0
   530  000022                     ___ftge@ff1:
   531                           	opt stack 0
   532                           
   533                           ; 3 bytes @ 0x21
   534  000022                     	ds	2
   535  000024                     
   536                           ; 1 bytes @ 0x23
   537  000024                     	ds	1
   538  000025                     ___ftdiv@f2:
   539                           	opt stack 0
   540  000025                     ___ftge@ff2:
   541                           	opt stack 0
   542                           
   543                           ; 3 bytes @ 0x24
   544  000025                     	ds	3
   545  000028                     ??___ftdiv:
   546  000028                     ??___ftge:
   547                           
   548                           ; 1 bytes @ 0x27
   549  000028                     	ds	3
   550  00002B                     ___ftdiv@cntr:
   551                           	opt stack 0
   552  00002B                     PID_SetOutputLimits@Min:
   553                           	opt stack 0
   554  00002B                     PID_SetMode@Mode:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x2A
   558  00002B                     	ds	1
   559  00002C                     ___ftdiv@f3:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0x2B
   563  00002C                     	ds	1
   564  00002D                     PID_SetMode@newAuto:
   565                           	opt stack 0
   566  00002D                     PID_SetOutputLimits@Max:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x2C
   570  00002D                     	ds	2
   571  00002F                     ??_PID_SetOutputLimits:
   572  00002F                     ___ftdiv@exp:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x2E
   576  00002F                     	ds	1
   577  000030                     ___ftdiv@sign:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x2F
   581  000030                     	ds	1
   582  000031                     ?___ftmul:
   583                           	opt stack 0
   584  000031                     ___ftmul@f1:
   585                           	opt stack 0
   586                           
   587                           ; 3 bytes @ 0x30
   588  000031                     	ds	3
   589  000034                     ___ftmul@f2:
   590                           	opt stack 0
   591                           
   592                           ; 3 bytes @ 0x33
   593  000034                     	ds	3
   594  000037                     ??___ftmul:
   595                           
   596                           ; 1 bytes @ 0x36
   597  000037                     	ds	3
   598  00003A                     ___ftmul@exp:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0x39
   602  00003A                     	ds	1
   603  00003B                     ___ftmul@f3_as_product:
   604                           	opt stack 0
   605                           
   606                           ; 3 bytes @ 0x3A
   607  00003B                     	ds	3
   608  00003E                     ___ftmul@cntr:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x3D
   612  00003E                     	ds	1
   613  00003F                     ___ftmul@sign:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x3E
   617  00003F                     	ds	1
   618  000040                     tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           
   625                           ; 1 bytes @ 0x3F
   626 ;;
   627 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   628 ;;
   629 ;; *************** function _main *****************
   630 ;; Defined at:
   631 ;;		line 56 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels required when called:   10
   651 ;; This function calls:
   652 ;;		_InitHardware
   653 ;;		_MainTask
   654 ;;		_SYSTEM_Initialize
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661  001318                     __ptext0:
   662                           	opt stack 0
   663  001318                     _main:
   664                           	opt stack 21
   665                           
   666                           ;main.c: 59: SYSTEM_Initialize();
   667                           
   668                           ;incstack = 0
   669  001318  EC43  F009         	call	_SYSTEM_Initialize	;wreg free
   670                           
   671                           ;main.c: 79: (INTCONbits.GIE = 1);
   672  00131C  8EF2               	bsf	intcon,7,c	;volatile
   673                           
   674                           ;main.c: 82: (INTCONbits.PEIE = 1);
   675  00131E  8CF2               	bsf	intcon,6,c	;volatile
   676                           
   677                           ;main.c: 84: InitHardware();
   678  001320  EC6E  F007         	call	_InitHardware	;wreg free
   679  001324                     l2571:
   680                           
   681                           ;main.c: 94: {
   682                           ;main.c: 95: MainTask();
   683  001324  ECAC  F009         	call	_MainTask	;wreg free
   684  001328  D7FD               	goto	l2571
   685  00132A                     __end_of_main:
   686                           	opt stack 0
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           tblptrl	equ	0xFF6
   690                           tablat	equ	0xFF5
   691                           intcon	equ	0xFF2
   692                           postinc0	equ	0xFEE
   693                           wreg	equ	0xFE8
   694                           
   695 ;; *************** function _SYSTEM_Initialize *****************
   696 ;; Defined at:
   697 ;;		line 111 in file "mcc_generated_files/mcc.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    6
   718 ;; This function calls:
   719 ;;		_ADC_Initialize
   720 ;;		_CCP5_Initialize
   721 ;;		_EUSART1_Initialize
   722 ;;		_INTERRUPT_Initialize
   723 ;;		_OSCILLATOR_Initialize
   724 ;;		_PIN_MANAGER_Initialize
   725 ;;		_TMR2_Initialize
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text1
   732  001286                     __ptext1:
   733                           	opt stack 0
   734  001286                     _SYSTEM_Initialize:
   735                           	opt stack 24
   736                           
   737                           ;mcc.c: 114: INTERRUPT_Initialize();
   738                           
   739                           ;incstack = 0
   740  001286  ECB1  F009         	call	_INTERRUPT_Initialize	;wreg free
   741                           
   742                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   743  00128A  EC46  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   744                           
   745                           ;mcc.c: 116: OSCILLATOR_Initialize();
   746  00128E  EC95  F009         	call	_OSCILLATOR_Initialize	;wreg free
   747                           
   748                           ;mcc.c: 117: TMR2_Initialize();
   749  001292  EC12  F009         	call	_TMR2_Initialize	;wreg free
   750                           
   751                           ;mcc.c: 118: CCP5_Initialize();
   752  001296  EC82  F009         	call	_CCP5_Initialize	;wreg free
   753                           
   754                           ;mcc.c: 119: ADC_Initialize();
   755  00129A  EC5F  F009         	call	_ADC_Initialize	;wreg free
   756                           
   757                           ;mcc.c: 120: EUSART1_Initialize();
   758  00129E  EC77  F009         	call	_EUSART1_Initialize	;wreg free
   759  0012A2  0012               	return		;funcret
   760  0012A4                     __end_of_SYSTEM_Initialize:
   761                           	opt stack 0
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           intcon	equ	0xFF2
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           
   770 ;; *************** function _TMR2_Initialize *****************
   771 ;; Defined at:
   772 ;;		line 65 in file "mcc_generated_files/tmr2.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    5
   793 ;; This function calls:
   794 ;;		_TMR2_SetInterruptHandler
   795 ;;		_TMR2_StartTimer
   796 ;; This function is called by:
   797 ;;		_SYSTEM_Initialize
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text2
   802  001224                     __ptext2:
   803                           	opt stack 0
   804  001224                     _TMR2_Initialize:
   805                           	opt stack 24
   806                           
   807                           ;tmr2.c: 70: T2CON = 0x01;
   808                           
   809                           ;incstack = 0
   810  001224  0E01               	movlw	1
   811  001226  6EBA               	movwf	4026,c	;volatile
   812                           
   813                           ;tmr2.c: 73: PR2 = 0x31;
   814  001228  0E31               	movlw	49
   815  00122A  6EBB               	movwf	4027,c	;volatile
   816                           
   817                           ;tmr2.c: 76: TMR2 = 0x00;
   818  00122C  0E00               	movlw	0
   819  00122E  6EBC               	movwf	4028,c	;volatile
   820                           
   821                           ;tmr2.c: 79: PIR1bits.TMR2IF = 0;
   822  001230  929E               	bcf	3998,1,c	;volatile
   823                           
   824                           ;tmr2.c: 82: PIE1bits.TMR2IE = 1;
   825  001232  829D               	bsf	3997,1,c	;volatile
   826                           
   827                           ;tmr2.c: 85: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
   828  001234  0E70               	movlw	low _TMR2_DefaultInterruptHandler
   829  001236  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   830  001238  0E13               	movlw	high _TMR2_DefaultInterruptHandler
   831  00123A  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   832  00123C  ECA2  F009         	call	_TMR2_SetInterruptHandler	;wreg free
   833                           
   834                           ;tmr2.c: 88: TMR2_StartTimer();
   835  001240  ECAF  F009         	call	_TMR2_StartTimer	;wreg free
   836  001244  0012               	return		;funcret
   837  001246                     __end_of_TMR2_Initialize:
   838                           	opt stack 0
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           intcon	equ	0xFF2
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           
   847 ;; *************** function _TMR2_StartTimer *****************
   848 ;; Defined at:
   849 ;;		line 91 in file "mcc_generated_files/tmr2.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		None
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    4
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_TMR2_Initialize
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text3
   878  00135E                     __ptext3:
   879                           	opt stack 0
   880  00135E                     _TMR2_StartTimer:
   881                           	opt stack 24
   882                           
   883                           ;tmr2.c: 94: T2CONbits.TMR2ON = 1;
   884                           
   885                           ;incstack = 0
   886  00135E  84BA               	bsf	4026,2,c	;volatile
   887  001360  0012               	return		;funcret
   888  001362                     __end_of_TMR2_StartTimer:
   889                           	opt stack 0
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           intcon	equ	0xFF2
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           
   898 ;; *************** function _PIN_MANAGER_Initialize *****************
   899 ;; Defined at:
   900 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    4
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_SYSTEM_Initialize
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text4
   929  00108C                     __ptext4:
   930                           	opt stack 0
   931  00108C                     _PIN_MANAGER_Initialize:
   932                           	opt stack 25
   933                           
   934                           ;pin_manager.c: 56: LATE = 0x00;
   935                           
   936                           ;incstack = 0
   937  00108C  0E00               	movlw	0
   938  00108E  6E8D               	movwf	3981,c	;volatile
   939                           
   940                           ;pin_manager.c: 57: LATD = 0x00;
   941  001090  0E00               	movlw	0
   942  001092  6E8C               	movwf	3980,c	;volatile
   943                           
   944                           ;pin_manager.c: 58: LATA = 0x00;
   945  001094  0E00               	movlw	0
   946  001096  6E89               	movwf	3977,c	;volatile
   947                           
   948                           ;pin_manager.c: 59: LATB = 0x00;
   949  001098  0E00               	movlw	0
   950  00109A  6E8A               	movwf	3978,c	;volatile
   951                           
   952                           ;pin_manager.c: 60: LATC = 0x00;
   953  00109C  0E00               	movlw	0
   954  00109E  6E8B               	movwf	3979,c	;volatile
   955                           
   956                           ;pin_manager.c: 65: TRISE = 0x07;
   957  0010A0  0E07               	movlw	7
   958  0010A2  6E96               	movwf	3990,c	;volatile
   959                           
   960                           ;pin_manager.c: 66: TRISA = 0xEE;
   961  0010A4  0EEE               	movlw	238
   962  0010A6  6E92               	movwf	3986,c	;volatile
   963                           
   964                           ;pin_manager.c: 67: TRISB = 0xFF;
   965  0010A8  6893               	setf	3987,c	;volatile
   966                           
   967                           ;pin_manager.c: 68: TRISC = 0xBF;
   968  0010AA  0EBF               	movlw	191
   969  0010AC  6E94               	movwf	3988,c	;volatile
   970                           
   971                           ;pin_manager.c: 69: TRISD = 0x3F;
   972  0010AE  0E3F               	movlw	63
   973  0010B0  6E95               	movwf	3989,c	;volatile
   974                           
   975                           ;pin_manager.c: 74: ANSELC = 0xBC;
   976  0010B2  0EBC               	movlw	188
   977  0010B4  010F               	movlb	15	; () banked
   978  0010B6  6F3A               	movwf	58,b	;volatile
   979                           
   980                           ;pin_manager.c: 75: ANSELB = 0x3F;
   981  0010B8  0E3F               	movlw	63
   982  0010BA  010F               	movlb	15	; () banked
   983  0010BC  6F39               	movwf	57,b	;volatile
   984                           
   985                           ;pin_manager.c: 76: ANSELD = 0x3F;
   986  0010BE  0E3F               	movlw	63
   987  0010C0  010F               	movlb	15	; () banked
   988  0010C2  6F3B               	movwf	59,b	;volatile
   989                           
   990                           ;pin_manager.c: 77: ANSELE = 0x07;
   991  0010C4  0E07               	movlw	7
   992  0010C6  010F               	movlb	15	; () banked
   993  0010C8  6F3C               	movwf	60,b	;volatile
   994                           
   995                           ;pin_manager.c: 78: ANSELA = 0x2E;
   996  0010CA  0E2E               	movlw	46
   997  0010CC  010F               	movlb	15	; () banked
   998  0010CE  6F38               	movwf	56,b	;volatile
   999                           
  1000                           ; BSR set to: 15
  1001                           ;pin_manager.c: 83: WPUB = 0xFF;
  1002  0010D0  6861               	setf	3937,c	;volatile
  1003                           
  1004                           ; BSR set to: 15
  1005                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1006  0010D2  9EF1               	bcf	intcon2,7,c	;volatile
  1007                           
  1008                           ; BSR set to: 15
  1009  0010D4  0012               	return		;funcret
  1010  0010D6                     __end_of_PIN_MANAGER_Initialize:
  1011                           	opt stack 0
  1012                           tblptru	equ	0xFF8
  1013                           tblptrh	equ	0xFF7
  1014                           tblptrl	equ	0xFF6
  1015                           tablat	equ	0xFF5
  1016                           intcon	equ	0xFF2
  1017                           intcon2	equ	0xFF1
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           
  1021 ;; *************** function _OSCILLATOR_Initialize *****************
  1022 ;; Defined at:
  1023 ;;		line 123 in file "mcc_generated_files/mcc.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;Total ram usage:        0 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    4
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_SYSTEM_Initialize
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text5
  1052  00132A                     __ptext5:
  1053                           	opt stack 0
  1054  00132A                     _OSCILLATOR_Initialize:
  1055                           	opt stack 25
  1056                           
  1057                           ;mcc.c: 126: OSCCON = 0x70;
  1058                           
  1059                           ; BSR set to: 15
  1060                           ;incstack = 0
  1061  00132A  0E70               	movlw	112
  1062  00132C  6ED3               	movwf	4051,c	;volatile
  1063                           
  1064                           ;mcc.c: 128: OSCCON2 = 0x04;
  1065  00132E  0E04               	movlw	4
  1066  001330  6ED2               	movwf	4050,c	;volatile
  1067                           
  1068                           ;mcc.c: 130: OSCTUNE = 0x00;
  1069  001332  0E00               	movlw	0
  1070  001334  6E9B               	movwf	3995,c	;volatile
  1071  001336  0012               	return		;funcret
  1072  001338                     __end_of_OSCILLATOR_Initialize:
  1073                           	opt stack 0
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           intcon	equ	0xFF2
  1079                           intcon2	equ	0xFF1
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           
  1083 ;; *************** function _INTERRUPT_Initialize *****************
  1084 ;; Defined at:
  1085 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		None
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    4
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_SYSTEM_Initialize
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text6
  1114  001362                     __ptext6:
  1115                           	opt stack 0
  1116  001362                     _INTERRUPT_Initialize:
  1117                           	opt stack 25
  1118                           
  1119                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1120                           
  1121                           ;incstack = 0
  1122  001362  9ED0               	bcf	4048,7,c	;volatile
  1123  001364  0012               	return		;funcret
  1124  001366                     __end_of_INTERRUPT_Initialize:
  1125                           	opt stack 0
  1126                           tblptru	equ	0xFF8
  1127                           tblptrh	equ	0xFF7
  1128                           tblptrl	equ	0xFF6
  1129                           tablat	equ	0xFF5
  1130                           intcon	equ	0xFF2
  1131                           intcon2	equ	0xFF1
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           
  1135 ;; *************** function _EUSART1_Initialize *****************
  1136 ;; Defined at:
  1137 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    4
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_SYSTEM_Initialize
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text7
  1166  0012EE                     __ptext7:
  1167                           	opt stack 0
  1168  0012EE                     _EUSART1_Initialize:
  1169                           	opt stack 25
  1170                           
  1171                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1172                           
  1173                           ;incstack = 0
  1174  0012EE  0E08               	movlw	8
  1175  0012F0  6EB8               	movwf	4024,c	;volatile
  1176                           
  1177                           ;eusart1.c: 63: RCSTA1 = 0x80;
  1178  0012F2  0E80               	movlw	128
  1179  0012F4  6EAB               	movwf	4011,c	;volatile
  1180                           
  1181                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1182  0012F6  0E24               	movlw	36
  1183  0012F8  6EAC               	movwf	4012,c	;volatile
  1184                           
  1185                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  1186  0012FA  0EA0               	movlw	160
  1187  0012FC  6EAF               	movwf	4015,c	;volatile
  1188                           
  1189                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  1190  0012FE  0E01               	movlw	1
  1191  001300  6EB0               	movwf	4016,c	;volatile
  1192  001302  0012               	return		;funcret
  1193  001304                     __end_of_EUSART1_Initialize:
  1194                           	opt stack 0
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           intcon	equ	0xFF2
  1200                           intcon2	equ	0xFF1
  1201                           postinc0	equ	0xFEE
  1202                           wreg	equ	0xFE8
  1203                           
  1204 ;; *************** function _CCP5_Initialize *****************
  1205 ;; Defined at:
  1206 ;;		line 57 in file "mcc_generated_files/ccp5.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;Total ram usage:        0 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    4
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_SYSTEM_Initialize
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text8
  1235  001304                     __ptext8:
  1236                           	opt stack 0
  1237  001304                     _CCP5_Initialize:
  1238                           	opt stack 25
  1239                           
  1240                           ;ccp5.c: 60: CCP5CON = 0x00;
  1241                           
  1242                           ;incstack = 0
  1243  001304  0E00               	movlw	0
  1244  001306  010F               	movlb	15	; () banked
  1245  001308  6F54               	movwf	84,b	;volatile
  1246                           
  1247                           ;ccp5.c: 62: CCPR5L = 0x00;
  1248  00130A  0E00               	movlw	0
  1249  00130C  010F               	movlb	15	; () banked
  1250  00130E  6F55               	movwf	85,b	;volatile
  1251                           
  1252                           ;ccp5.c: 64: CCPR5H = 0x00;
  1253  001310  0E00               	movlw	0
  1254  001312  010F               	movlb	15	; () banked
  1255  001314  6F56               	movwf	86,b	;volatile
  1256                           
  1257                           ; BSR set to: 15
  1258  001316  0012               	return		;funcret
  1259  001318                     __end_of_CCP5_Initialize:
  1260                           	opt stack 0
  1261                           tblptru	equ	0xFF8
  1262                           tblptrh	equ	0xFF7
  1263                           tblptrl	equ	0xFF6
  1264                           tablat	equ	0xFF5
  1265                           intcon	equ	0xFF2
  1266                           intcon2	equ	0xFF1
  1267                           postinc0	equ	0xFEE
  1268                           wreg	equ	0xFE8
  1269                           
  1270 ;; *************** function _ADC_Initialize *****************
  1271 ;; Defined at:
  1272 ;;		line 58 in file "mcc_generated_files/adc.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;Total ram usage:        0 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    4
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_SYSTEM_Initialize
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text9
  1301  0012BE                     __ptext9:
  1302                           	opt stack 0
  1303  0012BE                     _ADC_Initialize:
  1304                           	opt stack 25
  1305                           
  1306                           ;adc.c: 63: ADCON0 = 0x01;
  1307                           
  1308                           ; BSR set to: 15
  1309                           ;incstack = 0
  1310  0012BE  0E01               	movlw	1
  1311  0012C0  6EC2               	movwf	4034,c	;volatile
  1312                           
  1313                           ;adc.c: 66: ADCON1 = 0x00;
  1314  0012C2  0E00               	movlw	0
  1315  0012C4  6EC1               	movwf	4033,c	;volatile
  1316                           
  1317                           ;adc.c: 69: ADCON2 = 0x0E;
  1318  0012C6  0E0E               	movlw	14
  1319  0012C8  6EC0               	movwf	4032,c	;volatile
  1320                           
  1321                           ;adc.c: 72: ADRESL = 0x00;
  1322  0012CA  0E00               	movlw	0
  1323  0012CC  6EC3               	movwf	4035,c	;volatile
  1324                           
  1325                           ;adc.c: 75: ADRESH = 0x00;
  1326  0012CE  0E00               	movlw	0
  1327  0012D0  6EC4               	movwf	4036,c	;volatile
  1328                           
  1329                           ;adc.c: 78: PIE1bits.ADIE = 1;
  1330  0012D2  8C9D               	bsf	3997,6,c	;volatile
  1331  0012D4  0012               	return		;funcret
  1332  0012D6                     __end_of_ADC_Initialize:
  1333                           	opt stack 0
  1334                           tblptru	equ	0xFF8
  1335                           tblptrh	equ	0xFF7
  1336                           tblptrl	equ	0xFF6
  1337                           tablat	equ	0xFF5
  1338                           intcon	equ	0xFF2
  1339                           intcon2	equ	0xFF1
  1340                           postinc0	equ	0xFEE
  1341                           wreg	equ	0xFE8
  1342                           
  1343 ;; *************** function _MainTask *****************
  1344 ;; Defined at:
  1345 ;;		line 42 in file "tasks.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    9
  1366 ;; This function calls:
  1367 ;;		_TempUpdate
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text10
  1374  001358                     __ptext10:
  1375                           	opt stack 0
  1376  001358                     _MainTask:
  1377                           	opt stack 21
  1378                           
  1379                           ;tasks.c: 44: TempUpdate();
  1380                           
  1381                           ;incstack = 0
  1382  001358  EC23  F009         	call	_TempUpdate	;wreg free
  1383  00135C  0012               	return		;funcret
  1384  00135E                     __end_of_MainTask:
  1385                           	opt stack 0
  1386                           tblptru	equ	0xFF8
  1387                           tblptrh	equ	0xFF7
  1388                           tblptrl	equ	0xFF6
  1389                           tablat	equ	0xFF5
  1390                           intcon	equ	0xFF2
  1391                           intcon2	equ	0xFF1
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           
  1395 ;; *************** function _TempUpdate *****************
  1396 ;; Defined at:
  1397 ;;		line 109 in file "tasks.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    8
  1418 ;; This function calls:
  1419 ;;		_TempAcquisition
  1420 ;; This function is called by:
  1421 ;;		_MainTask
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text11
  1426  001246                     __ptext11:
  1427                           	opt stack 0
  1428  001246                     _TempUpdate:
  1429                           	opt stack 21
  1430                           
  1431                           ;tasks.c: 111: if (TempCounter > 10*10*10*1)
  1432                           
  1433                           ;incstack = 0
  1434  001246  0EE9               	movlw	233
  1435  001248  0100               	movlb	0	; () banked
  1436  00124A  5DB2               	subwf	_TempCounter& (0+255),w,b
  1437  00124C  0E03               	movlw	3
  1438  00124E  0100               	movlb	0	; () banked
  1439  001250  59B3               	subwfb	(_TempCounter+1)& (0+255),w,b
  1440  001252  A0D8               	btfss	status,0,c
  1441  001254  0012               	return	
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;tasks.c: 112: {
  1445                           ;tasks.c: 113: TempAcquisition();
  1446  001256  EC74  F003         	call	_TempAcquisition	;wreg free
  1447                           
  1448                           ;tasks.c: 114: TempCounter = 0;
  1449  00125A  0E00               	movlw	0
  1450  00125C  0100               	movlb	0	; () banked
  1451  00125E  6FB3               	movwf	(_TempCounter+1)& (0+255),b
  1452  001260  0E00               	movlw	0
  1453  001262  6FB2               	movwf	_TempCounter& (0+255),b
  1454  001264  0012               	return	
  1455  001266                     __end_of_TempUpdate:
  1456                           	opt stack 0
  1457                           tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           intcon	equ	0xFF2
  1462                           intcon2	equ	0xFF1
  1463                           postinc0	equ	0xFEE
  1464                           wreg	equ	0xFE8
  1465                           status	equ	0xFD8
  1466                           
  1467 ;; *************** function _TempAcquisition *****************
  1468 ;; Defined at:
  1469 ;;		line 117 in file "tasks.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;Total ram usage:        2 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    7
  1490 ;; This function calls:
  1491 ;;		_ADC_GetConversion
  1492 ;;		_EUSART1_Write
  1493 ;;		_PID_Control
  1494 ;;		___awdiv
  1495 ;;		___awtoft
  1496 ;;		___ftdiv
  1497 ;;		___ftmul
  1498 ;;		___fttol
  1499 ;;		___wmul
  1500 ;; This function is called by:
  1501 ;;		_TempUpdate
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text12
  1506  0006E8                     __ptext12:
  1507                           	opt stack 0
  1508  0006E8                     _TempAcquisition:
  1509                           	opt stack 21
  1510                           
  1511                           ;tasks.c: 119: static uint16_t TEMPERATURA=0;
  1512                           ;tasks.c: 120: static uint16_t TEMPH=0;
  1513                           ;tasks.c: 121: static uint16_t TEMPL=0;
  1514                           ;tasks.c: 123: TEMPERATURA = ADC_GetConversion(TEMP_SENSOR);
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;incstack = 0
  1518  0006E8  0E02               	movlw	2
  1519  0006EA  ECA6  F008         	call	_ADC_GetConversion
  1520  0006EE  C010  F0B5         	movff	?_ADC_GetConversion,TempAcquisition@TEMPERATURA
  1521  0006F2  C011  F0B6         	movff	?_ADC_GetConversion+1,TempAcquisition@TEMPERATURA+1
  1522                           
  1523                           ;tasks.c: 124: TEMP_FLOAT = (((int)(TEMPERATURA))*5)/1024;
  1524  0006F6  0E04               	movlw	4
  1525  0006F8  6E19               	movwf	___awdiv@divisor+1,c
  1526  0006FA  0E00               	movlw	0
  1527  0006FC  6E18               	movwf	___awdiv@divisor,c
  1528  0006FE  C0B5  F010         	movff	TempAcquisition@TEMPERATURA,___wmul@multiplier
  1529  000702  C0B6  F011         	movff	TempAcquisition@TEMPERATURA+1,___wmul@multiplier+1
  1530  000706  0E00               	movlw	0
  1531  000708  6E13               	movwf	___wmul@multiplicand+1,c
  1532  00070A  0E05               	movlw	5
  1533  00070C  6E12               	movwf	___wmul@multiplicand,c
  1534  00070E  ECEC  F008         	call	___wmul	;wreg free
  1535  000712  C010  F016         	movff	?___wmul,___awdiv@dividend
  1536  000716  C011  F017         	movff	?___wmul+1,___awdiv@dividend+1
  1537  00071A  EC04  F008         	call	___awdiv	;wreg free
  1538  00071E  C016  F01E         	movff	?___awdiv,___awtoft@c
  1539  000722  C017  F01F         	movff	?___awdiv+1,___awtoft@c+1
  1540  000726  EC8A  F008         	call	___awtoft	;wreg free
  1541  00072A  C01E  F0A3         	movff	?___awtoft,_TEMP_FLOAT
  1542  00072E  C01F  F0A4         	movff	?___awtoft+1,_TEMP_FLOAT+1
  1543  000732  C020  F0A5         	movff	?___awtoft+2,_TEMP_FLOAT+2
  1544                           
  1545                           ;tasks.c: 125: TEMP_FLOAT = (TEMP_FLOAT/0.08)*100;
  1546  000736  0ED7               	movlw	215
  1547  000738  6E25               	movwf	___ftdiv@f2,c
  1548  00073A  0EA3               	movlw	163
  1549  00073C  6E26               	movwf	___ftdiv@f2+1,c
  1550  00073E  0E3D               	movlw	61
  1551  000740  6E27               	movwf	___ftdiv@f2+2,c
  1552  000742  C0A3  F022         	movff	_TEMP_FLOAT,___ftdiv@f1
  1553  000746  C0A4  F023         	movff	_TEMP_FLOAT+1,___ftdiv@f1+1
  1554  00074A  C0A5  F024         	movff	_TEMP_FLOAT+2,___ftdiv@f1+2
  1555  00074E  ECEF  F005         	call	___ftdiv	;wreg free
  1556  000752  C022  F031         	movff	?___ftdiv,___ftmul@f1
  1557  000756  C023  F032         	movff	?___ftdiv+1,___ftmul@f1+1
  1558  00075A  C024  F033         	movff	?___ftdiv+2,___ftmul@f1+2
  1559  00075E  0E00               	movlw	0
  1560  000760  6E34               	movwf	___ftmul@f2,c
  1561  000762  0EC8               	movlw	200
  1562  000764  6E35               	movwf	___ftmul@f2+1,c
  1563  000766  0E42               	movlw	66
  1564  000768  6E36               	movwf	___ftmul@f2+2,c
  1565  00076A  ECFC  F004         	call	___ftmul	;wreg free
  1566  00076E  C031  F0A3         	movff	?___ftmul,_TEMP_FLOAT
  1567  000772  C032  F0A4         	movff	?___ftmul+1,_TEMP_FLOAT+1
  1568  000776  C033  F0A5         	movff	?___ftmul+2,_TEMP_FLOAT+2
  1569                           
  1570                           ;tasks.c: 127: DutyPeltier = PID_Control((int)(TEMP_FLOAT));;
  1571  00077A  C0A3  F06F         	movff	_TEMP_FLOAT,___fttol@f1
  1572  00077E  C0A4  F070         	movff	_TEMP_FLOAT+1,___fttol@f1+1
  1573  000782  C0A5  F071         	movff	_TEMP_FLOAT+2,___fttol@f1+2
  1574  000786  ECD2  F002         	call	___fttol	;wreg free
  1575  00078A  C06F  F08B         	movff	?___fttol,_TempAcquisition$1502
  1576  00078E  C070  F08C         	movff	?___fttol+1,_TempAcquisition$1502+1
  1577                           
  1578                           ;tasks.c: 127: DutyPeltier = PID_Control((int)(TEMP_FLOAT));;
  1579  000792  C08B  F07E         	movff	_TempAcquisition$1502,PID_Control@newInput
  1580  000796  C08C  F07F         	movff	_TempAcquisition$1502+1,PID_Control@newInput+1
  1581  00079A  EC4F  F000         	call	_PID_Control	;wreg free
  1582  00079E  C07E  F0B0         	movff	?_PID_Control,_DutyPeltier
  1583  0007A2  C07F  F0B1         	movff	?_PID_Control+1,_DutyPeltier+1
  1584                           
  1585                           ;tasks.c: 129: TEMPH = 0x00FF*TEMPERATURA;
  1586  0007A6  C0B5  F010         	movff	TempAcquisition@TEMPERATURA,___wmul@multiplier
  1587  0007AA  C0B6  F011         	movff	TempAcquisition@TEMPERATURA+1,___wmul@multiplier+1
  1588  0007AE  0E00               	movlw	0
  1589  0007B0  6E13               	movwf	___wmul@multiplicand+1,c
  1590  0007B2  6812               	setf	___wmul@multiplicand,c
  1591  0007B4  ECEC  F008         	call	___wmul	;wreg free
  1592  0007B8  C010  F0AE         	movff	?___wmul,TempAcquisition@TEMPH
  1593  0007BC  C011  F0AF         	movff	?___wmul+1,TempAcquisition@TEMPH+1
  1594                           
  1595                           ;tasks.c: 130: TEMPL = (0xFF00*TEMPERATURA)>>8;
  1596  0007C0  C0B5  F010         	movff	TempAcquisition@TEMPERATURA,___wmul@multiplier
  1597  0007C4  C0B6  F011         	movff	TempAcquisition@TEMPERATURA+1,___wmul@multiplier+1
  1598  0007C8  0EFF               	movlw	255
  1599  0007CA  6E13               	movwf	___wmul@multiplicand+1,c
  1600  0007CC  0E00               	movlw	0
  1601  0007CE  6E12               	movwf	___wmul@multiplicand,c
  1602  0007D0  ECEC  F008         	call	___wmul	;wreg free
  1603  0007D4  5011               	movf	?___wmul+1,w,c
  1604  0007D6  0100               	movlb	0	; () banked
  1605  0007D8  6FAC               	movwf	TempAcquisition@TEMPL& (0+255),b
  1606  0007DA  6BAD               	clrf	(TempAcquisition@TEMPL+1)& (0+255),b
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;tasks.c: 132: EUSART1_Write(1);
  1610  0007DC  0E01               	movlw	1
  1611  0007DE  EC9C  F009         	call	_EUSART1_Write
  1612                           
  1613                           ;tasks.c: 133: EUSART1_Write(TEMPL);
  1614  0007E2  0100               	movlb	0	; () banked
  1615  0007E4  51AC               	movf	TempAcquisition@TEMPL& (0+255),w,b
  1616  0007E6  EC9C  F009         	call	_EUSART1_Write
  1617                           
  1618                           ;tasks.c: 134: EUSART1_Write(TEMPH);
  1619  0007EA  0100               	movlb	0	; () banked
  1620  0007EC  51AE               	movf	TempAcquisition@TEMPH& (0+255),w,b
  1621  0007EE  EC9C  F009         	call	_EUSART1_Write
  1622                           
  1623                           ;tasks.c: 135: EUSART1_Write(1);
  1624  0007F2  0E01               	movlw	1
  1625  0007F4  EC9C  F009         	call	_EUSART1_Write
  1626  0007F8  0012               	return		;funcret
  1627  0007FA                     __end_of_TempAcquisition:
  1628                           	opt stack 0
  1629                           tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           intcon	equ	0xFF2
  1634                           intcon2	equ	0xFF1
  1635                           postinc0	equ	0xFEE
  1636                           wreg	equ	0xFE8
  1637                           status	equ	0xFD8
  1638                           
  1639 ;; *************** function ___wmul *****************
  1640 ;; Defined at:
  1641 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\Umul16.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  multiplier      2   15[COMRAM] unsigned int 
  1644 ;;  multiplicand    2   17[COMRAM] unsigned int 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  product         2   19[COMRAM] unsigned int 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  2   15[COMRAM] unsigned int 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, prodl, prodh
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1656 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;Total ram usage:        6 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    4
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_TempAcquisition
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text13
  1671  0011D8                     __ptext13:
  1672                           	opt stack 0
  1673  0011D8                     ___wmul:
  1674                           	opt stack 23
  1675                           
  1676                           ;incstack = 0
  1677  0011D8  5010               	movf	___wmul@multiplier,w,c
  1678  0011DA  0212               	mulwf	___wmul@multiplicand,c
  1679  0011DC  CFF3 F014          	movff	prodl,___wmul@product
  1680  0011E0  CFF4 F015          	movff	prodh,___wmul@product+1
  1681  0011E4  5010               	movf	___wmul@multiplier,w,c
  1682  0011E6  0213               	mulwf	___wmul@multiplicand+1,c
  1683  0011E8  50F3               	movf	prodl,w,c
  1684  0011EA  2615               	addwf	___wmul@product+1,f,c
  1685  0011EC  5011               	movf	___wmul@multiplier+1,w,c
  1686  0011EE  0212               	mulwf	___wmul@multiplicand,c
  1687  0011F0  50F3               	movf	prodl,w,c
  1688  0011F2  2615               	addwf	___wmul@product+1,f,c
  1689  0011F4  C014  F010         	movff	___wmul@product,?___wmul
  1690  0011F8  C015  F011         	movff	___wmul@product+1,?___wmul+1
  1691  0011FC  0012               	return	
  1692  0011FE                     __end_of___wmul:
  1693                           	opt stack 0
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           prodh	equ	0xFF4
  1699                           prodl	equ	0xFF3
  1700                           intcon	equ	0xFF2
  1701                           intcon2	equ	0xFF1
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           status	equ	0xFD8
  1705                           
  1706 ;; *************** function ___awdiv *****************
  1707 ;; Defined at:
  1708 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awdiv.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  dividend        2   21[COMRAM] int 
  1711 ;;  divisor         2   23[COMRAM] int 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  quotient        2   27[COMRAM] int 
  1714 ;;  sign            1   26[COMRAM] unsigned char 
  1715 ;;  counter         1   25[COMRAM] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  2   21[COMRAM] int 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        8 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    4
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_TempAcquisition
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text14
  1740  001008                     __ptext14:
  1741                           	opt stack 0
  1742  001008                     ___awdiv:
  1743                           	opt stack 23
  1744                           
  1745                           ;incstack = 0
  1746  001008  0E00               	movlw	0
  1747  00100A  6E1B               	movwf	___awdiv@sign,c
  1748  00100C  AE19               	btfss	___awdiv@divisor+1,7,c
  1749  00100E  D006               	goto	l1997
  1750  001010  6C18               	negf	___awdiv@divisor,c
  1751  001012  1E19               	comf	___awdiv@divisor+1,f,c
  1752  001014  B0D8               	btfsc	status,0,c
  1753  001016  2A19               	incf	___awdiv@divisor+1,f,c
  1754  001018  0E01               	movlw	1
  1755  00101A  6E1B               	movwf	___awdiv@sign,c
  1756  00101C                     l1997:
  1757  00101C  AE17               	btfss	___awdiv@dividend+1,7,c
  1758  00101E  D006               	goto	l2003
  1759  001020  6C16               	negf	___awdiv@dividend,c
  1760  001022  1E17               	comf	___awdiv@dividend+1,f,c
  1761  001024  B0D8               	btfsc	status,0,c
  1762  001026  2A17               	incf	___awdiv@dividend+1,f,c
  1763  001028  0E01               	movlw	1
  1764  00102A  1A1B               	xorwf	___awdiv@sign,f,c
  1765  00102C                     l2003:
  1766  00102C  0E00               	movlw	0
  1767  00102E  6E1D               	movwf	___awdiv@quotient+1,c
  1768  001030  0E00               	movlw	0
  1769  001032  6E1C               	movwf	___awdiv@quotient,c
  1770  001034  5018               	movf	___awdiv@divisor,w,c
  1771  001036  1019               	iorwf	___awdiv@divisor+1,w,c
  1772  001038  B4D8               	btfsc	status,2,c
  1773  00103A  D01C               	goto	l2025
  1774  00103C  0E01               	movlw	1
  1775  00103E  6E1A               	movwf	___awdiv@counter,c
  1776  001040  D004               	goto	l2011
  1777  001042                     l2009:
  1778  001042  90D8               	bcf	status,0,c
  1779  001044  3618               	rlcf	___awdiv@divisor,f,c
  1780  001046  3619               	rlcf	___awdiv@divisor+1,f,c
  1781  001048  2A1A               	incf	___awdiv@counter,f,c
  1782  00104A                     l2011:
  1783  00104A  AE19               	btfss	___awdiv@divisor+1,7,c
  1784  00104C  D7FA               	goto	l2009
  1785  00104E                     l2013:
  1786  00104E  90D8               	bcf	status,0,c
  1787  001050  361C               	rlcf	___awdiv@quotient,f,c
  1788  001052  361D               	rlcf	___awdiv@quotient+1,f,c
  1789  001054  5018               	movf	___awdiv@divisor,w,c
  1790  001056  5C16               	subwf	___awdiv@dividend,w,c
  1791  001058  5019               	movf	___awdiv@divisor+1,w,c
  1792  00105A  5817               	subwfb	___awdiv@dividend+1,w,c
  1793  00105C  A0D8               	btfss	status,0,c
  1794  00105E  D005               	goto	l2021
  1795  001060  5018               	movf	___awdiv@divisor,w,c
  1796  001062  5E16               	subwf	___awdiv@dividend,f,c
  1797  001064  5019               	movf	___awdiv@divisor+1,w,c
  1798  001066  5A17               	subwfb	___awdiv@dividend+1,f,c
  1799  001068  801C               	bsf	___awdiv@quotient,0,c
  1800  00106A                     l2021:
  1801  00106A  90D8               	bcf	status,0,c
  1802  00106C  3219               	rrcf	___awdiv@divisor+1,f,c
  1803  00106E  3218               	rrcf	___awdiv@divisor,f,c
  1804  001070  2E1A               	decfsz	___awdiv@counter,f,c
  1805  001072  D7ED               	goto	l2013
  1806  001074                     l2025:
  1807  001074  501B               	movf	___awdiv@sign,w,c
  1808  001076  B4D8               	btfsc	status,2,c
  1809  001078  D004               	goto	l2029
  1810  00107A  6C1C               	negf	___awdiv@quotient,c
  1811  00107C  1E1D               	comf	___awdiv@quotient+1,f,c
  1812  00107E  B0D8               	btfsc	status,0,c
  1813  001080  2A1D               	incf	___awdiv@quotient+1,f,c
  1814  001082                     l2029:
  1815  001082  C01C  F016         	movff	___awdiv@quotient,?___awdiv
  1816  001086  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
  1817  00108A  0012               	return	
  1818  00108C                     __end_of___awdiv:
  1819                           	opt stack 0
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           prodh	equ	0xFF4
  1825                           prodl	equ	0xFF3
  1826                           intcon	equ	0xFF2
  1827                           intcon2	equ	0xFF1
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           status	equ	0xFD8
  1831                           
  1832 ;; *************** function _PID_Control *****************
  1833 ;; Defined at:
  1834 ;;		line 22 in file "PID.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  newInput        2   30[BANK0 ] int 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  error           3   40[BANK0 ] int 
  1839 ;;  dInput          3   34[BANK0 ] int 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  2   30[BANK0 ] int 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1849 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;Total ram usage:       13 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    6
  1856 ;; This function calls:
  1857 ;;		___awtoft
  1858 ;;		___ftadd
  1859 ;;		___ftge
  1860 ;;		___ftmul
  1861 ;;		___ftneg
  1862 ;;		___fttol
  1863 ;; This function is called by:
  1864 ;;		_TempAcquisition
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text15
  1869  00009E                     __ptext15:
  1870                           	opt stack 0
  1871  00009E                     _PID_Control:
  1872                           	opt stack 21
  1873                           
  1874                           ;PID.c: 24: double error, dInput;
  1875                           ;PID.c: 26: Input = newInput;
  1876                           
  1877                           ;incstack = 0
  1878  00009E  C07E  F0AA         	movff	PID_Control@newInput,_Input
  1879  0000A2  C07F  F0AB         	movff	PID_Control@newInput+1,_Input+1
  1880                           
  1881                           ;PID.c: 27: if(!inAuto) return PIDConfig.Min;
  1882  0000A6  0100               	movlb	0	; () banked
  1883  0000A8  51B4               	movf	_inAuto& (0+255),w,b
  1884  0000AA  A4D8               	btfss	status,2,c
  1885  0000AC  D005               	goto	l2401
  1886                           
  1887                           ; BSR set to: 0
  1888  0000AE  C08D  F07E         	movff	_PIDConfig,?_PID_Control	;volatile
  1889  0000B2  C08E  F07F         	movff	_PIDConfig+1,?_PID_Control+1	;volatile
  1890  0000B6  0012               	return	
  1891  0000B8                     l2401:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;PID.c: 31: {
  1895                           ;PID.c: 33: error = PIDConfig.SetPoint - Input;
  1896  0000B8  C0AA  F01E         	movff	_Input,___awtoft@c
  1897  0000BC  C0AB  F01F         	movff	_Input+1,___awtoft@c+1
  1898  0000C0  EC8A  F008         	call	___awtoft	;wreg free
  1899  0000C4  C01E  F060         	movff	?___awtoft,___ftneg@f1
  1900  0000C8  C01F  F061         	movff	?___awtoft+1,___ftneg@f1+1
  1901  0000CC  C020  F062         	movff	?___awtoft+2,___ftneg@f1+2
  1902  0000D0  ECBE  F008         	call	___ftneg	;wreg free
  1903  0000D4  C060  F063         	movff	?___ftneg,___ftadd@f1
  1904  0000D8  C061  F064         	movff	?___ftneg+1,___ftadd@f1+1
  1905  0000DC  C062  F065         	movff	?___ftneg+2,___ftadd@f1+2
  1906  0000E0  C09A  F066         	movff	_PIDConfig+13,___ftadd@f2	;volatile
  1907  0000E4  C09B  F067         	movff	_PIDConfig+14,___ftadd@f2+1	;volatile
  1908  0000E8  C09C  F068         	movff	_PIDConfig+15,___ftadd@f2+2	;volatile
  1909  0000EC  EC9E  F001         	call	___ftadd	;wreg free
  1910  0000F0  C063  F088         	movff	?___ftadd,PID_Control@error
  1911  0000F4  C064  F089         	movff	?___ftadd+1,PID_Control@error+1
  1912  0000F8  C065  F08A         	movff	?___ftadd+2,PID_Control@error+2
  1913                           
  1914                           ;PID.c: 34: ITerm += (PIDConfig.Ki * error);
  1915  0000FC  C0A0  F063         	movff	_ITerm,___ftadd@f1
  1916  000100  C0A1  F064         	movff	_ITerm+1,___ftadd@f1+1
  1917  000104  C0A2  F065         	movff	_ITerm+2,___ftadd@f1+2
  1918  000108  C088  F034         	movff	PID_Control@error,___ftmul@f2
  1919  00010C  C089  F035         	movff	PID_Control@error+1,___ftmul@f2+1
  1920  000110  C08A  F036         	movff	PID_Control@error+2,___ftmul@f2+2
  1921  000114  C094  F031         	movff	_PIDConfig+7,___ftmul@f1	;volatile
  1922  000118  C095  F032         	movff	_PIDConfig+8,___ftmul@f1+1	;volatile
  1923  00011C  C096  F033         	movff	_PIDConfig+9,___ftmul@f1+2	;volatile
  1924  000120  ECFC  F004         	call	___ftmul	;wreg free
  1925  000124  C031  F066         	movff	?___ftmul,___ftadd@f2
  1926  000128  C032  F067         	movff	?___ftmul+1,___ftadd@f2+1
  1927  00012C  C033  F068         	movff	?___ftmul+2,___ftadd@f2+2
  1928  000130  EC9E  F001         	call	___ftadd	;wreg free
  1929  000134  C063  F0A0         	movff	?___ftadd,_ITerm
  1930  000138  C064  F0A1         	movff	?___ftadd+1,_ITerm+1
  1931  00013C  C065  F0A2         	movff	?___ftadd+2,_ITerm+2
  1932                           
  1933                           ;PID.c: 35: if (ITerm > PIDConfig.Max) ITerm = PIDConfig.Max;
  1934  000140  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  1935  000144  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  1936  000148  EC8A  F008         	call	___awtoft	;wreg free
  1937  00014C  C01E  F022         	movff	?___awtoft,___ftge@ff1
  1938  000150  C01F  F023         	movff	?___awtoft+1,___ftge@ff1+1
  1939  000154  C020  F024         	movff	?___awtoft+2,___ftge@ff1+2
  1940  000158  C0A0  F025         	movff	_ITerm,___ftge@ff2
  1941  00015C  C0A1  F026         	movff	_ITerm+1,___ftge@ff2+1
  1942  000160  C0A2  F027         	movff	_ITerm+2,___ftge@ff2+2
  1943  000164  ECBC  F007         	call	___ftge	;wreg free
  1944  000168  B0D8               	btfsc	status,0,c
  1945  00016A  D007               	goto	l2405
  1946  00016C  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  1947  000170  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  1948  000174  EC8A  F008         	call	___awtoft	;wreg free
  1949  000178  D01C               	goto	L1
  1950  00017A                     l2405:
  1951                           
  1952                           ;PID.c: 36: else if (ITerm < PIDConfig.Min) ITerm = PIDConfig.Min;
  1953  00017A  C0A0  F022         	movff	_ITerm,___ftge@ff1
  1954  00017E  C0A1  F023         	movff	_ITerm+1,___ftge@ff1+1
  1955  000182  C0A2  F024         	movff	_ITerm+2,___ftge@ff1+2
  1956  000186  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  1957  00018A  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  1958  00018E  EC8A  F008         	call	___awtoft	;wreg free
  1959  000192  C01E  F025         	movff	?___awtoft,___ftge@ff2
  1960  000196  C01F  F026         	movff	?___awtoft+1,___ftge@ff2+1
  1961  00019A  C020  F027         	movff	?___awtoft+2,___ftge@ff2+2
  1962  00019E  ECBC  F007         	call	___ftge	;wreg free
  1963  0001A2  B0D8               	btfsc	status,0,c
  1964  0001A4  D00C               	goto	l372
  1965  0001A6  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  1966  0001AA  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  1967  0001AE  EC8A  F008         	call	___awtoft	;wreg free
  1968  0001B2                     L1:
  1969  0001B2  C01E  F0A0         	movff	?___awtoft,_ITerm
  1970  0001B6  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  1971  0001BA  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  1972  0001BE                     l372:
  1973                           
  1974                           ;PID.c: 37: dInput = (Input - lastInput);
  1975  0001BE  C0AA  F01E         	movff	_Input,___awtoft@c
  1976  0001C2  C0AB  F01F         	movff	_Input+1,___awtoft@c+1
  1977  0001C6  EC8A  F008         	call	___awtoft	;wreg free
  1978  0001CA  C01E  F063         	movff	?___awtoft,___ftadd@f1
  1979  0001CE  C01F  F064         	movff	?___awtoft+1,___ftadd@f1+1
  1980  0001D2  C020  F065         	movff	?___awtoft+2,___ftadd@f1+2
  1981  0001D6  C09D  F060         	movff	_lastInput,___ftneg@f1
  1982  0001DA  C09E  F061         	movff	_lastInput+1,___ftneg@f1+1
  1983  0001DE  C09F  F062         	movff	_lastInput+2,___ftneg@f1+2
  1984  0001E2  ECBE  F008         	call	___ftneg	;wreg free
  1985  0001E6  C060  F066         	movff	?___ftneg,___ftadd@f2
  1986  0001EA  C061  F067         	movff	?___ftneg+1,___ftadd@f2+1
  1987  0001EE  C062  F068         	movff	?___ftneg+2,___ftadd@f2+2
  1988  0001F2  EC9E  F001         	call	___ftadd	;wreg free
  1989  0001F6  C063  F082         	movff	?___ftadd,PID_Control@dInput
  1990  0001FA  C064  F083         	movff	?___ftadd+1,PID_Control@dInput+1
  1991  0001FE  C065  F084         	movff	?___ftadd+2,PID_Control@dInput+2
  1992                           
  1993                           ;PID.c: 40: Output = (int)(PIDConfig.Kp * error + ITerm - PIDConfig.Kd * dInput);
  1994  000202  C082  F034         	movff	PID_Control@dInput,___ftmul@f2
  1995  000206  C083  F035         	movff	PID_Control@dInput+1,___ftmul@f2+1
  1996  00020A  C084  F036         	movff	PID_Control@dInput+2,___ftmul@f2+2
  1997  00020E  C097  F031         	movff	_PIDConfig+10,___ftmul@f1	;volatile
  1998  000212  C098  F032         	movff	_PIDConfig+11,___ftmul@f1+1	;volatile
  1999  000216  C099  F033         	movff	_PIDConfig+12,___ftmul@f1+2	;volatile
  2000  00021A  ECFC  F004         	call	___ftmul	;wreg free
  2001  00021E  C031  F060         	movff	?___ftmul,___ftneg@f1
  2002  000222  C032  F061         	movff	?___ftmul+1,___ftneg@f1+1
  2003  000226  C033  F062         	movff	?___ftmul+2,___ftneg@f1+2
  2004  00022A  ECBE  F008         	call	___ftneg	;wreg free
  2005  00022E  C060  F066         	movff	?___ftneg,___ftadd@f2
  2006  000232  C061  F067         	movff	?___ftneg+1,___ftadd@f2+1
  2007  000236  C062  F068         	movff	?___ftneg+2,___ftadd@f2+2
  2008  00023A  C088  F034         	movff	PID_Control@error,___ftmul@f2
  2009  00023E  C089  F035         	movff	PID_Control@error+1,___ftmul@f2+1
  2010  000242  C08A  F036         	movff	PID_Control@error+2,___ftmul@f2+2
  2011  000246  C091  F031         	movff	_PIDConfig+4,___ftmul@f1	;volatile
  2012  00024A  C092  F032         	movff	_PIDConfig+5,___ftmul@f1+1	;volatile
  2013  00024E  C093  F033         	movff	_PIDConfig+6,___ftmul@f1+2	;volatile
  2014  000252  ECFC  F004         	call	___ftmul	;wreg free
  2015  000256  C031  F063         	movff	?___ftmul,___ftadd@f1
  2016  00025A  C032  F064         	movff	?___ftmul+1,___ftadd@f1+1
  2017  00025E  C033  F065         	movff	?___ftmul+2,___ftadd@f1+2
  2018  000262  EC9E  F001         	call	___ftadd	;wreg free
  2019  000266  C063  F085         	movff	?___ftadd,_PID_Control$1503
  2020  00026A  C064  F086         	movff	?___ftadd+1,_PID_Control$1503+1
  2021  00026E  C065  F087         	movff	?___ftadd+2,_PID_Control$1503+2
  2022                           
  2023                           ;PID.c: 40: Output = (int)(PIDConfig.Kp * error + ITerm - PIDConfig.Kd * dInput);
  2024  000272  C0A0  F066         	movff	_ITerm,___ftadd@f2
  2025  000276  C0A1  F067         	movff	_ITerm+1,___ftadd@f2+1
  2026  00027A  C0A2  F068         	movff	_ITerm+2,___ftadd@f2+2
  2027  00027E  C085  F063         	movff	_PID_Control$1503,___ftadd@f1
  2028  000282  C086  F064         	movff	_PID_Control$1503+1,___ftadd@f1+1
  2029  000286  C087  F065         	movff	_PID_Control$1503+2,___ftadd@f1+2
  2030  00028A  EC9E  F001         	call	___ftadd	;wreg free
  2031  00028E  C063  F06F         	movff	?___ftadd,___fttol@f1
  2032  000292  C064  F070         	movff	?___ftadd+1,___fttol@f1+1
  2033  000296  C065  F071         	movff	?___ftadd+2,___fttol@f1+2
  2034  00029A  ECD2  F002         	call	___fttol	;wreg free
  2035  00029E  C06F  F0A8         	movff	?___fttol,_Output
  2036  0002A2  C070  F0A9         	movff	?___fttol+1,_Output+1
  2037                           
  2038                           ;PID.c: 41: if (Output > PIDConfig.Max) Output = PIDConfig.Max;
  2039  0002A6  0100               	movlb	0	; () banked
  2040  0002A8  51A8               	movf	_Output& (0+255),w,b
  2041  0002AA  0100               	movlb	0	; () banked
  2042  0002AC  5D8F               	subwf	(_PIDConfig+2)& (0+255),w,b	;volatile
  2043  0002AE  0100               	movlb	0	; () banked
  2044  0002B0  5190               	movf	(_PIDConfig+3)& (0+255),w,b	;volatile
  2045  0002B2  0A80               	xorlw	128
  2046  0002B4  0100               	movlb	0	; () banked
  2047  0002B6  6F80               	movwf	??_PID_Control& (0+255),b
  2048  0002B8  0100               	movlb	0	; () banked
  2049  0002BA  51A9               	movf	(_Output+1)& (0+255),w,b
  2050  0002BC  0A80               	xorlw	128
  2051  0002BE  0100               	movlb	0	; () banked
  2052  0002C0  5980               	subwfb	??_PID_Control& (0+255),w,b
  2053  0002C2  B0D8               	btfsc	status,0,c
  2054  0002C4  D005               	goto	l2413
  2055                           
  2056                           ; BSR set to: 0
  2057  0002C6  C08F  F0A8         	movff	_PIDConfig+2,_Output	;volatile
  2058  0002CA  C090  F0A9         	movff	_PIDConfig+3,_Output+1	;volatile
  2059  0002CE  D014               	goto	l2417
  2060  0002D0                     l2413:
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;PID.c: 42: else if(Output < PIDConfig.Min) Output = PIDConfig.Min;
  2064  0002D0  0100               	movlb	0	; () banked
  2065  0002D2  518D               	movf	_PIDConfig& (0+255),w,b	;volatile
  2066  0002D4  0100               	movlb	0	; () banked
  2067  0002D6  5DA8               	subwf	_Output& (0+255),w,b
  2068  0002D8  0100               	movlb	0	; () banked
  2069  0002DA  51A9               	movf	(_Output+1)& (0+255),w,b
  2070  0002DC  0A80               	xorlw	128
  2071  0002DE  0100               	movlb	0	; () banked
  2072  0002E0  6F80               	movwf	??_PID_Control& (0+255),b
  2073  0002E2  0100               	movlb	0	; () banked
  2074  0002E4  518E               	movf	(_PIDConfig+1)& (0+255),w,b	;volatile
  2075  0002E6  0A80               	xorlw	128
  2076  0002E8  0100               	movlb	0	; () banked
  2077  0002EA  5980               	subwfb	??_PID_Control& (0+255),w,b
  2078  0002EC  B0D8               	btfsc	status,0,c
  2079  0002EE  D004               	goto	l2417
  2080                           
  2081                           ; BSR set to: 0
  2082  0002F0  C08D  F0A8         	movff	_PIDConfig,_Output	;volatile
  2083  0002F4  C08E  F0A9         	movff	_PIDConfig+1,_Output+1	;volatile
  2084  0002F8                     l2417:
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;PID.c: 45: lastInput = Input;
  2088  0002F8  C0AA  F01E         	movff	_Input,___awtoft@c
  2089  0002FC  C0AB  F01F         	movff	_Input+1,___awtoft@c+1
  2090  000300  EC8A  F008         	call	___awtoft	;wreg free
  2091  000304  C01E  F09D         	movff	?___awtoft,_lastInput
  2092  000308  C01F  F09E         	movff	?___awtoft+1,_lastInput+1
  2093  00030C  C020  F09F         	movff	?___awtoft+2,_lastInput+2
  2094                           
  2095                           ;PID.c: 47: }
  2096                           ;PID.c: 48: return (PIDConfig.Max - Output);
  2097  000310  C0A8  F080         	movff	_Output,??_PID_Control
  2098  000314  C0A9  F081         	movff	_Output+1,??_PID_Control+1
  2099  000318  0100               	movlb	0	; () banked
  2100  00031A  1F80               	comf	??_PID_Control& (0+255),f,b
  2101  00031C  1F81               	comf	(??_PID_Control+1)& (0+255),f,b
  2102  00031E  4B80               	infsnz	??_PID_Control& (0+255),f,b
  2103  000320  2B81               	incf	(??_PID_Control+1)& (0+255),f,b
  2104  000322  0100               	movlb	0	; () banked
  2105  000324  518F               	movf	(_PIDConfig+2)& (0+255),w,b	;volatile
  2106  000326  0100               	movlb	0	; () banked
  2107  000328  2580               	addwf	??_PID_Control& (0+255),w,b
  2108  00032A  0100               	movlb	0	; () banked
  2109  00032C  6F7E               	movwf	?_PID_Control& (0+255),b
  2110  00032E  0100               	movlb	0	; () banked
  2111  000330  5190               	movf	(_PIDConfig+3)& (0+255),w,b	;volatile
  2112  000332  0100               	movlb	0	; () banked
  2113  000334  2181               	addwfc	(??_PID_Control+1)& (0+255),w,b
  2114  000336  0100               	movlb	0	; () banked
  2115  000338  6F7F               	movwf	(?_PID_Control+1)& (0+255),b
  2116  00033A  0012               	return	
  2117  00033C                     __end_of_PID_Control:
  2118                           	opt stack 0
  2119                           tblptru	equ	0xFF8
  2120                           tblptrh	equ	0xFF7
  2121                           tblptrl	equ	0xFF6
  2122                           tablat	equ	0xFF5
  2123                           prodh	equ	0xFF4
  2124                           prodl	equ	0xFF3
  2125                           intcon	equ	0xFF2
  2126                           intcon2	equ	0xFF1
  2127                           postinc0	equ	0xFEE
  2128                           wreg	equ	0xFE8
  2129                           status	equ	0xFD8
  2130                           
  2131 ;; *************** function ___fttol *****************
  2132 ;; Defined at:
  2133 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\fttol.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;  f1              3   15[BANK0 ] float 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  lval            4   25[BANK0 ] unsigned long 
  2138 ;;  exp1            1   29[BANK0 ] unsigned char 
  2139 ;;  sign1           1   24[BANK0 ] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  4   15[BANK0 ] long 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2149 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;Total ram usage:       15 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    4
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_TempAcquisition
  2160 ;;		_PID_Control
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text16
  2165  0005A4                     __ptext16:
  2166                           	opt stack 0
  2167  0005A4                     ___fttol:
  2168                           	opt stack 23
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;incstack = 0
  2172  0005A4  C071  F073         	movff	___fttol@f1+2,??___fttol
  2173  0005A8  0100               	movlb	0	; () banked
  2174  0005AA  6B74               	clrf	(??___fttol+1)& (0+255),b
  2175  0005AC  6B75               	clrf	(??___fttol+2)& (0+255),b
  2176  0005AE  0100               	movlb	0	; () banked
  2177  0005B0  3570               	rlcf	(___fttol@f1+1)& (0+255),w,b
  2178  0005B2  0100               	movlb	0	; () banked
  2179  0005B4  3773               	rlcf	??___fttol& (0+255),f,b
  2180  0005B6  E301               	bnc	u1471
  2181  0005B8  8174               	bsf	(??___fttol+1)& (0+255),0,b
  2182  0005BA                     u1471:
  2183  0005BA  0100               	movlb	0	; () banked
  2184  0005BC  5173               	movf	??___fttol& (0+255),w,b
  2185  0005BE  0100               	movlb	0	; () banked
  2186  0005C0  6F7D               	movwf	___fttol@exp1& (0+255),b
  2187  0005C2  0100               	movlb	0	; () banked
  2188  0005C4  517D               	movf	___fttol@exp1& (0+255),w,b
  2189  0005C6  A4D8               	btfss	status,2,c
  2190  0005C8  D00A               	goto	l1855
  2191                           
  2192                           ; BSR set to: 0
  2193  0005CA  0E00               	movlw	0
  2194  0005CC  0100               	movlb	0	; () banked
  2195  0005CE  6F6F               	movwf	?___fttol& (0+255),b
  2196  0005D0  0E00               	movlw	0
  2197  0005D2  6F70               	movwf	(?___fttol+1)& (0+255),b
  2198  0005D4  0E00               	movlw	0
  2199  0005D6  6F71               	movwf	(?___fttol+2)& (0+255),b
  2200  0005D8  0E00               	movlw	0
  2201  0005DA  6F72               	movwf	(?___fttol+3)& (0+255),b
  2202                           
  2203                           ; BSR set to: 0
  2204  0005DC  0012               	return	
  2205  0005DE                     l1855:
  2206                           
  2207                           ; BSR set to: 0
  2208  0005DE  0E17               	movlw	23
  2209  0005E0  0100               	movlb	0	; () banked
  2210  0005E2  6F73               	movwf	??___fttol& (0+255),b
  2211  0005E4  C06F  F074         	movff	___fttol@f1,??___fttol+1
  2212  0005E8  C070  F075         	movff	___fttol@f1+1,??___fttol+2
  2213  0005EC  C071  F076         	movff	___fttol@f1+2,??___fttol+3
  2214  0005F0  0100               	movlb	0	; () banked
  2215  0005F2  2973               	incf	??___fttol& (0+255),w,b
  2216  0005F4  0100               	movlb	0	; () banked
  2217  0005F6  6F77               	movwf	(??___fttol+4)& (0+255),b
  2218  0005F8  D005               	goto	u1490
  2219  0005FA                     u1495:
  2220  0005FA  0100               	movlb	0	; () banked
  2221  0005FC  90D8               	bcf	status,0,c
  2222  0005FE  3376               	rrcf	(??___fttol+3)& (0+255),f,b
  2223  000600  3375               	rrcf	(??___fttol+2)& (0+255),f,b
  2224  000602  3374               	rrcf	(??___fttol+1)& (0+255),f,b
  2225  000604                     u1490:
  2226  000604  0100               	movlb	0	; () banked
  2227  000606  2F77               	decfsz	(??___fttol+4)& (0+255),f,b
  2228  000608  D7F8               	goto	u1495
  2229  00060A  0100               	movlb	0	; () banked
  2230  00060C  5174               	movf	(??___fttol+1)& (0+255),w,b
  2231  00060E  0100               	movlb	0	; () banked
  2232  000610  6F78               	movwf	___fttol@sign1& (0+255),b
  2233                           
  2234                           ; BSR set to: 0
  2235  000612  0100               	movlb	0	; () banked
  2236  000614  8F70               	bsf	(___fttol@f1+1)& (0+255),7,b
  2237                           
  2238                           ; BSR set to: 0
  2239  000616  0EFF               	movlw	255
  2240  000618  0100               	movlb	0	; () banked
  2241  00061A  176F               	andwf	___fttol@f1& (0+255),f,b
  2242  00061C  0EFF               	movlw	255
  2243  00061E  0100               	movlb	0	; () banked
  2244  000620  1770               	andwf	(___fttol@f1+1)& (0+255),f,b
  2245  000622  0E00               	movlw	0
  2246  000624  0100               	movlb	0	; () banked
  2247  000626  1771               	andwf	(___fttol@f1+2)& (0+255),f,b
  2248                           
  2249                           ; BSR set to: 0
  2250  000628  0100               	movlb	0	; () banked
  2251  00062A  516F               	movf	___fttol@f1& (0+255),w,b
  2252  00062C  0100               	movlb	0	; () banked
  2253  00062E  6F79               	movwf	___fttol@lval& (0+255),b
  2254  000630  0100               	movlb	0	; () banked
  2255  000632  5170               	movf	(___fttol@f1+1)& (0+255),w,b
  2256  000634  0100               	movlb	0	; () banked
  2257  000636  6F7A               	movwf	(___fttol@lval+1)& (0+255),b
  2258  000638  0100               	movlb	0	; () banked
  2259  00063A  5171               	movf	(___fttol@f1+2)& (0+255),w,b
  2260  00063C  0100               	movlb	0	; () banked
  2261  00063E  6F7B               	movwf	(___fttol@lval+2)& (0+255),b
  2262  000640  0100               	movlb	0	; () banked
  2263  000642  6B7C               	clrf	(___fttol@lval+3)& (0+255),b
  2264                           
  2265                           ; BSR set to: 0
  2266  000644  0E8E               	movlw	142
  2267  000646  0100               	movlb	0	; () banked
  2268  000648  5F7D               	subwf	___fttol@exp1& (0+255),f,b
  2269                           
  2270                           ; BSR set to: 0
  2271  00064A  0100               	movlb	0	; () banked
  2272  00064C  AF7D               	btfss	___fttol@exp1& (0+255),7,b
  2273  00064E  D01A               	goto	l1877
  2274                           
  2275                           ; BSR set to: 0
  2276  000650  0100               	movlb	0	; () banked
  2277  000652  517D               	movf	___fttol@exp1& (0+255),w,b
  2278  000654  0A80               	xorlw	128
  2279  000656  0F8F               	addlw	143
  2280  000658  B0D8               	btfsc	status,0,c
  2281  00065A  D00A               	goto	l1873
  2282                           
  2283                           ; BSR set to: 0
  2284  00065C  0E00               	movlw	0
  2285  00065E  0100               	movlb	0	; () banked
  2286  000660  6F6F               	movwf	?___fttol& (0+255),b
  2287  000662  0E00               	movlw	0
  2288  000664  6F70               	movwf	(?___fttol+1)& (0+255),b
  2289  000666  0E00               	movlw	0
  2290  000668  6F71               	movwf	(?___fttol+2)& (0+255),b
  2291  00066A  0E00               	movlw	0
  2292  00066C  6F72               	movwf	(?___fttol+3)& (0+255),b
  2293                           
  2294                           ; BSR set to: 0
  2295  00066E  0012               	return	
  2296  000670                     l1873:
  2297                           
  2298                           ; BSR set to: 0
  2299  000670  0100               	movlb	0	; () banked
  2300  000672  90D8               	bcf	status,0,c
  2301  000674  337C               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2302  000676  337B               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2303  000678  337A               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2304  00067A  3379               	rrcf	___fttol@lval& (0+255),f,b
  2305                           
  2306                           ; BSR set to: 0
  2307  00067C  0100               	movlb	0	; () banked
  2308  00067E  3F7D               	incfsz	___fttol@exp1& (0+255),f,b
  2309  000680  D7F7               	goto	l1873
  2310                           
  2311                           ; BSR set to: 0
  2312  000682  D01B               	goto	l1887
  2313  000684                     l1877:
  2314                           
  2315                           ; BSR set to: 0
  2316  000684  0E17               	movlw	23
  2317  000686  0100               	movlb	0	; () banked
  2318  000688  657D               	cpfsgt	___fttol@exp1& (0+255),b
  2319  00068A  D012               	goto	l1885
  2320                           
  2321                           ; BSR set to: 0
  2322  00068C  0E00               	movlw	0
  2323  00068E  0100               	movlb	0	; () banked
  2324  000690  6F6F               	movwf	?___fttol& (0+255),b
  2325  000692  0E00               	movlw	0
  2326  000694  6F70               	movwf	(?___fttol+1)& (0+255),b
  2327  000696  0E00               	movlw	0
  2328  000698  6F71               	movwf	(?___fttol+2)& (0+255),b
  2329  00069A  0E00               	movlw	0
  2330  00069C  6F72               	movwf	(?___fttol+3)& (0+255),b
  2331                           
  2332                           ; BSR set to: 0
  2333  00069E  0012               	return	
  2334  0006A0                     l1883:
  2335                           
  2336                           ; BSR set to: 0
  2337  0006A0  0100               	movlb	0	; () banked
  2338  0006A2  90D8               	bcf	status,0,c
  2339  0006A4  3779               	rlcf	___fttol@lval& (0+255),f,b
  2340  0006A6  377A               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2341  0006A8  377B               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2342  0006AA  377C               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2343  0006AC  0100               	movlb	0	; () banked
  2344  0006AE  077D               	decf	___fttol@exp1& (0+255),f,b
  2345  0006B0                     l1885:
  2346                           
  2347                           ; BSR set to: 0
  2348  0006B0  0100               	movlb	0	; () banked
  2349  0006B2  517D               	movf	___fttol@exp1& (0+255),w,b
  2350  0006B4  0100               	movlb	0	; () banked
  2351  0006B6  A4D8               	btfss	status,2,c
  2352  0006B8  D7F3               	goto	l1883
  2353  0006BA                     l1887:
  2354                           
  2355                           ; BSR set to: 0
  2356  0006BA  0100               	movlb	0	; () banked
  2357  0006BC  5178               	movf	___fttol@sign1& (0+255),w,b
  2358  0006BE  0100               	movlb	0	; () banked
  2359  0006C0  B4D8               	btfsc	status,2,c
  2360  0006C2  D009               	goto	l1891
  2361                           
  2362                           ; BSR set to: 0
  2363  0006C4  0100               	movlb	0	; () banked
  2364  0006C6  1F7C               	comf	(___fttol@lval+3)& (0+255),f,b
  2365  0006C8  1F7B               	comf	(___fttol@lval+2)& (0+255),f,b
  2366  0006CA  1F7A               	comf	(___fttol@lval+1)& (0+255),f,b
  2367  0006CC  6D79               	negf	___fttol@lval& (0+255),b
  2368  0006CE  0E00               	movlw	0
  2369  0006D0  237A               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2370  0006D2  237B               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2371  0006D4  237C               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2372  0006D6                     l1891:
  2373                           
  2374                           ; BSR set to: 0
  2375  0006D6  C079  F06F         	movff	___fttol@lval,?___fttol
  2376  0006DA  C07A  F070         	movff	___fttol@lval+1,?___fttol+1
  2377  0006DE  C07B  F071         	movff	___fttol@lval+2,?___fttol+2
  2378  0006E2  C07C  F072         	movff	___fttol@lval+3,?___fttol+3
  2379  0006E6  0012               	return	
  2380  0006E8                     __end_of___fttol:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           prodh	equ	0xFF4
  2387                           prodl	equ	0xFF3
  2388                           intcon	equ	0xFF2
  2389                           intcon2	equ	0xFF1
  2390                           postinc0	equ	0xFEE
  2391                           wreg	equ	0xFE8
  2392                           status	equ	0xFD8
  2393                           
  2394 ;; *************** function ___ftadd *****************
  2395 ;; Defined at:
  2396 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftadd.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  f1              3    3[BANK0 ] float 
  2399 ;;  f2              3    6[BANK0 ] float 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  exp1            1   14[BANK0 ] unsigned char 
  2402 ;;  exp2            1   13[BANK0 ] unsigned char 
  2403 ;;  sign            1   12[BANK0 ] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  3    3[BANK0 ] float 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2413 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;Total ram usage:       12 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    5
  2420 ;; This function calls:
  2421 ;;		___ftpack
  2422 ;; This function is called by:
  2423 ;;		_PID_Control
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text17
  2428  00033C                     __ptext17:
  2429                           	opt stack 0
  2430  00033C                     ___ftadd:
  2431                           	opt stack 21
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;incstack = 0
  2435  00033C  C065  F069         	movff	___ftadd@f1+2,??___ftadd
  2436  000340  0100               	movlb	0	; () banked
  2437  000342  6B6A               	clrf	(??___ftadd+1)& (0+255),b
  2438  000344  6B6B               	clrf	(??___ftadd+2)& (0+255),b
  2439  000346  0100               	movlb	0	; () banked
  2440  000348  3564               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2441  00034A  0100               	movlb	0	; () banked
  2442  00034C  3769               	rlcf	??___ftadd& (0+255),f,b
  2443  00034E  E301               	bnc	u2191
  2444  000350  816A               	bsf	(??___ftadd+1)& (0+255),0,b
  2445  000352                     u2191:
  2446  000352  0100               	movlb	0	; () banked
  2447  000354  5169               	movf	??___ftadd& (0+255),w,b
  2448  000356  0100               	movlb	0	; () banked
  2449  000358  6F6E               	movwf	___ftadd@exp1& (0+255),b
  2450  00035A  C068  F069         	movff	___ftadd@f2+2,??___ftadd
  2451  00035E  0100               	movlb	0	; () banked
  2452  000360  6B6A               	clrf	(??___ftadd+1)& (0+255),b
  2453  000362  6B6B               	clrf	(??___ftadd+2)& (0+255),b
  2454  000364  0100               	movlb	0	; () banked
  2455  000366  3567               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2456  000368  0100               	movlb	0	; () banked
  2457  00036A  3769               	rlcf	??___ftadd& (0+255),f,b
  2458  00036C  E301               	bnc	u2201
  2459  00036E  816A               	bsf	(??___ftadd+1)& (0+255),0,b
  2460  000370                     u2201:
  2461  000370  0100               	movlb	0	; () banked
  2462  000372  5169               	movf	??___ftadd& (0+255),w,b
  2463  000374  0100               	movlb	0	; () banked
  2464  000376  6F6D               	movwf	___ftadd@exp2& (0+255),b
  2465                           
  2466                           ; BSR set to: 0
  2467  000378  0100               	movlb	0	; () banked
  2468  00037A  516E               	movf	___ftadd@exp1& (0+255),w,b
  2469  00037C  0100               	movlb	0	; () banked
  2470  00037E  B4D8               	btfsc	status,2,c
  2471  000380  D011               	goto	l661
  2472                           
  2473                           ; BSR set to: 0
  2474  000382  0100               	movlb	0	; () banked
  2475  000384  516D               	movf	___ftadd@exp2& (0+255),w,b
  2476  000386  0100               	movlb	0	; () banked
  2477  000388  5D6E               	subwf	___ftadd@exp1& (0+255),w,b
  2478  00038A  B0D8               	btfsc	status,0,c
  2479  00038C  D012               	goto	l2269
  2480                           
  2481                           ; BSR set to: 0
  2482  00038E  0100               	movlb	0	; () banked
  2483  000390  516E               	movf	___ftadd@exp1& (0+255),w,b
  2484  000392  0800               	sublw	0
  2485  000394  0100               	movlb	0	; () banked
  2486  000396  256D               	addwf	___ftadd@exp2& (0+255),w,b
  2487  000398  0100               	movlb	0	; () banked
  2488  00039A  6F69               	movwf	??___ftadd& (0+255),b
  2489  00039C  0E18               	movlw	24
  2490  00039E  0100               	movlb	0	; () banked
  2491  0003A0  6569               	cpfsgt	??___ftadd& (0+255),b
  2492  0003A2  D007               	goto	l2269
  2493  0003A4                     l661:
  2494                           
  2495                           ; BSR set to: 0
  2496  0003A4  C066  F063         	movff	___ftadd@f2,?___ftadd
  2497  0003A8  C067  F064         	movff	___ftadd@f2+1,?___ftadd+1
  2498  0003AC  C068  F065         	movff	___ftadd@f2+2,?___ftadd+2
  2499  0003B0  0012               	return	
  2500  0003B2                     l2269:
  2501                           
  2502                           ; BSR set to: 0
  2503  0003B2  0100               	movlb	0	; () banked
  2504  0003B4  516D               	movf	___ftadd@exp2& (0+255),w,b
  2505  0003B6  0100               	movlb	0	; () banked
  2506  0003B8  B4D8               	btfsc	status,2,c
  2507  0003BA  D011               	goto	l665
  2508                           
  2509                           ; BSR set to: 0
  2510  0003BC  0100               	movlb	0	; () banked
  2511  0003BE  516E               	movf	___ftadd@exp1& (0+255),w,b
  2512  0003C0  0100               	movlb	0	; () banked
  2513  0003C2  5D6D               	subwf	___ftadd@exp2& (0+255),w,b
  2514  0003C4  B0D8               	btfsc	status,0,c
  2515  0003C6  D012               	goto	l2275
  2516                           
  2517                           ; BSR set to: 0
  2518  0003C8  0100               	movlb	0	; () banked
  2519  0003CA  516D               	movf	___ftadd@exp2& (0+255),w,b
  2520  0003CC  0800               	sublw	0
  2521  0003CE  0100               	movlb	0	; () banked
  2522  0003D0  256E               	addwf	___ftadd@exp1& (0+255),w,b
  2523  0003D2  0100               	movlb	0	; () banked
  2524  0003D4  6F69               	movwf	??___ftadd& (0+255),b
  2525  0003D6  0E18               	movlw	24
  2526  0003D8  0100               	movlb	0	; () banked
  2527  0003DA  6569               	cpfsgt	??___ftadd& (0+255),b
  2528  0003DC  D007               	goto	l2275
  2529  0003DE                     l665:
  2530                           
  2531                           ; BSR set to: 0
  2532  0003DE  C063  F063         	movff	___ftadd@f1,?___ftadd
  2533  0003E2  C064  F064         	movff	___ftadd@f1+1,?___ftadd+1
  2534  0003E6  C065  F065         	movff	___ftadd@f1+2,?___ftadd+2
  2535  0003EA  0012               	return	
  2536  0003EC                     l2275:
  2537                           
  2538                           ; BSR set to: 0
  2539  0003EC  0E06               	movlw	6
  2540  0003EE  0100               	movlb	0	; () banked
  2541  0003F0  6F6C               	movwf	___ftadd@sign& (0+255),b
  2542                           
  2543                           ; BSR set to: 0
  2544  0003F2  0100               	movlb	0	; () banked
  2545  0003F4  AF65               	btfss	(___ftadd@f1+2)& (0+255),7,b
  2546  0003F6  D002               	goto	l2281
  2547                           
  2548                           ; BSR set to: 0
  2549  0003F8  0100               	movlb	0	; () banked
  2550  0003FA  8F6C               	bsf	___ftadd@sign& (0+255),7,b
  2551  0003FC                     l2281:
  2552                           
  2553                           ; BSR set to: 0
  2554  0003FC  0100               	movlb	0	; () banked
  2555  0003FE  AF68               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2556  000400  D002               	goto	l667
  2557                           
  2558                           ; BSR set to: 0
  2559  000402  0100               	movlb	0	; () banked
  2560  000404  8D6C               	bsf	___ftadd@sign& (0+255),6,b
  2561  000406                     l667:
  2562                           
  2563                           ; BSR set to: 0
  2564  000406  0100               	movlb	0	; () banked
  2565  000408  8F64               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2566                           
  2567                           ; BSR set to: 0
  2568  00040A  0EFF               	movlw	255
  2569  00040C  0100               	movlb	0	; () banked
  2570  00040E  1763               	andwf	___ftadd@f1& (0+255),f,b
  2571  000410  0EFF               	movlw	255
  2572  000412  0100               	movlb	0	; () banked
  2573  000414  1764               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2574  000416  0E00               	movlw	0
  2575  000418  0100               	movlb	0	; () banked
  2576  00041A  1765               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2577  00041C  0100               	movlb	0	; () banked
  2578  00041E  8F67               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2579                           
  2580                           ; BSR set to: 0
  2581  000420  0EFF               	movlw	255
  2582  000422  0100               	movlb	0	; () banked
  2583  000424  1766               	andwf	___ftadd@f2& (0+255),f,b
  2584  000426  0EFF               	movlw	255
  2585  000428  0100               	movlb	0	; () banked
  2586  00042A  1767               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2587  00042C  0E00               	movlw	0
  2588  00042E  0100               	movlb	0	; () banked
  2589  000430  1768               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2590                           
  2591                           ; BSR set to: 0
  2592  000432  0100               	movlb	0	; () banked
  2593  000434  516D               	movf	___ftadd@exp2& (0+255),w,b
  2594  000436  0100               	movlb	0	; () banked
  2595  000438  5D6E               	subwf	___ftadd@exp1& (0+255),w,b
  2596  00043A  B0D8               	btfsc	status,0,c
  2597  00043C  D025               	goto	l2301
  2598  00043E                     l2291:
  2599                           
  2600                           ; BSR set to: 0
  2601  00043E  0100               	movlb	0	; () banked
  2602  000440  90D8               	bcf	status,0,c
  2603  000442  3766               	rlcf	___ftadd@f2& (0+255),f,b
  2604  000444  3767               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2605  000446  3768               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2606  000448  0100               	movlb	0	; () banked
  2607  00044A  076D               	decf	___ftadd@exp2& (0+255),f,b
  2608                           
  2609                           ; BSR set to: 0
  2610  00044C  0100               	movlb	0	; () banked
  2611  00044E  516E               	movf	___ftadd@exp1& (0+255),w,b
  2612  000450  0100               	movlb	0	; () banked
  2613  000452  196D               	xorwf	___ftadd@exp2& (0+255),w,b
  2614  000454  B4D8               	btfsc	status,2,c
  2615  000456  D011               	goto	l2299
  2616                           
  2617                           ; BSR set to: 0
  2618  000458  0100               	movlb	0	; () banked
  2619  00045A  076C               	decf	___ftadd@sign& (0+255),f,b
  2620  00045C  C06C  F069         	movff	___ftadd@sign,??___ftadd
  2621  000460  0E07               	movlw	7
  2622  000462  0100               	movlb	0	; () banked
  2623  000464  1769               	andwf	??___ftadd& (0+255),f,b
  2624  000466  B4D8               	btfsc	status,2,c
  2625  000468  D008               	goto	l2299
  2626  00046A  D7E9               	goto	l2291
  2627  00046C                     l2297:
  2628                           
  2629                           ; BSR set to: 0
  2630  00046C  0100               	movlb	0	; () banked
  2631  00046E  90D8               	bcf	status,0,c
  2632  000470  3365               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2633  000472  3364               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2634  000474  3363               	rrcf	___ftadd@f1& (0+255),f,b
  2635  000476  0100               	movlb	0	; () banked
  2636  000478  2B6E               	incf	___ftadd@exp1& (0+255),f,b
  2637  00047A                     l2299:
  2638                           
  2639                           ; BSR set to: 0
  2640  00047A  0100               	movlb	0	; () banked
  2641  00047C  516D               	movf	___ftadd@exp2& (0+255),w,b
  2642  00047E  0100               	movlb	0	; () banked
  2643  000480  196E               	xorwf	___ftadd@exp1& (0+255),w,b
  2644  000482  B4D8               	btfsc	status,2,c
  2645  000484  D02B               	goto	l676
  2646  000486  D7F2               	goto	l2297
  2647  000488                     l2301:
  2648                           
  2649                           ; BSR set to: 0
  2650  000488  0100               	movlb	0	; () banked
  2651  00048A  516E               	movf	___ftadd@exp1& (0+255),w,b
  2652  00048C  0100               	movlb	0	; () banked
  2653  00048E  5D6D               	subwf	___ftadd@exp2& (0+255),w,b
  2654  000490  B0D8               	btfsc	status,0,c
  2655  000492  D024               	goto	l676
  2656  000494                     l2303:
  2657                           
  2658                           ; BSR set to: 0
  2659  000494  0100               	movlb	0	; () banked
  2660  000496  90D8               	bcf	status,0,c
  2661  000498  3763               	rlcf	___ftadd@f1& (0+255),f,b
  2662  00049A  3764               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2663  00049C  3765               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2664  00049E  0100               	movlb	0	; () banked
  2665  0004A0  076E               	decf	___ftadd@exp1& (0+255),f,b
  2666                           
  2667                           ; BSR set to: 0
  2668  0004A2  0100               	movlb	0	; () banked
  2669  0004A4  516E               	movf	___ftadd@exp1& (0+255),w,b
  2670  0004A6  0100               	movlb	0	; () banked
  2671  0004A8  196D               	xorwf	___ftadd@exp2& (0+255),w,b
  2672  0004AA  B4D8               	btfsc	status,2,c
  2673  0004AC  D011               	goto	l2311
  2674                           
  2675                           ; BSR set to: 0
  2676  0004AE  0100               	movlb	0	; () banked
  2677  0004B0  076C               	decf	___ftadd@sign& (0+255),f,b
  2678  0004B2  C06C  F069         	movff	___ftadd@sign,??___ftadd
  2679  0004B6  0E07               	movlw	7
  2680  0004B8  0100               	movlb	0	; () banked
  2681  0004BA  1769               	andwf	??___ftadd& (0+255),f,b
  2682  0004BC  B4D8               	btfsc	status,2,c
  2683  0004BE  D008               	goto	l2311
  2684  0004C0  D7E9               	goto	l2303
  2685  0004C2                     l2309:
  2686                           
  2687                           ; BSR set to: 0
  2688  0004C2  0100               	movlb	0	; () banked
  2689  0004C4  90D8               	bcf	status,0,c
  2690  0004C6  3368               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2691  0004C8  3367               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2692  0004CA  3366               	rrcf	___ftadd@f2& (0+255),f,b
  2693  0004CC  0100               	movlb	0	; () banked
  2694  0004CE  2B6D               	incf	___ftadd@exp2& (0+255),f,b
  2695  0004D0                     l2311:
  2696                           
  2697                           ; BSR set to: 0
  2698  0004D0  0100               	movlb	0	; () banked
  2699  0004D2  516D               	movf	___ftadd@exp2& (0+255),w,b
  2700  0004D4  0100               	movlb	0	; () banked
  2701  0004D6  196E               	xorwf	___ftadd@exp1& (0+255),w,b
  2702  0004D8  A4D8               	btfss	status,2,c
  2703  0004DA  D7F3               	goto	l2309
  2704  0004DC                     l676:
  2705                           
  2706                           ; BSR set to: 0
  2707  0004DC  0100               	movlb	0	; () banked
  2708  0004DE  AF6C               	btfss	___ftadd@sign& (0+255),7,b
  2709  0004E0  D012               	goto	l685
  2710                           
  2711                           ; BSR set to: 0
  2712  0004E2  0EFF               	movlw	255
  2713  0004E4  0100               	movlb	0	; () banked
  2714  0004E6  1B63               	xorwf	___ftadd@f1& (0+255),f,b
  2715  0004E8  0EFF               	movlw	255
  2716  0004EA  0100               	movlb	0	; () banked
  2717  0004EC  1B64               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2718  0004EE  0EFF               	movlw	255
  2719  0004F0  0100               	movlb	0	; () banked
  2720  0004F2  1B65               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2721  0004F4  0E01               	movlw	1
  2722  0004F6  0100               	movlb	0	; () banked
  2723  0004F8  2763               	addwf	___ftadd@f1& (0+255),f,b
  2724  0004FA  0E00               	movlw	0
  2725  0004FC  0100               	movlb	0	; () banked
  2726  0004FE  2364               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2727  000500  0E00               	movlw	0
  2728  000502  0100               	movlb	0	; () banked
  2729  000504  2365               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2730  000506                     l685:
  2731                           
  2732                           ; BSR set to: 0
  2733  000506  0100               	movlb	0	; () banked
  2734  000508  AD6C               	btfss	___ftadd@sign& (0+255),6,b
  2735  00050A  D012               	goto	l2317
  2736                           
  2737                           ; BSR set to: 0
  2738  00050C  0EFF               	movlw	255
  2739  00050E  0100               	movlb	0	; () banked
  2740  000510  1B66               	xorwf	___ftadd@f2& (0+255),f,b
  2741  000512  0EFF               	movlw	255
  2742  000514  0100               	movlb	0	; () banked
  2743  000516  1B67               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2744  000518  0EFF               	movlw	255
  2745  00051A  0100               	movlb	0	; () banked
  2746  00051C  1B68               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2747  00051E  0E01               	movlw	1
  2748  000520  0100               	movlb	0	; () banked
  2749  000522  2766               	addwf	___ftadd@f2& (0+255),f,b
  2750  000524  0E00               	movlw	0
  2751  000526  0100               	movlb	0	; () banked
  2752  000528  2367               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2753  00052A  0E00               	movlw	0
  2754  00052C  0100               	movlb	0	; () banked
  2755  00052E  2368               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2756  000530                     l2317:
  2757                           
  2758                           ; BSR set to: 0
  2759  000530  0E00               	movlw	0
  2760  000532  0100               	movlb	0	; () banked
  2761  000534  6F6C               	movwf	___ftadd@sign& (0+255),b
  2762                           
  2763                           ; BSR set to: 0
  2764  000536  0100               	movlb	0	; () banked
  2765  000538  5163               	movf	___ftadd@f1& (0+255),w,b
  2766  00053A  0100               	movlb	0	; () banked
  2767  00053C  2766               	addwf	___ftadd@f2& (0+255),f,b
  2768  00053E  0100               	movlb	0	; () banked
  2769  000540  5164               	movf	(___ftadd@f1+1)& (0+255),w,b
  2770  000542  0100               	movlb	0	; () banked
  2771  000544  2367               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2772  000546  0100               	movlb	0	; () banked
  2773  000548  5165               	movf	(___ftadd@f1+2)& (0+255),w,b
  2774  00054A  0100               	movlb	0	; () banked
  2775  00054C  2368               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2776                           
  2777                           ; BSR set to: 0
  2778  00054E  0100               	movlb	0	; () banked
  2779  000550  AF68               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2780  000552  D015               	goto	l2327
  2781                           
  2782                           ; BSR set to: 0
  2783  000554  0EFF               	movlw	255
  2784  000556  0100               	movlb	0	; () banked
  2785  000558  1B66               	xorwf	___ftadd@f2& (0+255),f,b
  2786  00055A  0EFF               	movlw	255
  2787  00055C  0100               	movlb	0	; () banked
  2788  00055E  1B67               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2789  000560  0EFF               	movlw	255
  2790  000562  0100               	movlb	0	; () banked
  2791  000564  1B68               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2792  000566  0E01               	movlw	1
  2793  000568  0100               	movlb	0	; () banked
  2794  00056A  2766               	addwf	___ftadd@f2& (0+255),f,b
  2795  00056C  0E00               	movlw	0
  2796  00056E  0100               	movlb	0	; () banked
  2797  000570  2367               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2798  000572  0E00               	movlw	0
  2799  000574  0100               	movlb	0	; () banked
  2800  000576  2368               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2801                           
  2802                           ; BSR set to: 0
  2803  000578  0E01               	movlw	1
  2804  00057A  0100               	movlb	0	; () banked
  2805  00057C  6F6C               	movwf	___ftadd@sign& (0+255),b
  2806  00057E                     l2327:
  2807                           
  2808                           ; BSR set to: 0
  2809  00057E  C066  F010         	movff	___ftadd@f2,___ftpack@arg
  2810  000582  C067  F011         	movff	___ftadd@f2+1,___ftpack@arg+1
  2811  000586  C068  F012         	movff	___ftadd@f2+2,___ftpack@arg+2
  2812  00058A  C06E  F013         	movff	___ftadd@exp1,___ftpack@exp
  2813  00058E  C06C  F014         	movff	___ftadd@sign,___ftpack@sign
  2814  000592  EC17  F007         	call	___ftpack	;wreg free
  2815  000596  C010  F063         	movff	?___ftpack,?___ftadd
  2816  00059A  C011  F064         	movff	?___ftpack+1,?___ftadd+1
  2817  00059E  C012  F065         	movff	?___ftpack+2,?___ftadd+2
  2818  0005A2  0012               	return	
  2819  0005A4                     __end_of___ftadd:
  2820                           	opt stack 0
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           prodh	equ	0xFF4
  2826                           prodl	equ	0xFF3
  2827                           intcon	equ	0xFF2
  2828                           intcon2	equ	0xFF1
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           status	equ	0xFD8
  2832                           
  2833 ;; *************** function _EUSART1_Write *****************
  2834 ;; Defined at:
  2835 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  txData          1    wreg     unsigned char 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  txData          1   15[COMRAM] unsigned char 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;Total ram usage:        1 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    4
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_TempAcquisition
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text18
  2864  001338                     __ptext18:
  2865                           	opt stack 0
  2866  001338                     _EUSART1_Write:
  2867                           	opt stack 23
  2868                           
  2869                           ;incstack = 0
  2870                           ;EUSART1_Write@txData stored from wreg
  2871  001338  6E10               	movwf	EUSART1_Write@txData,c
  2872  00133A                     l224:
  2873  00133A  A89E               	btfss	3998,4,c	;volatile
  2874  00133C  D7FE               	goto	l224
  2875                           
  2876                           ;eusart1.c: 101: }
  2877                           ;eusart1.c: 103: TXREG1 = txData;
  2878  00133E  C010  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2879  001342  0012               	return		;funcret
  2880  001344                     __end_of_EUSART1_Write:
  2881                           	opt stack 0
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           prodh	equ	0xFF4
  2887                           prodl	equ	0xFF3
  2888                           intcon	equ	0xFF2
  2889                           intcon2	equ	0xFF1
  2890                           postinc0	equ	0xFEE
  2891                           wreg	equ	0xFE8
  2892                           status	equ	0xFD8
  2893                           
  2894 ;; *************** function _ADC_GetConversion *****************
  2895 ;; Defined at:
  2896 ;;		line 108 in file "mcc_generated_files/adc.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  channel         1    wreg     enum E6986
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  channel         1   19[COMRAM] enum E6986
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  2   15[COMRAM] unsigned int 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;Total ram usage:        5 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    4
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_TempAcquisition
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text19
  2925  00114C                     __ptext19:
  2926                           	opt stack 0
  2927  00114C                     _ADC_GetConversion:
  2928                           	opt stack 23
  2929                           
  2930                           ;incstack = 0
  2931                           ;ADC_GetConversion@channel stored from wreg
  2932  00114C  6E14               	movwf	ADC_GetConversion@channel,c
  2933                           
  2934                           ;adc.c: 111: ADCON0bits.CHS = channel;
  2935  00114E  C014  F012         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2936  001152  4612               	rlncf	??_ADC_GetConversion,f,c
  2937  001154  4612               	rlncf	??_ADC_GetConversion,f,c
  2938  001156  50C2               	movf	4034,w,c	;volatile
  2939  001158  1812               	xorwf	??_ADC_GetConversion,w,c
  2940  00115A  0B83               	andlw	-125
  2941  00115C  1812               	xorwf	??_ADC_GetConversion,w,c
  2942  00115E  6EC2               	movwf	4034,c	;volatile
  2943                           
  2944                           ;adc.c: 114: ADCON0bits.ADON = 1;
  2945  001160  80C2               	bsf	4034,0,c	;volatile
  2946                           
  2947                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
  2948  001162  82C2               	bsf	4034,1,c	;volatile
  2949  001164                     l178:
  2950  001164  B2C2               	btfsc	4034,1,c	;volatile
  2951  001166  D7FE               	goto	l178
  2952                           
  2953                           ;adc.c: 122: }
  2954                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
  2955  001168  50C4               	movf	4036,w,c	;volatile
  2956  00116A  6E13               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  2957  00116C  6A12               	clrf	??_ADC_GetConversion& (0+255),c
  2958  00116E  50C3               	movf	4035,w,c	;volatile
  2959  001170  2412               	addwf	??_ADC_GetConversion,w,c
  2960  001172  6E10               	movwf	?_ADC_GetConversion,c
  2961  001174  0E00               	movlw	0
  2962  001176  2013               	addwfc	??_ADC_GetConversion+1,w,c
  2963  001178  6E11               	movwf	?_ADC_GetConversion+1,c
  2964  00117A  0012               	return	
  2965  00117C                     __end_of_ADC_GetConversion:
  2966                           	opt stack 0
  2967                           tblptru	equ	0xFF8
  2968                           tblptrh	equ	0xFF7
  2969                           tblptrl	equ	0xFF6
  2970                           tablat	equ	0xFF5
  2971                           prodh	equ	0xFF4
  2972                           prodl	equ	0xFF3
  2973                           intcon	equ	0xFF2
  2974                           intcon2	equ	0xFF1
  2975                           postinc0	equ	0xFEE
  2976                           wreg	equ	0xFE8
  2977                           status	equ	0xFD8
  2978                           
  2979 ;; *************** function _InitHardware *****************
  2980 ;; Defined at:
  2981 ;;		line 22 in file "tasks.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    8
  3002 ;; This function calls:
  3003 ;;		_ADC_SelectChannel
  3004 ;;		_ADC_StartConversion
  3005 ;;		_PID_SetControllerDirection
  3006 ;;		_PID_SetMode
  3007 ;;		_PID_SetOutputLimits
  3008 ;;		_PID_SetPoint
  3009 ;;		_PID_SetSampleTime
  3010 ;;		_PID_SetTunings
  3011 ;;		_TMR2_SetInterruptHandler
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text20
  3018  000EDC                     __ptext20:
  3019                           	opt stack 0
  3020  000EDC                     _InitHardware:
  3021                           	opt stack 22
  3022                           
  3023                           ;tasks.c: 24: TMR2_SetInterruptHandler(TMR2_Tick);
  3024                           
  3025                           ;incstack = 0
  3026  000EDC  0EEC               	movlw	low _TMR2_Tick
  3027  000EDE  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  3028  000EE0  0E0A               	movlw	high _TMR2_Tick
  3029  000EE2  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  3030  000EE4  ECA2  F009         	call	_TMR2_SetInterruptHandler	;wreg free
  3031                           
  3032                           ;tasks.c: 26: ADC_SelectChannel(TEMP_SENSOR);
  3033  000EE8  0E02               	movlw	2
  3034  000EEA  EC6B  F009         	call	_ADC_SelectChannel
  3035                           
  3036                           ;tasks.c: 28: do { LATDbits.LATD7 = 1; } while(0);
  3037  000EEE  8E8C               	bsf	3980,7,c	;volatile
  3038                           
  3039                           ;tasks.c: 29: do { LATDbits.LATD6 = 1; } while(0);
  3040  000EF0  8C8C               	bsf	3980,6,c	;volatile
  3041                           
  3042                           ;tasks.c: 31: PID_SetPoint((int)(100 * 24));
  3043  000EF2  0E09               	movlw	9
  3044  000EF4  6E23               	movwf	PID_SetPoint@newSetPoint+1,c
  3045  000EF6  0E60               	movlw	96
  3046  000EF8  6E22               	movwf	PID_SetPoint@newSetPoint,c
  3047  000EFA  EC52  F009         	call	_PID_SetPoint	;wreg free
  3048                           
  3049                           ;tasks.c: 32: PID_SetTunings(0.1, 0.001, 0);
  3050  000EFE  0ECD               	movlw	205
  3051  000F00  0100               	movlb	0	; () banked
  3052  000F02  6F63               	movwf	PID_SetTunings@Kp& (0+255),b
  3053  000F04  0ECC               	movlw	204
  3054  000F06  0100               	movlb	0	; () banked
  3055  000F08  6F64               	movwf	(PID_SetTunings@Kp+1)& (0+255),b
  3056  000F0A  0E3D               	movlw	61
  3057  000F0C  0100               	movlb	0	; () banked
  3058  000F0E  6F65               	movwf	(PID_SetTunings@Kp+2)& (0+255),b
  3059  000F10  0E12               	movlw	18
  3060  000F12  0100               	movlb	0	; () banked
  3061  000F14  6F66               	movwf	PID_SetTunings@Ki& (0+255),b
  3062  000F16  0E83               	movlw	131
  3063  000F18  0100               	movlb	0	; () banked
  3064  000F1A  6F67               	movwf	(PID_SetTunings@Ki+1)& (0+255),b
  3065  000F1C  0E3A               	movlw	58
  3066  000F1E  0100               	movlb	0	; () banked
  3067  000F20  6F68               	movwf	(PID_SetTunings@Ki+2)& (0+255),b
  3068  000F22  0E00               	movlw	0
  3069  000F24  0100               	movlb	0	; () banked
  3070  000F26  6F69               	movwf	PID_SetTunings@Kd& (0+255),b
  3071  000F28  0E00               	movlw	0
  3072  000F2A  0100               	movlb	0	; () banked
  3073  000F2C  6F6A               	movwf	(PID_SetTunings@Kd+1)& (0+255),b
  3074  000F2E  0E00               	movlw	0
  3075  000F30  0100               	movlb	0	; () banked
  3076  000F32  6F6B               	movwf	(PID_SetTunings@Kd+2)& (0+255),b
  3077  000F34  ECFD  F003         	call	_PID_SetTunings	;wreg free
  3078                           
  3079                           ;tasks.c: 33: PID_SetSampleTime(4000);
  3080  000F38  0E0F               	movlw	15
  3081  000F3A  0100               	movlb	0	; () banked
  3082  000F3C  6F61               	movwf	(PID_SetSampleTime@newSampleTime+1)& (0+255),b
  3083  000F3E  0EA0               	movlw	160
  3084  000F40  6F60               	movwf	PID_SetSampleTime@newSampleTime& (0+255),b
  3085  000F42  ECC0  F006         	call	_PID_SetSampleTime	;wreg free
  3086                           
  3087                           ;tasks.c: 34: PID_SetOutputLimits(5, 80);
  3088  000F46  0E00               	movlw	0
  3089  000F48  6E2C               	movwf	PID_SetOutputLimits@Min+1,c
  3090  000F4A  0E05               	movlw	5
  3091  000F4C  6E2B               	movwf	PID_SetOutputLimits@Min,c
  3092  000F4E  0E00               	movlw	0
  3093  000F50  6E2E               	movwf	PID_SetOutputLimits@Max+1,c
  3094  000F52  0E50               	movlw	80
  3095  000F54  6E2D               	movwf	PID_SetOutputLimits@Max,c
  3096  000F56  EC7F  F004         	call	_PID_SetOutputLimits	;wreg free
  3097                           
  3098                           ;tasks.c: 35: PID_SetControllerDirection(0);
  3099  000F5A  0E00               	movlw	0
  3100  000F5C  6E11               	movwf	PID_SetControllerDirection@Direction+1,c
  3101  000F5E  0E00               	movlw	0
  3102  000F60  6E10               	movwf	PID_SetControllerDirection@Direction,c
  3103  000F62  ECA7  F009         	call	_PID_SetControllerDirection	;wreg free
  3104                           
  3105                           ;tasks.c: 36: PID_SetMode(1);
  3106  000F66  0E00               	movlw	0
  3107  000F68  6E2C               	movwf	PID_SetMode@Mode+1,c
  3108  000F6A  0E01               	movlw	1
  3109  000F6C  6E2B               	movwf	PID_SetMode@Mode,c
  3110  000F6E  ECD6  F008         	call	_PID_SetMode	;wreg free
  3111                           
  3112                           ;tasks.c: 38: ADC_StartConversion();
  3113  000F72  ECB3  F009         	call	_ADC_StartConversion	;wreg free
  3114  000F76  0012               	return		;funcret
  3115  000F78                     __end_of_InitHardware:
  3116                           	opt stack 0
  3117                           tblptru	equ	0xFF8
  3118                           tblptrh	equ	0xFF7
  3119                           tblptrl	equ	0xFF6
  3120                           tablat	equ	0xFF5
  3121                           prodh	equ	0xFF4
  3122                           prodl	equ	0xFF3
  3123                           intcon	equ	0xFF2
  3124                           intcon2	equ	0xFF1
  3125                           postinc0	equ	0xFEE
  3126                           wreg	equ	0xFE8
  3127                           status	equ	0xFD8
  3128                           
  3129 ;; *************** function _TMR2_SetInterruptHandler *****************
  3130 ;; Defined at:
  3131 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  InterruptHan    2   15[COMRAM] PTR void 
  3134 ;;		 -> TMR2_Tick(1), TMR2_DefaultInterruptHandler(1), 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;Total ram usage:        2 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    4
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_TMR2_Initialize
  3157 ;;		_InitHardware
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text21
  3162  001344                     __ptext21:
  3163                           	opt stack 0
  3164  001344                     _TMR2_SetInterruptHandler:
  3165                           	opt stack 24
  3166                           
  3167                           ;tmr2.c: 152: TMR2_InterruptHandler = InterruptHandler;
  3168                           
  3169                           ;incstack = 0
  3170  001344  C010  F0B7         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  3171  001348  C011  F0B8         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  3172  00134C  0012               	return		;funcret
  3173  00134E                     __end_of_TMR2_SetInterruptHandler:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           intcon	equ	0xFF2
  3182                           intcon2	equ	0xFF1
  3183                           postinc0	equ	0xFEE
  3184                           wreg	equ	0xFE8
  3185                           status	equ	0xFD8
  3186                           
  3187 ;; *************** function _PID_SetTunings *****************
  3188 ;; Defined at:
  3189 ;;		line 55 in file "PID.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  Kp              3    3[BANK0 ] void 
  3192 ;;  Ki              3    6[BANK0 ] void 
  3193 ;;  Kd              3    9[BANK0 ] void 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  SampleTimeIn    3   12[BANK0 ] void 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3205 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;Total ram usage:       12 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    6
  3212 ;; This function calls:
  3213 ;;		___awtoft
  3214 ;;		___ftdiv
  3215 ;;		___ftmul
  3216 ;;		___ftneg
  3217 ;; This function is called by:
  3218 ;;		_InitHardware
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text22
  3223  0007FA                     __ptext22:
  3224                           	opt stack 0
  3225  0007FA                     _PID_SetTunings:
  3226                           	opt stack 23
  3227                           
  3228                           ;PID.c: 57: double SampleTimeInSec;
  3229                           ;PID.c: 59: if ((Kp < 0) || (Ki < 0) || (Kd < 0)) return;
  3230                           
  3231                           ;incstack = 0
  3232  0007FA  0100               	movlb	0	; () banked
  3233  0007FC  BF65               	btfsc	(PID_SetTunings@Kp+2)& (0+255),7,b
  3234  0007FE  0012               	return	
  3235                           
  3236                           ; BSR set to: 0
  3237  000800  0100               	movlb	0	; () banked
  3238  000802  BF68               	btfsc	(PID_SetTunings@Ki+2)& (0+255),7,b
  3239  000804  0012               	return	
  3240                           
  3241                           ; BSR set to: 0
  3242  000806  0100               	movlb	0	; () banked
  3243  000808  BF6B               	btfsc	(PID_SetTunings@Kd+2)& (0+255),7,b
  3244  00080A  0012               	return	
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;PID.c: 61: SampleTimeInSec = ((double)SampleTime)/1000;
  3248                           
  3249                           ; BSR set to: 0
  3250                           
  3251                           ; BSR set to: 0
  3252  00080C  C04E  F01E         	movff	_SampleTime,___awtoft@c
  3253  000810  C04F  F01F         	movff	_SampleTime+1,___awtoft@c+1
  3254  000814  EC8A  F008         	call	___awtoft	;wreg free
  3255  000818  C01E  F022         	movff	?___awtoft,___ftdiv@f1
  3256  00081C  C01F  F023         	movff	?___awtoft+1,___ftdiv@f1+1
  3257  000820  C020  F024         	movff	?___awtoft+2,___ftdiv@f1+2
  3258  000824  0E00               	movlw	0
  3259  000826  6E25               	movwf	___ftdiv@f2,c
  3260  000828  0E7A               	movlw	122
  3261  00082A  6E26               	movwf	___ftdiv@f2+1,c
  3262  00082C  0E44               	movlw	68
  3263  00082E  6E27               	movwf	___ftdiv@f2+2,c
  3264  000830  ECEF  F005         	call	___ftdiv	;wreg free
  3265  000834  C022  F06C         	movff	?___ftdiv,PID_SetTunings@SampleTimeInSec
  3266  000838  C023  F06D         	movff	?___ftdiv+1,PID_SetTunings@SampleTimeInSec+1
  3267  00083C  C024  F06E         	movff	?___ftdiv+2,PID_SetTunings@SampleTimeInSec+2
  3268                           
  3269                           ;PID.c: 62: PIDConfig.Kp = Kp;
  3270  000840  C063  F091         	movff	PID_SetTunings@Kp,_PIDConfig+4	;volatile
  3271  000844  C064  F092         	movff	PID_SetTunings@Kp+1,_PIDConfig+5	;volatile
  3272  000848  C065  F093         	movff	PID_SetTunings@Kp+2,_PIDConfig+6	;volatile
  3273                           
  3274                           ;PID.c: 63: PIDConfig.Ki = Ki * SampleTimeInSec;
  3275  00084C  C066  F031         	movff	PID_SetTunings@Ki,___ftmul@f1
  3276  000850  C067  F032         	movff	PID_SetTunings@Ki+1,___ftmul@f1+1
  3277  000854  C068  F033         	movff	PID_SetTunings@Ki+2,___ftmul@f1+2
  3278  000858  C06C  F034         	movff	PID_SetTunings@SampleTimeInSec,___ftmul@f2
  3279  00085C  C06D  F035         	movff	PID_SetTunings@SampleTimeInSec+1,___ftmul@f2+1
  3280  000860  C06E  F036         	movff	PID_SetTunings@SampleTimeInSec+2,___ftmul@f2+2
  3281  000864  ECFC  F004         	call	___ftmul	;wreg free
  3282  000868  C031  F094         	movff	?___ftmul,_PIDConfig+7	;volatile
  3283  00086C  C032  F095         	movff	?___ftmul+1,_PIDConfig+8	;volatile
  3284  000870  C033  F096         	movff	?___ftmul+2,_PIDConfig+9	;volatile
  3285                           
  3286                           ;PID.c: 64: PIDConfig.Kd = Kd / SampleTimeInSec;
  3287  000874  C069  F022         	movff	PID_SetTunings@Kd,___ftdiv@f1
  3288  000878  C06A  F023         	movff	PID_SetTunings@Kd+1,___ftdiv@f1+1
  3289  00087C  C06B  F024         	movff	PID_SetTunings@Kd+2,___ftdiv@f1+2
  3290  000880  C06C  F025         	movff	PID_SetTunings@SampleTimeInSec,___ftdiv@f2
  3291  000884  C06D  F026         	movff	PID_SetTunings@SampleTimeInSec+1,___ftdiv@f2+1
  3292  000888  C06E  F027         	movff	PID_SetTunings@SampleTimeInSec+2,___ftdiv@f2+2
  3293  00088C  ECEF  F005         	call	___ftdiv	;wreg free
  3294  000890  C022  F097         	movff	?___ftdiv,_PIDConfig+10	;volatile
  3295  000894  C023  F098         	movff	?___ftdiv+1,_PIDConfig+11	;volatile
  3296  000898  C024  F099         	movff	?___ftdiv+2,_PIDConfig+12	;volatile
  3297                           
  3298                           ;PID.c: 66: if(controllerDirection == 1)
  3299  00089C  0100               	movlb	0	; () banked
  3300  00089E  05A6               	decf	_controllerDirection& (0+255),w,b
  3301  0008A0  0100               	movlb	0	; () banked
  3302  0008A2  11A7               	iorwf	(_controllerDirection+1)& (0+255),w,b
  3303  0008A4  A4D8               	btfss	status,2,c
  3304  0008A6  0012               	return	
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;PID.c: 67: {
  3308                           ;PID.c: 68: PIDConfig.Kp = (0 - PIDConfig.Kp);
  3309  0008A8  C091  F060         	movff	_PIDConfig+4,___ftneg@f1	;volatile
  3310  0008AC  C092  F061         	movff	_PIDConfig+5,___ftneg@f1+1	;volatile
  3311  0008B0  C093  F062         	movff	_PIDConfig+6,___ftneg@f1+2	;volatile
  3312  0008B4  ECBE  F008         	call	___ftneg	;wreg free
  3313  0008B8  C060  F091         	movff	?___ftneg,_PIDConfig+4	;volatile
  3314  0008BC  C061  F092         	movff	?___ftneg+1,_PIDConfig+5	;volatile
  3315  0008C0  C062  F093         	movff	?___ftneg+2,_PIDConfig+6	;volatile
  3316                           
  3317                           ;PID.c: 69: PIDConfig.Ki = (0 - PIDConfig.Ki);
  3318  0008C4  C094  F060         	movff	_PIDConfig+7,___ftneg@f1	;volatile
  3319  0008C8  C095  F061         	movff	_PIDConfig+8,___ftneg@f1+1	;volatile
  3320  0008CC  C096  F062         	movff	_PIDConfig+9,___ftneg@f1+2	;volatile
  3321  0008D0  ECBE  F008         	call	___ftneg	;wreg free
  3322  0008D4  C060  F094         	movff	?___ftneg,_PIDConfig+7	;volatile
  3323  0008D8  C061  F095         	movff	?___ftneg+1,_PIDConfig+8	;volatile
  3324  0008DC  C062  F096         	movff	?___ftneg+2,_PIDConfig+9	;volatile
  3325                           
  3326                           ;PID.c: 70: PIDConfig.Kd = (0 - PIDConfig.Kd);
  3327  0008E0  C097  F060         	movff	_PIDConfig+10,___ftneg@f1	;volatile
  3328  0008E4  C098  F061         	movff	_PIDConfig+11,___ftneg@f1+1	;volatile
  3329  0008E8  C099  F062         	movff	_PIDConfig+12,___ftneg@f1+2	;volatile
  3330  0008EC  ECBE  F008         	call	___ftneg	;wreg free
  3331  0008F0  C060  F097         	movff	?___ftneg,_PIDConfig+10	;volatile
  3332  0008F4  C061  F098         	movff	?___ftneg+1,_PIDConfig+11	;volatile
  3333  0008F8  C062  F099         	movff	?___ftneg+2,_PIDConfig+12	;volatile
  3334  0008FC  0012               	return	
  3335  0008FE                     __end_of_PID_SetTunings:
  3336                           	opt stack 0
  3337                           tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           prodh	equ	0xFF4
  3342                           prodl	equ	0xFF3
  3343                           intcon	equ	0xFF2
  3344                           intcon2	equ	0xFF1
  3345                           postinc0	equ	0xFEE
  3346                           wreg	equ	0xFE8
  3347                           status	equ	0xFD8
  3348                           
  3349 ;; *************** function ___ftneg *****************
  3350 ;; Defined at:
  3351 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftneg.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  f1              3    0[BANK0 ] float 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  3    0[BANK0 ] float 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3365 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;Total ram usage:        3 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    4
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_PID_Control
  3376 ;;		_PID_SetTunings
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text23
  3381  00117C                     __ptext23:
  3382                           	opt stack 0
  3383  00117C                     ___ftneg:
  3384                           	opt stack 22
  3385                           
  3386                           ;incstack = 0
  3387  00117C  0100               	movlb	0	; () banked
  3388  00117E  5160               	movf	___ftneg@f1& (0+255),w,b
  3389  001180  0100               	movlb	0	; () banked
  3390  001182  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  3391  001184  0100               	movlb	0	; () banked
  3392  001186  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  3393  001188  B4D8               	btfsc	status,2,c
  3394  00118A  D009               	goto	l718
  3395                           
  3396                           ; BSR set to: 0
  3397  00118C  0E00               	movlw	0
  3398  00118E  0100               	movlb	0	; () banked
  3399  001190  1B60               	xorwf	___ftneg@f1& (0+255),f,b
  3400  001192  0E00               	movlw	0
  3401  001194  0100               	movlb	0	; () banked
  3402  001196  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  3403  001198  0E80               	movlw	128
  3404  00119A  0100               	movlb	0	; () banked
  3405  00119C  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  3406  00119E                     l718:
  3407                           
  3408                           ; BSR set to: 0
  3409  00119E  C060  F060         	movff	___ftneg@f1,?___ftneg
  3410  0011A2  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
  3411  0011A6  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
  3412                           
  3413                           ; BSR set to: 0
  3414  0011AA  0012               	return		;funcret
  3415  0011AC                     __end_of___ftneg:
  3416                           	opt stack 0
  3417                           tblptru	equ	0xFF8
  3418                           tblptrh	equ	0xFF7
  3419                           tblptrl	equ	0xFF6
  3420                           tablat	equ	0xFF5
  3421                           prodh	equ	0xFF4
  3422                           prodl	equ	0xFF3
  3423                           intcon	equ	0xFF2
  3424                           intcon2	equ	0xFF1
  3425                           postinc0	equ	0xFEE
  3426                           wreg	equ	0xFE8
  3427                           status	equ	0xFD8
  3428                           
  3429 ;; *************** function _PID_SetSampleTime *****************
  3430 ;; Defined at:
  3431 ;;		line 73 in file "PID.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  newSampleTim    2    0[BANK0 ] int 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  ratio           3    2[BANK0 ] int 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;Total ram usage:        5 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    6
  3452 ;; This function calls:
  3453 ;;		___awtoft
  3454 ;;		___ftdiv
  3455 ;;		___ftmul
  3456 ;; This function is called by:
  3457 ;;		_InitHardware
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text24
  3462  000D80                     __ptext24:
  3463                           	opt stack 0
  3464  000D80                     _PID_SetSampleTime:
  3465                           	opt stack 23
  3466                           
  3467                           ;PID.c: 75: if (newSampleTime > 0)
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;incstack = 0
  3471  000D80  0100               	movlb	0	; () banked
  3472  000D82  BF61               	btfsc	(PID_SetSampleTime@newSampleTime+1)& (0+255),7,b
  3473  000D84  0012               	return	
  3474  000D86  0100               	movlb	0	; () banked
  3475  000D88  5161               	movf	(PID_SetSampleTime@newSampleTime+1)& (0+255),w,b
  3476  000D8A  E104               	bnz	u2640
  3477  000D8C  0100               	movlb	0	; () banked
  3478  000D8E  0560               	decf	PID_SetSampleTime@newSampleTime& (0+255),w,b
  3479  000D90  A0D8               	btfss	status,0,c
  3480  000D92  0012               	return	
  3481  000D94                     u2640:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;PID.c: 76: {
  3485                           ;PID.c: 77: double ratio = (double)newSampleTime / (double)SampleTime;
  3486  000D94  C060  F01E         	movff	PID_SetSampleTime@newSampleTime,___awtoft@c
  3487  000D98  C061  F01F         	movff	PID_SetSampleTime@newSampleTime+1,___awtoft@c+1
  3488  000D9C  EC8A  F008         	call	___awtoft	;wreg free
  3489  000DA0  C01E  F022         	movff	?___awtoft,___ftdiv@f1
  3490  000DA4  C01F  F023         	movff	?___awtoft+1,___ftdiv@f1+1
  3491  000DA8  C020  F024         	movff	?___awtoft+2,___ftdiv@f1+2
  3492  000DAC  C04E  F01E         	movff	_SampleTime,___awtoft@c
  3493  000DB0  C04F  F01F         	movff	_SampleTime+1,___awtoft@c+1
  3494  000DB4  EC8A  F008         	call	___awtoft	;wreg free
  3495  000DB8  C01E  F025         	movff	?___awtoft,___ftdiv@f2
  3496  000DBC  C01F  F026         	movff	?___awtoft+1,___ftdiv@f2+1
  3497  000DC0  C020  F027         	movff	?___awtoft+2,___ftdiv@f2+2
  3498  000DC4  ECEF  F005         	call	___ftdiv	;wreg free
  3499  000DC8  C022  F062         	movff	?___ftdiv,PID_SetSampleTime@ratio
  3500  000DCC  C023  F063         	movff	?___ftdiv+1,PID_SetSampleTime@ratio+1
  3501  000DD0  C024  F064         	movff	?___ftdiv+2,PID_SetSampleTime@ratio+2
  3502                           
  3503                           ;PID.c: 78: PIDConfig.Ki *= ratio;
  3504  000DD4  C094  F031         	movff	_PIDConfig+7,___ftmul@f1	;volatile
  3505  000DD8  C095  F032         	movff	_PIDConfig+8,___ftmul@f1+1	;volatile
  3506  000DDC  C096  F033         	movff	_PIDConfig+9,___ftmul@f1+2	;volatile
  3507  000DE0  C062  F034         	movff	PID_SetSampleTime@ratio,___ftmul@f2
  3508  000DE4  C063  F035         	movff	PID_SetSampleTime@ratio+1,___ftmul@f2+1
  3509  000DE8  C064  F036         	movff	PID_SetSampleTime@ratio+2,___ftmul@f2+2
  3510  000DEC  ECFC  F004         	call	___ftmul	;wreg free
  3511  000DF0  C031  F094         	movff	?___ftmul,_PIDConfig+7	;volatile
  3512  000DF4  C032  F095         	movff	?___ftmul+1,_PIDConfig+8	;volatile
  3513  000DF8  C033  F096         	movff	?___ftmul+2,_PIDConfig+9	;volatile
  3514                           
  3515                           ;PID.c: 79: PIDConfig.Kd /= ratio;
  3516  000DFC  C097  F022         	movff	_PIDConfig+10,___ftdiv@f1	;volatile
  3517  000E00  C098  F023         	movff	_PIDConfig+11,___ftdiv@f1+1	;volatile
  3518  000E04  C099  F024         	movff	_PIDConfig+12,___ftdiv@f1+2	;volatile
  3519  000E08  C062  F025         	movff	PID_SetSampleTime@ratio,___ftdiv@f2
  3520  000E0C  C063  F026         	movff	PID_SetSampleTime@ratio+1,___ftdiv@f2+1
  3521  000E10  C064  F027         	movff	PID_SetSampleTime@ratio+2,___ftdiv@f2+2
  3522  000E14  ECEF  F005         	call	___ftdiv	;wreg free
  3523  000E18  C022  F097         	movff	?___ftdiv,_PIDConfig+10	;volatile
  3524  000E1C  C023  F098         	movff	?___ftdiv+1,_PIDConfig+11	;volatile
  3525  000E20  C024  F099         	movff	?___ftdiv+2,_PIDConfig+12	;volatile
  3526                           
  3527                           ;PID.c: 80: SampleTime = (unsigned long)newSampleTime;
  3528  000E24  C060  F04E         	movff	PID_SetSampleTime@newSampleTime,_SampleTime
  3529  000E28  C061  F04F         	movff	PID_SetSampleTime@newSampleTime+1,_SampleTime+1
  3530  000E2C  0012               	return	
  3531  000E2E                     __end_of_PID_SetSampleTime:
  3532                           	opt stack 0
  3533                           tblptru	equ	0xFF8
  3534                           tblptrh	equ	0xFF7
  3535                           tblptrl	equ	0xFF6
  3536                           tablat	equ	0xFF5
  3537                           prodh	equ	0xFF4
  3538                           prodl	equ	0xFF3
  3539                           intcon	equ	0xFF2
  3540                           intcon2	equ	0xFF1
  3541                           postinc0	equ	0xFEE
  3542                           wreg	equ	0xFE8
  3543                           status	equ	0xFD8
  3544                           
  3545 ;; *************** function ___ftmul *****************
  3546 ;; Defined at:
  3547 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftmul.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  f1              3   48[COMRAM] float 
  3550 ;;  f2              3   51[COMRAM] float 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  f3_as_produc    3   58[COMRAM] unsigned um
  3553 ;;  sign            1   62[COMRAM] unsigned char 
  3554 ;;  cntr            1   61[COMRAM] unsigned char 
  3555 ;;  exp             1   57[COMRAM] unsigned char 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  3   48[COMRAM] float 
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3565 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;Total ram usage:       15 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    5
  3572 ;; This function calls:
  3573 ;;		___ftpack
  3574 ;; This function is called by:
  3575 ;;		_TempAcquisition
  3576 ;;		_PID_Control
  3577 ;;		_PID_SetTunings
  3578 ;;		_PID_SetSampleTime
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text25
  3583  0009F8                     __ptext25:
  3584                           	opt stack 0
  3585  0009F8                     ___ftmul:
  3586                           	opt stack 22
  3587                           
  3588                           ;incstack = 0
  3589  0009F8  C033  F037         	movff	___ftmul@f1+2,??___ftmul
  3590  0009FC  6A38               	clrf	(??___ftmul+1)& (0+255),c
  3591  0009FE  6A39               	clrf	(??___ftmul+2)& (0+255),c
  3592  000A00  3432               	rlcf	___ftmul@f1+1,w,c
  3593  000A02  3637               	rlcf	??___ftmul& (0+255),f,c
  3594  000A04  E301               	bnc	u2401
  3595  000A06  8038               	bsf	(??___ftmul+1)& (0+255),0,c
  3596  000A08                     u2401:
  3597  000A08  5037               	movf	??___ftmul,w,c
  3598  000A0A  6E3A               	movwf	___ftmul@exp,c
  3599  000A0C  503A               	movf	___ftmul@exp,w,c
  3600  000A0E  A4D8               	btfss	status,2,c
  3601  000A10  D007               	goto	l2337
  3602  000A12  0E00               	movlw	0
  3603  000A14  6E31               	movwf	?___ftmul,c
  3604  000A16  0E00               	movlw	0
  3605  000A18  6E32               	movwf	?___ftmul+1,c
  3606  000A1A  0E00               	movlw	0
  3607  000A1C  6E33               	movwf	?___ftmul+2,c
  3608  000A1E  0012               	return	
  3609  000A20                     l2337:
  3610  000A20  C036  F037         	movff	___ftmul@f2+2,??___ftmul
  3611  000A24  6A38               	clrf	(??___ftmul+1)& (0+255),c
  3612  000A26  6A39               	clrf	(??___ftmul+2)& (0+255),c
  3613  000A28  3435               	rlcf	___ftmul@f2+1,w,c
  3614  000A2A  3637               	rlcf	??___ftmul& (0+255),f,c
  3615  000A2C  E301               	bnc	u2421
  3616  000A2E  8038               	bsf	(??___ftmul+1)& (0+255),0,c
  3617  000A30                     u2421:
  3618  000A30  5037               	movf	??___ftmul,w,c
  3619  000A32  6E3F               	movwf	___ftmul@sign,c
  3620  000A34  503F               	movf	___ftmul@sign,w,c
  3621  000A36  A4D8               	btfss	status,2,c
  3622  000A38  D007               	goto	l2343
  3623  000A3A  0E00               	movlw	0
  3624  000A3C  6E31               	movwf	?___ftmul,c
  3625  000A3E  0E00               	movlw	0
  3626  000A40  6E32               	movwf	?___ftmul+1,c
  3627  000A42  0E00               	movlw	0
  3628  000A44  6E33               	movwf	?___ftmul+2,c
  3629  000A46  0012               	return	
  3630  000A48                     l2343:
  3631  000A48  503F               	movf	___ftmul@sign,w,c
  3632  000A4A  0F7B               	addlw	123
  3633  000A4C  263A               	addwf	___ftmul@exp,f,c
  3634  000A4E  C033  F03F         	movff	___ftmul@f1+2,___ftmul@sign
  3635  000A52  5036               	movf	___ftmul@f2+2,w,c
  3636  000A54  1A3F               	xorwf	___ftmul@sign,f,c
  3637  000A56  0E80               	movlw	128
  3638  000A58  163F               	andwf	___ftmul@sign,f,c
  3639  000A5A  8E32               	bsf	___ftmul@f1+1,7,c
  3640  000A5C  8E35               	bsf	___ftmul@f2+1,7,c
  3641  000A5E  0EFF               	movlw	255
  3642  000A60  1634               	andwf	___ftmul@f2,f,c
  3643  000A62  0EFF               	movlw	255
  3644  000A64  1635               	andwf	___ftmul@f2+1,f,c
  3645  000A66  0E00               	movlw	0
  3646  000A68  1636               	andwf	___ftmul@f2+2,f,c
  3647  000A6A  0E00               	movlw	0
  3648  000A6C  6E3B               	movwf	___ftmul@f3_as_product,c
  3649  000A6E  0E00               	movlw	0
  3650  000A70  6E3C               	movwf	___ftmul@f3_as_product+1,c
  3651  000A72  0E00               	movlw	0
  3652  000A74  6E3D               	movwf	___ftmul@f3_as_product+2,c
  3653  000A76  0E07               	movlw	7
  3654  000A78  6E3E               	movwf	___ftmul@cntr,c
  3655  000A7A                     l2357:
  3656  000A7A  A031               	btfss	___ftmul@f1,0,c
  3657  000A7C  D006               	goto	l2361
  3658  000A7E  5034               	movf	___ftmul@f2,w,c
  3659  000A80  263B               	addwf	___ftmul@f3_as_product,f,c
  3660  000A82  5035               	movf	___ftmul@f2+1,w,c
  3661  000A84  223C               	addwfc	___ftmul@f3_as_product+1,f,c
  3662  000A86  5036               	movf	___ftmul@f2+2,w,c
  3663  000A88  223D               	addwfc	___ftmul@f3_as_product+2,f,c
  3664  000A8A                     l2361:
  3665  000A8A  90D8               	bcf	status,0,c
  3666  000A8C  3233               	rrcf	___ftmul@f1+2,f,c
  3667  000A8E  3232               	rrcf	___ftmul@f1+1,f,c
  3668  000A90  3231               	rrcf	___ftmul@f1,f,c
  3669  000A92  90D8               	bcf	status,0,c
  3670  000A94  3634               	rlcf	___ftmul@f2,f,c
  3671  000A96  3635               	rlcf	___ftmul@f2+1,f,c
  3672  000A98  3636               	rlcf	___ftmul@f2+2,f,c
  3673  000A9A  2E3E               	decfsz	___ftmul@cntr,f,c
  3674  000A9C  D7EE               	goto	l2357
  3675  000A9E  0E09               	movlw	9
  3676  000AA0  6E3E               	movwf	___ftmul@cntr,c
  3677  000AA2                     l2367:
  3678  000AA2  A031               	btfss	___ftmul@f1,0,c
  3679  000AA4  D006               	goto	l2371
  3680  000AA6  5034               	movf	___ftmul@f2,w,c
  3681  000AA8  263B               	addwf	___ftmul@f3_as_product,f,c
  3682  000AAA  5035               	movf	___ftmul@f2+1,w,c
  3683  000AAC  223C               	addwfc	___ftmul@f3_as_product+1,f,c
  3684  000AAE  5036               	movf	___ftmul@f2+2,w,c
  3685  000AB0  223D               	addwfc	___ftmul@f3_as_product+2,f,c
  3686  000AB2                     l2371:
  3687  000AB2  90D8               	bcf	status,0,c
  3688  000AB4  3233               	rrcf	___ftmul@f1+2,f,c
  3689  000AB6  3232               	rrcf	___ftmul@f1+1,f,c
  3690  000AB8  3231               	rrcf	___ftmul@f1,f,c
  3691  000ABA  90D8               	bcf	status,0,c
  3692  000ABC  323D               	rrcf	___ftmul@f3_as_product+2,f,c
  3693  000ABE  323C               	rrcf	___ftmul@f3_as_product+1,f,c
  3694  000AC0  323B               	rrcf	___ftmul@f3_as_product,f,c
  3695  000AC2  2E3E               	decfsz	___ftmul@cntr,f,c
  3696  000AC4  D7EE               	goto	l2367
  3697  000AC6  C03B  F010         	movff	___ftmul@f3_as_product,___ftpack@arg
  3698  000ACA  C03C  F011         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3699  000ACE  C03D  F012         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3700  000AD2  C03A  F013         	movff	___ftmul@exp,___ftpack@exp
  3701  000AD6  C03F  F014         	movff	___ftmul@sign,___ftpack@sign
  3702  000ADA  EC17  F007         	call	___ftpack	;wreg free
  3703  000ADE  C010  F031         	movff	?___ftpack,?___ftmul
  3704  000AE2  C011  F032         	movff	?___ftpack+1,?___ftmul+1
  3705  000AE6  C012  F033         	movff	?___ftpack+2,?___ftmul+2
  3706  000AEA  0012               	return	
  3707  000AEC                     __end_of___ftmul:
  3708                           	opt stack 0
  3709                           tblptru	equ	0xFF8
  3710                           tblptrh	equ	0xFF7
  3711                           tblptrl	equ	0xFF6
  3712                           tablat	equ	0xFF5
  3713                           prodh	equ	0xFF4
  3714                           prodl	equ	0xFF3
  3715                           intcon	equ	0xFF2
  3716                           intcon2	equ	0xFF1
  3717                           postinc0	equ	0xFEE
  3718                           wreg	equ	0xFE8
  3719                           status	equ	0xFD8
  3720                           
  3721 ;; *************** function ___ftdiv *****************
  3722 ;; Defined at:
  3723 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  f1              3   33[COMRAM] float 
  3726 ;;  f2              3   36[COMRAM] float 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  f3              3   43[COMRAM] float 
  3729 ;;  sign            1   47[COMRAM] unsigned char 
  3730 ;;  exp             1   46[COMRAM] unsigned char 
  3731 ;;  cntr            1   42[COMRAM] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  3   33[COMRAM] float 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3741 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;Total ram usage:       15 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    5
  3748 ;; This function calls:
  3749 ;;		___ftpack
  3750 ;; This function is called by:
  3751 ;;		_TempAcquisition
  3752 ;;		_PID_SetTunings
  3753 ;;		_PID_SetSampleTime
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text26
  3758  000BDE                     __ptext26:
  3759                           	opt stack 0
  3760  000BDE                     ___ftdiv:
  3761                           	opt stack 22
  3762                           
  3763                           ;incstack = 0
  3764  000BDE  C024  F028         	movff	___ftdiv@f1+2,??___ftdiv
  3765  000BE2  6A29               	clrf	(??___ftdiv+1)& (0+255),c
  3766  000BE4  6A2A               	clrf	(??___ftdiv+2)& (0+255),c
  3767  000BE6  3423               	rlcf	___ftdiv@f1+1,w,c
  3768  000BE8  3628               	rlcf	??___ftdiv& (0+255),f,c
  3769  000BEA  E301               	bnc	u2531
  3770  000BEC  8029               	bsf	(??___ftdiv+1)& (0+255),0,c
  3771  000BEE                     u2531:
  3772  000BEE  5028               	movf	??___ftdiv,w,c
  3773  000BF0  6E2F               	movwf	___ftdiv@exp,c
  3774  000BF2  502F               	movf	___ftdiv@exp,w,c
  3775  000BF4  A4D8               	btfss	status,2,c
  3776  000BF6  D007               	goto	l2429
  3777  000BF8  0E00               	movlw	0
  3778  000BFA  6E22               	movwf	?___ftdiv,c
  3779  000BFC  0E00               	movlw	0
  3780  000BFE  6E23               	movwf	?___ftdiv+1,c
  3781  000C00  0E00               	movlw	0
  3782  000C02  6E24               	movwf	?___ftdiv+2,c
  3783  000C04  0012               	return	
  3784  000C06                     l2429:
  3785  000C06  C027  F028         	movff	___ftdiv@f2+2,??___ftdiv
  3786  000C0A  6A29               	clrf	(??___ftdiv+1)& (0+255),c
  3787  000C0C  6A2A               	clrf	(??___ftdiv+2)& (0+255),c
  3788  000C0E  3426               	rlcf	___ftdiv@f2+1,w,c
  3789  000C10  3628               	rlcf	??___ftdiv& (0+255),f,c
  3790  000C12  E301               	bnc	u2551
  3791  000C14  8029               	bsf	(??___ftdiv+1)& (0+255),0,c
  3792  000C16                     u2551:
  3793  000C16  5028               	movf	??___ftdiv,w,c
  3794  000C18  6E30               	movwf	___ftdiv@sign,c
  3795  000C1A  5030               	movf	___ftdiv@sign,w,c
  3796  000C1C  A4D8               	btfss	status,2,c
  3797  000C1E  D007               	goto	l2435
  3798  000C20  0E00               	movlw	0
  3799  000C22  6E22               	movwf	?___ftdiv,c
  3800  000C24  0E00               	movlw	0
  3801  000C26  6E23               	movwf	?___ftdiv+1,c
  3802  000C28  0E00               	movlw	0
  3803  000C2A  6E24               	movwf	?___ftdiv+2,c
  3804  000C2C  0012               	return	
  3805  000C2E                     l2435:
  3806  000C2E  0E00               	movlw	0
  3807  000C30  6E2C               	movwf	___ftdiv@f3,c
  3808  000C32  0E00               	movlw	0
  3809  000C34  6E2D               	movwf	___ftdiv@f3+1,c
  3810  000C36  0E00               	movlw	0
  3811  000C38  6E2E               	movwf	___ftdiv@f3+2,c
  3812  000C3A  5030               	movf	___ftdiv@sign,w,c
  3813  000C3C  0F89               	addlw	137
  3814  000C3E  5E2F               	subwf	___ftdiv@exp,f,c
  3815  000C40  C024  F030         	movff	___ftdiv@f1+2,___ftdiv@sign
  3816  000C44  5027               	movf	___ftdiv@f2+2,w,c
  3817  000C46  1A30               	xorwf	___ftdiv@sign,f,c
  3818  000C48  0E80               	movlw	128
  3819  000C4A  1630               	andwf	___ftdiv@sign,f,c
  3820  000C4C  8E23               	bsf	___ftdiv@f1+1,7,c
  3821  000C4E  0EFF               	movlw	255
  3822  000C50  1622               	andwf	___ftdiv@f1,f,c
  3823  000C52  0EFF               	movlw	255
  3824  000C54  1623               	andwf	___ftdiv@f1+1,f,c
  3825  000C56  0E00               	movlw	0
  3826  000C58  1624               	andwf	___ftdiv@f1+2,f,c
  3827  000C5A  8E26               	bsf	___ftdiv@f2+1,7,c
  3828  000C5C  0EFF               	movlw	255
  3829  000C5E  1625               	andwf	___ftdiv@f2,f,c
  3830  000C60  0EFF               	movlw	255
  3831  000C62  1626               	andwf	___ftdiv@f2+1,f,c
  3832  000C64  0E00               	movlw	0
  3833  000C66  1627               	andwf	___ftdiv@f2+2,f,c
  3834  000C68  0E18               	movlw	24
  3835  000C6A  6E2B               	movwf	___ftdiv@cntr,c
  3836  000C6C                     l2455:
  3837  000C6C  90D8               	bcf	status,0,c
  3838  000C6E  362C               	rlcf	___ftdiv@f3,f,c
  3839  000C70  362D               	rlcf	___ftdiv@f3+1,f,c
  3840  000C72  362E               	rlcf	___ftdiv@f3+2,f,c
  3841  000C74  5025               	movf	___ftdiv@f2,w,c
  3842  000C76  5C22               	subwf	___ftdiv@f1,w,c
  3843  000C78  5026               	movf	___ftdiv@f2+1,w,c
  3844  000C7A  5823               	subwfb	___ftdiv@f1+1,w,c
  3845  000C7C  5027               	movf	___ftdiv@f2+2,w,c
  3846  000C7E  5824               	subwfb	___ftdiv@f1+2,w,c
  3847  000C80  A0D8               	btfss	status,0,c
  3848  000C82  D007               	goto	l696
  3849  000C84  5025               	movf	___ftdiv@f2,w,c
  3850  000C86  5E22               	subwf	___ftdiv@f1,f,c
  3851  000C88  5026               	movf	___ftdiv@f2+1,w,c
  3852  000C8A  5A23               	subwfb	___ftdiv@f1+1,f,c
  3853  000C8C  5027               	movf	___ftdiv@f2+2,w,c
  3854  000C8E  5A24               	subwfb	___ftdiv@f1+2,f,c
  3855  000C90  802C               	bsf	___ftdiv@f3,0,c
  3856  000C92                     l696:
  3857  000C92  90D8               	bcf	status,0,c
  3858  000C94  3622               	rlcf	___ftdiv@f1,f,c
  3859  000C96  3623               	rlcf	___ftdiv@f1+1,f,c
  3860  000C98  3624               	rlcf	___ftdiv@f1+2,f,c
  3861  000C9A  2E2B               	decfsz	___ftdiv@cntr,f,c
  3862  000C9C  D7E7               	goto	l2455
  3863  000C9E  C02C  F010         	movff	___ftdiv@f3,___ftpack@arg
  3864  000CA2  C02D  F011         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3865  000CA6  C02E  F012         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3866  000CAA  C02F  F013         	movff	___ftdiv@exp,___ftpack@exp
  3867  000CAE  C030  F014         	movff	___ftdiv@sign,___ftpack@sign
  3868  000CB2  EC17  F007         	call	___ftpack	;wreg free
  3869  000CB6  C010  F022         	movff	?___ftpack,?___ftdiv
  3870  000CBA  C011  F023         	movff	?___ftpack+1,?___ftdiv+1
  3871  000CBE  C012  F024         	movff	?___ftpack+2,?___ftdiv+2
  3872  000CC2  0012               	return	
  3873  000CC4                     __end_of___ftdiv:
  3874                           	opt stack 0
  3875                           tblptru	equ	0xFF8
  3876                           tblptrh	equ	0xFF7
  3877                           tblptrl	equ	0xFF6
  3878                           tablat	equ	0xFF5
  3879                           prodh	equ	0xFF4
  3880                           prodl	equ	0xFF3
  3881                           intcon	equ	0xFF2
  3882                           intcon2	equ	0xFF1
  3883                           postinc0	equ	0xFEE
  3884                           wreg	equ	0xFE8
  3885                           status	equ	0xFD8
  3886                           
  3887 ;; *************** function _PID_SetPoint *****************
  3888 ;; Defined at:
  3889 ;;		line 51 in file "PID.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  newSetPoint     2   33[COMRAM] int 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;Total ram usage:        2 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    6
  3910 ;; This function calls:
  3911 ;;		___awtoft
  3912 ;; This function is called by:
  3913 ;;		_InitHardware
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text27
  3918  0012A4                     __ptext27:
  3919                           	opt stack 0
  3920  0012A4                     _PID_SetPoint:
  3921                           	opt stack 23
  3922                           
  3923                           ;PID.c: 53: PIDConfig.SetPoint = newSetPoint;
  3924                           
  3925                           ;incstack = 0
  3926  0012A4  C022  F01E         	movff	PID_SetPoint@newSetPoint,___awtoft@c
  3927  0012A8  C023  F01F         	movff	PID_SetPoint@newSetPoint+1,___awtoft@c+1
  3928  0012AC  EC8A  F008         	call	___awtoft	;wreg free
  3929  0012B0  C01E  F09A         	movff	?___awtoft,_PIDConfig+13	;volatile
  3930  0012B4  C01F  F09B         	movff	?___awtoft+1,_PIDConfig+14	;volatile
  3931  0012B8  C020  F09C         	movff	?___awtoft+2,_PIDConfig+15	;volatile
  3932  0012BC  0012               	return		;funcret
  3933  0012BE                     __end_of_PID_SetPoint:
  3934                           	opt stack 0
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           prodh	equ	0xFF4
  3940                           prodl	equ	0xFF3
  3941                           intcon	equ	0xFF2
  3942                           intcon2	equ	0xFF1
  3943                           postinc0	equ	0xFEE
  3944                           wreg	equ	0xFE8
  3945                           status	equ	0xFD8
  3946                           
  3947 ;; *************** function _PID_SetOutputLimits *****************
  3948 ;; Defined at:
  3949 ;;		line 83 in file "PID.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  Min             2   42[COMRAM] int 
  3952 ;;  Max             2   44[COMRAM] int 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;Total ram usage:        5 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    6
  3971 ;; This function calls:
  3972 ;;		___awtoft
  3973 ;;		___ftge
  3974 ;; This function is called by:
  3975 ;;		_InitHardware
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text28
  3980  0008FE                     __ptext28:
  3981                           	opt stack 0
  3982  0008FE                     _PID_SetOutputLimits:
  3983                           	opt stack 23
  3984                           
  3985                           ;PID.c: 85: if(Min > Max) return;
  3986                           
  3987                           ;incstack = 0
  3988  0008FE  502B               	movf	PID_SetOutputLimits@Min,w,c
  3989  000900  5C2D               	subwf	PID_SetOutputLimits@Max,w,c
  3990  000902  502E               	movf	PID_SetOutputLimits@Max+1,w,c
  3991  000904  0A80               	xorlw	128
  3992  000906  6E2F               	movwf	??_PID_SetOutputLimits& (0+255),c
  3993  000908  502C               	movf	PID_SetOutputLimits@Min+1,w,c
  3994  00090A  0A80               	xorlw	128
  3995  00090C  582F               	subwfb	??_PID_SetOutputLimits& (0+255),w,c
  3996  00090E  A0D8               	btfss	status,0,c
  3997  000910  0012               	return	
  3998                           
  3999                           ;PID.c: 86: PIDConfig.Min = Min;
  4000  000912  C02B  F08D         	movff	PID_SetOutputLimits@Min,_PIDConfig	;volatile
  4001  000916  C02C  F08E         	movff	PID_SetOutputLimits@Min+1,_PIDConfig+1	;volatile
  4002                           
  4003                           ;PID.c: 87: PIDConfig.Max = Max;
  4004  00091A  C02D  F08F         	movff	PID_SetOutputLimits@Max,_PIDConfig+2	;volatile
  4005  00091E  C02E  F090         	movff	PID_SetOutputLimits@Max+1,_PIDConfig+3	;volatile
  4006                           
  4007                           ;PID.c: 89: if (Output > PIDConfig.Max) Output = PIDConfig.Max;
  4008  000922  0100               	movlb	0	; () banked
  4009  000924  51A8               	movf	_Output& (0+255),w,b
  4010  000926  0100               	movlb	0	; () banked
  4011  000928  5D8F               	subwf	(_PIDConfig+2)& (0+255),w,b	;volatile
  4012  00092A  0100               	movlb	0	; () banked
  4013  00092C  5190               	movf	(_PIDConfig+3)& (0+255),w,b	;volatile
  4014  00092E  0A80               	xorlw	128
  4015  000930  6E2F               	movwf	??_PID_SetOutputLimits& (0+255),c
  4016  000932  0100               	movlb	0	; () banked
  4017  000934  51A9               	movf	(_Output+1)& (0+255),w,b
  4018  000936  0A80               	xorlw	128
  4019  000938  582F               	subwfb	??_PID_SetOutputLimits& (0+255),w,c
  4020  00093A  B0D8               	btfsc	status,0,c
  4021  00093C  D005               	goto	l2525
  4022                           
  4023                           ; BSR set to: 0
  4024  00093E  C08F  F0A8         	movff	_PIDConfig+2,_Output	;volatile
  4025  000942  C090  F0A9         	movff	_PIDConfig+3,_Output+1	;volatile
  4026  000946  D012               	goto	l2529
  4027  000948                     l2525:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;PID.c: 90: else if (Output < PIDConfig.Min) Output = PIDConfig.Min;
  4031  000948  0100               	movlb	0	; () banked
  4032  00094A  518D               	movf	_PIDConfig& (0+255),w,b	;volatile
  4033  00094C  0100               	movlb	0	; () banked
  4034  00094E  5DA8               	subwf	_Output& (0+255),w,b
  4035  000950  0100               	movlb	0	; () banked
  4036  000952  51A9               	movf	(_Output+1)& (0+255),w,b
  4037  000954  0A80               	xorlw	128
  4038  000956  6E2F               	movwf	??_PID_SetOutputLimits& (0+255),c
  4039  000958  0100               	movlb	0	; () banked
  4040  00095A  518E               	movf	(_PIDConfig+1)& (0+255),w,b	;volatile
  4041  00095C  0A80               	xorlw	128
  4042  00095E  582F               	subwfb	??_PID_SetOutputLimits& (0+255),w,c
  4043  000960  B0D8               	btfsc	status,0,c
  4044  000962  D004               	goto	l2529
  4045                           
  4046                           ; BSR set to: 0
  4047  000964  C08D  F0A8         	movff	_PIDConfig,_Output	;volatile
  4048  000968  C08E  F0A9         	movff	_PIDConfig+1,_Output+1	;volatile
  4049  00096C                     l2529:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;PID.c: 92: if (ITerm > PIDConfig.Max) ITerm= PIDConfig.Max;
  4053  00096C  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  4054  000970  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  4055  000974  EC8A  F008         	call	___awtoft	;wreg free
  4056  000978  C01E  F022         	movff	?___awtoft,___ftge@ff1
  4057  00097C  C01F  F023         	movff	?___awtoft+1,___ftge@ff1+1
  4058  000980  C020  F024         	movff	?___awtoft+2,___ftge@ff1+2
  4059  000984  C0A0  F025         	movff	_ITerm,___ftge@ff2
  4060  000988  C0A1  F026         	movff	_ITerm+1,___ftge@ff2+1
  4061  00098C  C0A2  F027         	movff	_ITerm+2,___ftge@ff2+2
  4062  000990  ECBC  F007         	call	___ftge	;wreg free
  4063  000994  B0D8               	btfsc	status,0,c
  4064  000996  D00D               	goto	l2533
  4065  000998  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  4066  00099C  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  4067  0009A0  EC8A  F008         	call	___awtoft	;wreg free
  4068  0009A4  C01E  F0A0         	movff	?___awtoft,_ITerm
  4069  0009A8  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  4070  0009AC  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  4071  0009B0  0012               	return	
  4072  0009B2                     l2533:
  4073                           
  4074                           ;PID.c: 93: else if (ITerm < PIDConfig.Min) ITerm= PIDConfig.Min;
  4075  0009B2  C0A0  F022         	movff	_ITerm,___ftge@ff1
  4076  0009B6  C0A1  F023         	movff	_ITerm+1,___ftge@ff1+1
  4077  0009BA  C0A2  F024         	movff	_ITerm+2,___ftge@ff1+2
  4078  0009BE  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  4079  0009C2  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  4080  0009C6  EC8A  F008         	call	___awtoft	;wreg free
  4081  0009CA  C01E  F025         	movff	?___awtoft,___ftge@ff2
  4082  0009CE  C01F  F026         	movff	?___awtoft+1,___ftge@ff2+1
  4083  0009D2  C020  F027         	movff	?___awtoft+2,___ftge@ff2+2
  4084  0009D6  ECBC  F007         	call	___ftge	;wreg free
  4085  0009DA  B0D8               	btfsc	status,0,c
  4086  0009DC  0012               	return	
  4087  0009DE  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  4088  0009E2  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  4089  0009E6  EC8A  F008         	call	___awtoft	;wreg free
  4090  0009EA  C01E  F0A0         	movff	?___awtoft,_ITerm
  4091  0009EE  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  4092  0009F2  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  4093  0009F6  0012               	return	
  4094  0009F8                     __end_of_PID_SetOutputLimits:
  4095                           	opt stack 0
  4096                           tblptru	equ	0xFF8
  4097                           tblptrh	equ	0xFF7
  4098                           tblptrl	equ	0xFF6
  4099                           tablat	equ	0xFF5
  4100                           prodh	equ	0xFF4
  4101                           prodl	equ	0xFF3
  4102                           intcon	equ	0xFF2
  4103                           intcon2	equ	0xFF1
  4104                           postinc0	equ	0xFEE
  4105                           wreg	equ	0xFE8
  4106                           status	equ	0xFD8
  4107                           
  4108 ;; *************** function _PID_SetMode *****************
  4109 ;; Defined at:
  4110 ;;		line 99 in file "PID.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  Mode            2   42[COMRAM] int 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  newAuto         1   44[COMRAM] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;Total ram usage:        3 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    7
  4131 ;; This function calls:
  4132 ;;		_PID_Initialize
  4133 ;; This function is called by:
  4134 ;;		_InitHardware
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text29
  4139  0011AC                     __ptext29:
  4140                           	opt stack 0
  4141  0011AC                     _PID_SetMode:
  4142                           	opt stack 22
  4143                           
  4144                           ;PID.c: 101: unsigned char newAuto = (Mode == 1);
  4145                           
  4146                           ;incstack = 0
  4147  0011AC  042B               	decf	PID_SetMode@Mode,w,c
  4148  0011AE  102C               	iorwf	PID_SetMode@Mode+1,w,c
  4149  0011B0  A4D8               	btfss	status,2,c
  4150  0011B2  D002               	goto	u2700
  4151  0011B4  0E01               	movlw	1
  4152  0011B6  D001               	goto	u2710
  4153  0011B8                     u2700:
  4154  0011B8  0E00               	movlw	0
  4155  0011BA                     u2710:
  4156  0011BA  6E2D               	movwf	PID_SetMode@newAuto,c
  4157                           
  4158                           ;PID.c: 102: if (newAuto == !inAuto)
  4159  0011BC  0100               	movlb	0	; () banked
  4160  0011BE  51B4               	movf	_inAuto& (0+255),w,b
  4161  0011C0  A4D8               	btfss	status,2,c
  4162  0011C2  D002               	goto	u2720
  4163  0011C4  0E01               	movlw	1
  4164  0011C6  D001               	goto	u2730
  4165  0011C8                     u2720:
  4166  0011C8  0E00               	movlw	0
  4167  0011CA                     u2730:
  4168  0011CA  182D               	xorwf	PID_SetMode@newAuto,w,c
  4169  0011CC  B4D8               	btfsc	status,2,c
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;PID.c: 103: {
  4173                           ;PID.c: 105: PID_Initialize();
  4174  0011CE  EC62  F006         	call	_PID_Initialize	;wreg free
  4175                           
  4176                           ;PID.c: 106: }
  4177                           ;PID.c: 107: inAuto = newAuto;
  4178  0011D2  C02D  F0B4         	movff	PID_SetMode@newAuto,_inAuto
  4179  0011D6  0012               	return		;funcret
  4180  0011D8                     __end_of_PID_SetMode:
  4181                           	opt stack 0
  4182                           tblptru	equ	0xFF8
  4183                           tblptrh	equ	0xFF7
  4184                           tblptrl	equ	0xFF6
  4185                           tablat	equ	0xFF5
  4186                           prodh	equ	0xFF4
  4187                           prodl	equ	0xFF3
  4188                           intcon	equ	0xFF2
  4189                           intcon2	equ	0xFF1
  4190                           postinc0	equ	0xFEE
  4191                           wreg	equ	0xFE8
  4192                           status	equ	0xFD8
  4193                           
  4194 ;; *************** function _PID_Initialize *****************
  4195 ;; Defined at:
  4196 ;;		line 109 in file "PID.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    6
  4217 ;; This function calls:
  4218 ;;		___awtoft
  4219 ;;		___ftge
  4220 ;; This function is called by:
  4221 ;;		_PID_SetMode
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text30
  4226  000CC4                     __ptext30:
  4227                           	opt stack 0
  4228  000CC4                     _PID_Initialize:
  4229                           	opt stack 22
  4230                           
  4231                           ;PID.c: 111: lastInput = Input;
  4232                           
  4233                           ;incstack = 0
  4234  000CC4  C0AA  F01E         	movff	_Input,___awtoft@c
  4235  000CC8  C0AB  F01F         	movff	_Input+1,___awtoft@c+1
  4236  000CCC  EC8A  F008         	call	___awtoft	;wreg free
  4237  000CD0  C01E  F09D         	movff	?___awtoft,_lastInput
  4238  000CD4  C01F  F09E         	movff	?___awtoft+1,_lastInput+1
  4239  000CD8  C020  F09F         	movff	?___awtoft+2,_lastInput+2
  4240                           
  4241                           ;PID.c: 112: ITerm = Output;
  4242  000CDC  C0A8  F01E         	movff	_Output,___awtoft@c
  4243  000CE0  C0A9  F01F         	movff	_Output+1,___awtoft@c+1
  4244  000CE4  EC8A  F008         	call	___awtoft	;wreg free
  4245  000CE8  C01E  F0A0         	movff	?___awtoft,_ITerm
  4246  000CEC  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  4247  000CF0  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  4248                           
  4249                           ;PID.c: 113: if (ITerm > PIDConfig.Max) ITerm = PIDConfig.Max;
  4250  000CF4  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  4251  000CF8  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  4252  000CFC  EC8A  F008         	call	___awtoft	;wreg free
  4253  000D00  C01E  F022         	movff	?___awtoft,___ftge@ff1
  4254  000D04  C01F  F023         	movff	?___awtoft+1,___ftge@ff1+1
  4255  000D08  C020  F024         	movff	?___awtoft+2,___ftge@ff1+2
  4256  000D0C  C0A0  F025         	movff	_ITerm,___ftge@ff2
  4257  000D10  C0A1  F026         	movff	_ITerm+1,___ftge@ff2+1
  4258  000D14  C0A2  F027         	movff	_ITerm+2,___ftge@ff2+2
  4259  000D18  ECBC  F007         	call	___ftge	;wreg free
  4260  000D1C  B0D8               	btfsc	status,0,c
  4261  000D1E  D00D               	goto	l2491
  4262  000D20  C08F  F01E         	movff	_PIDConfig+2,___awtoft@c	;volatile
  4263  000D24  C090  F01F         	movff	_PIDConfig+3,___awtoft@c+1	;volatile
  4264  000D28  EC8A  F008         	call	___awtoft	;wreg free
  4265  000D2C  C01E  F0A0         	movff	?___awtoft,_ITerm
  4266  000D30  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  4267  000D34  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  4268  000D38  0012               	return	
  4269  000D3A                     l2491:
  4270                           
  4271                           ;PID.c: 114: else if (ITerm < PIDConfig.Min) ITerm = PIDConfig.Min;
  4272  000D3A  C0A0  F022         	movff	_ITerm,___ftge@ff1
  4273  000D3E  C0A1  F023         	movff	_ITerm+1,___ftge@ff1+1
  4274  000D42  C0A2  F024         	movff	_ITerm+2,___ftge@ff1+2
  4275  000D46  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  4276  000D4A  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  4277  000D4E  EC8A  F008         	call	___awtoft	;wreg free
  4278  000D52  C01E  F025         	movff	?___awtoft,___ftge@ff2
  4279  000D56  C01F  F026         	movff	?___awtoft+1,___ftge@ff2+1
  4280  000D5A  C020  F027         	movff	?___awtoft+2,___ftge@ff2+2
  4281  000D5E  ECBC  F007         	call	___ftge	;wreg free
  4282  000D62  B0D8               	btfsc	status,0,c
  4283  000D64  0012               	return	
  4284  000D66  C08D  F01E         	movff	_PIDConfig,___awtoft@c	;volatile
  4285  000D6A  C08E  F01F         	movff	_PIDConfig+1,___awtoft@c+1	;volatile
  4286  000D6E  EC8A  F008         	call	___awtoft	;wreg free
  4287  000D72  C01E  F0A0         	movff	?___awtoft,_ITerm
  4288  000D76  C01F  F0A1         	movff	?___awtoft+1,_ITerm+1
  4289  000D7A  C020  F0A2         	movff	?___awtoft+2,_ITerm+2
  4290  000D7E  0012               	return	
  4291  000D80                     __end_of_PID_Initialize:
  4292                           	opt stack 0
  4293                           tblptru	equ	0xFF8
  4294                           tblptrh	equ	0xFF7
  4295                           tblptrl	equ	0xFF6
  4296                           tablat	equ	0xFF5
  4297                           prodh	equ	0xFF4
  4298                           prodl	equ	0xFF3
  4299                           intcon	equ	0xFF2
  4300                           intcon2	equ	0xFF1
  4301                           postinc0	equ	0xFEE
  4302                           wreg	equ	0xFE8
  4303                           status	equ	0xFD8
  4304                           
  4305 ;; *************** function ___ftge *****************
  4306 ;; Defined at:
  4307 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftge.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  ff1             3   33[COMRAM] float 
  4310 ;;  ff2             3   36[COMRAM] float 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;		None               void
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4322 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;Total ram usage:        9 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    4
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_PID_Control
  4333 ;;		_PID_SetOutputLimits
  4334 ;;		_PID_Initialize
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text31
  4339  000F78                     __ptext31:
  4340                           	opt stack 0
  4341  000F78                     ___ftge:
  4342                           	opt stack 22
  4343                           
  4344                           ;incstack = 0
  4345  000F78  AE24               	btfss	___ftge@ff1+2,7,c
  4346  000F7A  D016               	goto	l1831
  4347  000F7C  C022  F028         	movff	___ftge@ff1,??___ftge
  4348  000F80  C023  F029         	movff	___ftge@ff1+1,??___ftge+1
  4349  000F84  C024  F02A         	movff	___ftge@ff1+2,??___ftge+2
  4350  000F88  1E28               	comf	??___ftge,f,c
  4351  000F8A  1E29               	comf	??___ftge+1,f,c
  4352  000F8C  1E2A               	comf	??___ftge+2,f,c
  4353  000F8E  2A28               	incf	??___ftge,f,c
  4354  000F90  0E00               	movlw	0
  4355  000F92  2229               	addwfc	??___ftge+1,f,c
  4356  000F94  222A               	addwfc	??___ftge+2,f,c
  4357  000F96  0E00               	movlw	0
  4358  000F98  2428               	addwf	??___ftge,w,c
  4359  000F9A  6E22               	movwf	___ftge@ff1,c
  4360  000F9C  0E00               	movlw	0
  4361  000F9E  2029               	addwfc	??___ftge+1,w,c
  4362  000FA0  6E23               	movwf	___ftge@ff1+1,c
  4363  000FA2  0E80               	movlw	128
  4364  000FA4  202A               	addwfc	??___ftge+2,w,c
  4365  000FA6  6E24               	movwf	___ftge@ff1+2,c
  4366  000FA8                     l1831:
  4367  000FA8  AE27               	btfss	___ftge@ff2+2,7,c
  4368  000FAA  D016               	goto	l1835
  4369  000FAC  C025  F028         	movff	___ftge@ff2,??___ftge
  4370  000FB0  C026  F029         	movff	___ftge@ff2+1,??___ftge+1
  4371  000FB4  C027  F02A         	movff	___ftge@ff2+2,??___ftge+2
  4372  000FB8  1E28               	comf	??___ftge,f,c
  4373  000FBA  1E29               	comf	??___ftge+1,f,c
  4374  000FBC  1E2A               	comf	??___ftge+2,f,c
  4375  000FBE  2A28               	incf	??___ftge,f,c
  4376  000FC0  0E00               	movlw	0
  4377  000FC2  2229               	addwfc	??___ftge+1,f,c
  4378  000FC4  222A               	addwfc	??___ftge+2,f,c
  4379  000FC6  0E00               	movlw	0
  4380  000FC8  2428               	addwf	??___ftge,w,c
  4381  000FCA  6E25               	movwf	___ftge@ff2,c
  4382  000FCC  0E00               	movlw	0
  4383  000FCE  2029               	addwfc	??___ftge+1,w,c
  4384  000FD0  6E26               	movwf	___ftge@ff2+1,c
  4385  000FD2  0E80               	movlw	128
  4386  000FD4  202A               	addwfc	??___ftge+2,w,c
  4387  000FD6  6E27               	movwf	___ftge@ff2+2,c
  4388  000FD8                     l1835:
  4389  000FD8  0E00               	movlw	0
  4390  000FDA  1A22               	xorwf	___ftge@ff1,f,c
  4391  000FDC  0E00               	movlw	0
  4392  000FDE  1A23               	xorwf	___ftge@ff1+1,f,c
  4393  000FE0  0E80               	movlw	128
  4394  000FE2  1A24               	xorwf	___ftge@ff1+2,f,c
  4395  000FE4  0E00               	movlw	0
  4396  000FE6  1A25               	xorwf	___ftge@ff2,f,c
  4397  000FE8  0E00               	movlw	0
  4398  000FEA  1A26               	xorwf	___ftge@ff2+1,f,c
  4399  000FEC  0E80               	movlw	128
  4400  000FEE  1A27               	xorwf	___ftge@ff2+2,f,c
  4401  000FF0  5025               	movf	___ftge@ff2,w,c
  4402  000FF2  5C22               	subwf	___ftge@ff1,w,c
  4403  000FF4  5026               	movf	___ftge@ff2+1,w,c
  4404  000FF6  5823               	subwfb	___ftge@ff1+1,w,c
  4405  000FF8  5027               	movf	___ftge@ff2+2,w,c
  4406  000FFA  5824               	subwfb	___ftge@ff1+2,w,c
  4407  000FFC  B0D8               	btfsc	status,0,c
  4408  000FFE  D002               	goto	l1841
  4409  001000  90D8               	bcf	status,0,c
  4410  001002  0012               	return	
  4411  001004                     l1841:
  4412  001004  80D8               	bsf	status,0,c
  4413  001006  0012               	return	
  4414  001008                     __end_of___ftge:
  4415                           	opt stack 0
  4416                           tblptru	equ	0xFF8
  4417                           tblptrh	equ	0xFF7
  4418                           tblptrl	equ	0xFF6
  4419                           tablat	equ	0xFF5
  4420                           prodh	equ	0xFF4
  4421                           prodl	equ	0xFF3
  4422                           intcon	equ	0xFF2
  4423                           intcon2	equ	0xFF1
  4424                           postinc0	equ	0xFEE
  4425                           wreg	equ	0xFE8
  4426                           status	equ	0xFD8
  4427                           
  4428 ;; *************** function ___awtoft *****************
  4429 ;; Defined at:
  4430 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awtoft.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  c               2   29[COMRAM] int 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  sign            1   32[COMRAM] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  3   29[COMRAM] float 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4444 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;Total ram usage:        4 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    5
  4451 ;; This function calls:
  4452 ;;		___ftpack
  4453 ;; This function is called by:
  4454 ;;		_TempAcquisition
  4455 ;;		_PID_Control
  4456 ;;		_PID_SetPoint
  4457 ;;		_PID_SetTunings
  4458 ;;		_PID_SetSampleTime
  4459 ;;		_PID_SetOutputLimits
  4460 ;;		_PID_Initialize
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text32
  4465  001114                     __ptext32:
  4466                           	opt stack 0
  4467  001114                     ___awtoft:
  4468                           	opt stack 22
  4469                           
  4470                           ;incstack = 0
  4471  001114  0E00               	movlw	0
  4472  001116  6E21               	movwf	___awtoft@sign,c
  4473  001118  AE1F               	btfss	___awtoft@c+1,7,c
  4474  00111A  D006               	goto	l2387
  4475  00111C  6C1E               	negf	___awtoft@c,c
  4476  00111E  1E1F               	comf	___awtoft@c+1,f,c
  4477  001120  B0D8               	btfsc	status,0,c
  4478  001122  2A1F               	incf	___awtoft@c+1,f,c
  4479  001124  0E01               	movlw	1
  4480  001126  6E21               	movwf	___awtoft@sign,c
  4481  001128                     l2387:
  4482  001128  C01E  F010         	movff	___awtoft@c,___ftpack@arg
  4483  00112C  C01F  F011         	movff	___awtoft@c+1,___ftpack@arg+1
  4484  001130  6A12               	clrf	___ftpack@arg+2,c
  4485  001132  0E8E               	movlw	142
  4486  001134  6E13               	movwf	___ftpack@exp,c
  4487  001136  C021  F014         	movff	___awtoft@sign,___ftpack@sign
  4488  00113A  EC17  F007         	call	___ftpack	;wreg free
  4489  00113E  C010  F01E         	movff	?___ftpack,?___awtoft
  4490  001142  C011  F01F         	movff	?___ftpack+1,?___awtoft+1
  4491  001146  C012  F020         	movff	?___ftpack+2,?___awtoft+2
  4492  00114A  0012               	return	
  4493  00114C                     __end_of___awtoft:
  4494                           	opt stack 0
  4495                           tblptru	equ	0xFF8
  4496                           tblptrh	equ	0xFF7
  4497                           tblptrl	equ	0xFF6
  4498                           tablat	equ	0xFF5
  4499                           prodh	equ	0xFF4
  4500                           prodl	equ	0xFF3
  4501                           intcon	equ	0xFF2
  4502                           intcon2	equ	0xFF1
  4503                           postinc0	equ	0xFEE
  4504                           wreg	equ	0xFE8
  4505                           status	equ	0xFD8
  4506                           
  4507 ;; *************** function ___ftpack *****************
  4508 ;; Defined at:
  4509 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\float.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  arg             3   15[COMRAM] unsigned um
  4512 ;;  exp             1   18[COMRAM] unsigned char 
  4513 ;;  sign            1   19[COMRAM] unsigned char 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  3   15[COMRAM] float 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4525 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;Total ram usage:        8 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    4
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		___awtoft
  4536 ;;		___ftadd
  4537 ;;		___ftdiv
  4538 ;;		___ftmul
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text33
  4543  000E2E                     __ptext33:
  4544                           	opt stack 0
  4545  000E2E                     ___ftpack:
  4546                           	opt stack 22
  4547                           
  4548                           ;incstack = 0
  4549  000E2E  5013               	movf	___ftpack@exp,w,c
  4550  000E30  B4D8               	btfsc	status,2,c
  4551  000E32  D005               	goto	l2229
  4552  000E34  5010               	movf	___ftpack@arg,w,c
  4553  000E36  1011               	iorwf	___ftpack@arg+1,w,c
  4554  000E38  1012               	iorwf	___ftpack@arg+2,w,c
  4555  000E3A  A4D8               	btfss	status,2,c
  4556  000E3C  D00C               	goto	l2235
  4557  000E3E                     l2229:
  4558  000E3E  0E00               	movlw	0
  4559  000E40  6E10               	movwf	?___ftpack,c
  4560  000E42  0E00               	movlw	0
  4561  000E44  6E11               	movwf	?___ftpack+1,c
  4562  000E46  0E00               	movlw	0
  4563  000E48  6E12               	movwf	?___ftpack+2,c
  4564  000E4A  0012               	return	
  4565  000E4C                     l2233:
  4566  000E4C  2A13               	incf	___ftpack@exp,f,c
  4567  000E4E  90D8               	bcf	status,0,c
  4568  000E50  3212               	rrcf	___ftpack@arg+2,f,c
  4569  000E52  3211               	rrcf	___ftpack@arg+1,f,c
  4570  000E54  3210               	rrcf	___ftpack@arg,f,c
  4571  000E56                     l2235:
  4572  000E56  0E00               	movlw	0
  4573  000E58  1410               	andwf	___ftpack@arg,w,c
  4574  000E5A  6E15               	movwf	??___ftpack& (0+255),c
  4575  000E5C  0E00               	movlw	0
  4576  000E5E  1411               	andwf	___ftpack@arg+1,w,c
  4577  000E60  6E16               	movwf	(??___ftpack+1)& (0+255),c
  4578  000E62  0EFE               	movlw	254
  4579  000E64  1412               	andwf	___ftpack@arg+2,w,c
  4580  000E66  6E17               	movwf	(??___ftpack+2)& (0+255),c
  4581  000E68  5015               	movf	??___ftpack,w,c
  4582  000E6A  1016               	iorwf	??___ftpack+1,w,c
  4583  000E6C  1017               	iorwf	??___ftpack+2,w,c
  4584  000E6E  B4D8               	btfsc	status,2,c
  4585  000E70  D00C               	goto	l2241
  4586  000E72  D7EC               	goto	l2233
  4587  000E74                     l2237:
  4588  000E74  2A13               	incf	___ftpack@exp,f,c
  4589  000E76  0E01               	movlw	1
  4590  000E78  2610               	addwf	___ftpack@arg,f,c
  4591  000E7A  0E00               	movlw	0
  4592  000E7C  2211               	addwfc	___ftpack@arg+1,f,c
  4593  000E7E  0E00               	movlw	0
  4594  000E80  2212               	addwfc	___ftpack@arg+2,f,c
  4595  000E82  90D8               	bcf	status,0,c
  4596  000E84  3212               	rrcf	___ftpack@arg+2,f,c
  4597  000E86  3211               	rrcf	___ftpack@arg+1,f,c
  4598  000E88  3210               	rrcf	___ftpack@arg,f,c
  4599  000E8A                     l2241:
  4600  000E8A  0E00               	movlw	0
  4601  000E8C  1410               	andwf	___ftpack@arg,w,c
  4602  000E8E  6E15               	movwf	??___ftpack& (0+255),c
  4603  000E90  0E00               	movlw	0
  4604  000E92  1411               	andwf	___ftpack@arg+1,w,c
  4605  000E94  6E16               	movwf	(??___ftpack+1)& (0+255),c
  4606  000E96  0EFF               	movlw	255
  4607  000E98  1412               	andwf	___ftpack@arg+2,w,c
  4608  000E9A  6E17               	movwf	(??___ftpack+2)& (0+255),c
  4609  000E9C  5015               	movf	??___ftpack,w,c
  4610  000E9E  1016               	iorwf	??___ftpack+1,w,c
  4611  000EA0  1017               	iorwf	??___ftpack+2,w,c
  4612  000EA2  B4D8               	btfsc	status,2,c
  4613  000EA4  D006               	goto	l2245
  4614  000EA6  D7E6               	goto	l2237
  4615  000EA8                     l2243:
  4616  000EA8  0613               	decf	___ftpack@exp,f,c
  4617  000EAA  90D8               	bcf	status,0,c
  4618  000EAC  3610               	rlcf	___ftpack@arg,f,c
  4619  000EAE  3611               	rlcf	___ftpack@arg+1,f,c
  4620  000EB0  3612               	rlcf	___ftpack@arg+2,f,c
  4621  000EB2                     l2245:
  4622  000EB2  BE11               	btfsc	___ftpack@arg+1,7,c
  4623  000EB4  D003               	goto	l638
  4624  000EB6  0E02               	movlw	2
  4625  000EB8  6013               	cpfslt	___ftpack@exp,c
  4626  000EBA  D7F6               	goto	l2243
  4627  000EBC                     l638:
  4628  000EBC  A013               	btfss	___ftpack@exp,0,c
  4629  000EBE  9E11               	bcf	___ftpack@arg+1,7,c
  4630  000EC0  90D8               	bcf	status,0,c
  4631  000EC2  3213               	rrcf	___ftpack@exp,f,c
  4632  000EC4  5013               	movf	___ftpack@exp,w,c
  4633  000EC6  1212               	iorwf	___ftpack@arg+2,f,c
  4634  000EC8  5014               	movf	___ftpack@sign,w,c
  4635  000ECA  A4D8               	btfss	status,2,c
  4636  000ECC  8E12               	bsf	___ftpack@arg+2,7,c
  4637  000ECE  C010  F010         	movff	___ftpack@arg,?___ftpack
  4638  000ED2  C011  F011         	movff	___ftpack@arg+1,?___ftpack+1
  4639  000ED6  C012  F012         	movff	___ftpack@arg+2,?___ftpack+2
  4640  000EDA  0012               	return	
  4641  000EDC                     __end_of___ftpack:
  4642                           	opt stack 0
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           prodh	equ	0xFF4
  4648                           prodl	equ	0xFF3
  4649                           intcon	equ	0xFF2
  4650                           intcon2	equ	0xFF1
  4651                           postinc0	equ	0xFEE
  4652                           wreg	equ	0xFE8
  4653                           status	equ	0xFD8
  4654                           
  4655 ;; *************** function _PID_SetControllerDirection *****************
  4656 ;; Defined at:
  4657 ;;		line 95 in file "PID.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  Direction       2   15[COMRAM] int 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      void 
  4664 ;; Registers used:
  4665 ;;		None
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;Total ram usage:        2 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    4
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_InitHardware
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text34
  4686  00134E                     __ptext34:
  4687                           	opt stack 0
  4688  00134E                     _PID_SetControllerDirection:
  4689                           	opt stack 25
  4690                           
  4691                           ;PID.c: 97: controllerDirection = Direction;
  4692                           
  4693                           ;incstack = 0
  4694  00134E  C010  F0A6         	movff	PID_SetControllerDirection@Direction,_controllerDirection
  4695  001352  C011  F0A7         	movff	PID_SetControllerDirection@Direction+1,_controllerDirection+1
  4696  001356  0012               	return		;funcret
  4697  001358                     __end_of_PID_SetControllerDirection:
  4698                           	opt stack 0
  4699                           tblptru	equ	0xFF8
  4700                           tblptrh	equ	0xFF7
  4701                           tblptrl	equ	0xFF6
  4702                           tablat	equ	0xFF5
  4703                           prodh	equ	0xFF4
  4704                           prodl	equ	0xFF3
  4705                           intcon	equ	0xFF2
  4706                           intcon2	equ	0xFF1
  4707                           postinc0	equ	0xFEE
  4708                           wreg	equ	0xFE8
  4709                           status	equ	0xFD8
  4710                           
  4711 ;; *************** function _ADC_StartConversion *****************
  4712 ;; Defined at:
  4713 ;;		line 89 in file "mcc_generated_files/adc.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		None
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;Total ram usage:        0 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    4
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_InitHardware
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text35
  4742  001366                     __ptext35:
  4743                           	opt stack 0
  4744  001366                     _ADC_StartConversion:
  4745                           	opt stack 25
  4746                           
  4747                           ;adc.c: 92: ADCON0bits.GO_nDONE = 1;
  4748                           
  4749                           ;incstack = 0
  4750  001366  82C2               	bsf	4034,1,c	;volatile
  4751  001368  0012               	return		;funcret
  4752  00136A                     __end_of_ADC_StartConversion:
  4753                           	opt stack 0
  4754                           tblptru	equ	0xFF8
  4755                           tblptrh	equ	0xFF7
  4756                           tblptrl	equ	0xFF6
  4757                           tablat	equ	0xFF5
  4758                           prodh	equ	0xFF4
  4759                           prodl	equ	0xFF3
  4760                           intcon	equ	0xFF2
  4761                           intcon2	equ	0xFF1
  4762                           postinc0	equ	0xFEE
  4763                           wreg	equ	0xFE8
  4764                           status	equ	0xFD8
  4765                           
  4766 ;; *************** function _ADC_SelectChannel *****************
  4767 ;; Defined at:
  4768 ;;		line 81 in file "mcc_generated_files/adc.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  channel         1    wreg     enum E6986
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  channel         1   16[COMRAM] enum E6986
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;Total ram usage:        2 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    4
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_InitHardware
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text36
  4797  0012D6                     __ptext36:
  4798                           	opt stack 0
  4799  0012D6                     _ADC_SelectChannel:
  4800                           	opt stack 25
  4801                           
  4802                           ;incstack = 0
  4803                           ;ADC_SelectChannel@channel stored from wreg
  4804  0012D6  6E11               	movwf	ADC_SelectChannel@channel,c
  4805                           
  4806                           ;adc.c: 84: ADCON0bits.CHS = channel;
  4807  0012D8  C011  F010         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  4808  0012DC  4610               	rlncf	??_ADC_SelectChannel,f,c
  4809  0012DE  4610               	rlncf	??_ADC_SelectChannel,f,c
  4810  0012E0  50C2               	movf	4034,w,c	;volatile
  4811  0012E2  1810               	xorwf	??_ADC_SelectChannel,w,c
  4812  0012E4  0B83               	andlw	-125
  4813  0012E6  1810               	xorwf	??_ADC_SelectChannel,w,c
  4814  0012E8  6EC2               	movwf	4034,c	;volatile
  4815                           
  4816                           ;adc.c: 86: ADCON0bits.ADON = 1;
  4817  0012EA  80C2               	bsf	4034,0,c	;volatile
  4818  0012EC  0012               	return		;funcret
  4819  0012EE                     __end_of_ADC_SelectChannel:
  4820                           	opt stack 0
  4821                           tblptru	equ	0xFF8
  4822                           tblptrh	equ	0xFF7
  4823                           tblptrl	equ	0xFF6
  4824                           tablat	equ	0xFF5
  4825                           prodh	equ	0xFF4
  4826                           prodl	equ	0xFF3
  4827                           intcon	equ	0xFF2
  4828                           intcon2	equ	0xFF1
  4829                           postinc0	equ	0xFEE
  4830                           wreg	equ	0xFE8
  4831                           status	equ	0xFD8
  4832                           
  4833 ;; *************** function _INTERRUPT_InterruptManager *****************
  4834 ;; Defined at:
  4835 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;Total ram usage:       14 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    3
  4856 ;; This function calls:
  4857 ;;		_ADC_ISR
  4858 ;;		_TMR2_ISR
  4859 ;; This function is called by:
  4860 ;;		Interrupt level 2
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	intcode
  4865  000008                     __pintcode:
  4866                           	opt stack 0
  4867  000008                     _INTERRUPT_InterruptManager:
  4868                           	opt stack 21
  4869                           
  4870                           ;incstack = 0
  4871  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4872  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
  4873  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4874  000012  CFE9 F004          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  4875  000016  CFEA F005          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  4876  00001A  CFE1 F006          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  4877  00001E  CFE2 F007          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  4878  000022  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  4879  000026  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  4880  00002A  CFF3 F00A          	movff	prodl,??_INTERRUPT_InterruptManager+8
  4881  00002E  CFF4 F00B          	movff	prodh,??_INTERRUPT_InterruptManager+9
  4882  000032  CFF6 F00C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  4883  000036  CFF7 F00D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  4884  00003A  CFF8 F00E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  4885  00003E  CFF5 F00F          	movff	tablat,??_INTERRUPT_InterruptManager+13
  4886                           
  4887                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  4888  000042  BCF2               	btfsc	intcon,6,c	;volatile
  4889  000044  AC9D               	btfss	3997,6,c	;volatile
  4890  000046  D005               	goto	i2l100
  4891  000048  AC9E               	btfss	3998,6,c	;volatile
  4892  00004A  D003               	goto	i2l100
  4893                           
  4894                           ;interrupt_manager.c: 61: {
  4895                           ;interrupt_manager.c: 62: ADC_ISR();
  4896  00004C  ECB5  F009         	call	_ADC_ISR	;wreg free
  4897                           
  4898                           ;interrupt_manager.c: 63: }
  4899  000050  D006               	goto	i2l104
  4900  000052                     i2l100:
  4901                           
  4902                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  4903  000052  BCF2               	btfsc	intcon,6,c	;volatile
  4904  000054  A29D               	btfss	3997,1,c	;volatile
  4905  000056  D003               	goto	i2l104
  4906  000058  B29E               	btfsc	3998,1,c	;volatile
  4907                           
  4908                           ;interrupt_manager.c: 65: {
  4909                           ;interrupt_manager.c: 66: TMR2_ISR();
  4910  00005A  EC33  F009         	call	_TMR2_ISR	;wreg free
  4911  00005E                     i2l104:
  4912  00005E  C00F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  4913  000062  C00E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  4914  000066  C00D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  4915  00006A  C00C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  4916  00006E  C00B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  4917  000072  C00A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  4918  000076  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  4919  00007A  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  4920  00007E  C007  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  4921  000082  C006  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  4922  000086  C005  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  4923  00008A  C004  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  4924  00008E  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4925  000092  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4926  000096  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4927  000098  0011               	retfie		f
  4928  00009A                     __end_of_INTERRUPT_InterruptManager:
  4929                           	opt stack 0
  4930                           pclatu	equ	0xFFB
  4931                           pclath	equ	0xFFA
  4932                           tblptru	equ	0xFF8
  4933                           tblptrh	equ	0xFF7
  4934                           tblptrl	equ	0xFF6
  4935                           tablat	equ	0xFF5
  4936                           prodh	equ	0xFF4
  4937                           prodl	equ	0xFF3
  4938                           intcon	equ	0xFF2
  4939                           intcon2	equ	0xFF1
  4940                           postinc0	equ	0xFEE
  4941                           fsr0h	equ	0xFEA
  4942                           fsr0l	equ	0xFE9
  4943                           wreg	equ	0xFE8
  4944                           fsr1h	equ	0xFE2
  4945                           fsr1l	equ	0xFE1
  4946                           fsr2h	equ	0xFDA
  4947                           fsr2l	equ	0xFD9
  4948                           status	equ	0xFD8
  4949                           
  4950 ;; *************** function _TMR2_ISR *****************
  4951 ;; Defined at:
  4952 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  1    wreg      void 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;Total ram usage:        0 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    2
  4973 ;; This function calls:
  4974 ;;		_TMR2_CallBack
  4975 ;; This function is called by:
  4976 ;;		_INTERRUPT_InterruptManager
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text38
  4981  001266                     __ptext38:
  4982                           	opt stack 0
  4983  001266                     _TMR2_ISR:
  4984                           	opt stack 21
  4985                           
  4986                           ;tmr2.c: 125: static volatile unsigned int CountCallBack = 0;
  4987                           ;tmr2.c: 127: PIR1bits.TMR2IF = 0;
  4988                           
  4989                           ;incstack = 0
  4990  001266  929E               	bcf	3998,1,c	;volatile
  4991                           
  4992                           ;tmr2.c: 130: if (++CountCallBack >= 20)
  4993  001268  4A4C               	infsnz	TMR2_ISR@CountCallBack,f,c	;volatile
  4994  00126A  2A4D               	incf	TMR2_ISR@CountCallBack+1,f,c	;volatile
  4995  00126C  504D               	movf	TMR2_ISR@CountCallBack+1,w,c	;volatile
  4996  00126E  E104               	bnz	i2u204_40
  4997  001270  0E14               	movlw	20
  4998  001272  5C4C               	subwf	TMR2_ISR@CountCallBack,w,c	;volatile
  4999  001274  A0D8               	btfss	status,0,c
  5000  001276  0012               	return	
  5001  001278                     i2u204_40:
  5002                           
  5003                           ;tmr2.c: 131: {
  5004                           ;tmr2.c: 134: TMR2_CallBack();
  5005  001278  ECFF  F008         	call	_TMR2_CallBack	;wreg free
  5006                           
  5007                           ;tmr2.c: 137: CountCallBack = 0;
  5008  00127C  0E00               	movlw	0
  5009  00127E  6E4D               	movwf	TMR2_ISR@CountCallBack+1,c	;volatile
  5010  001280  0E00               	movlw	0
  5011  001282  6E4C               	movwf	TMR2_ISR@CountCallBack,c	;volatile
  5012  001284  0012               	return	
  5013  001286                     __end_of_TMR2_ISR:
  5014                           	opt stack 0
  5015                           pclatu	equ	0xFFB
  5016                           pclath	equ	0xFFA
  5017                           tblptru	equ	0xFF8
  5018                           tblptrh	equ	0xFF7
  5019                           tblptrl	equ	0xFF6
  5020                           tablat	equ	0xFF5
  5021                           prodh	equ	0xFF4
  5022                           prodl	equ	0xFF3
  5023                           intcon	equ	0xFF2
  5024                           intcon2	equ	0xFF1
  5025                           postinc0	equ	0xFEE
  5026                           fsr0h	equ	0xFEA
  5027                           fsr0l	equ	0xFE9
  5028                           wreg	equ	0xFE8
  5029                           fsr1h	equ	0xFE2
  5030                           fsr1l	equ	0xFE1
  5031                           fsr2h	equ	0xFDA
  5032                           fsr2l	equ	0xFD9
  5033                           status	equ	0xFD8
  5034                           
  5035 ;; *************** function _TMR2_CallBack *****************
  5036 ;; Defined at:
  5037 ;;		line 141 in file "mcc_generated_files/tmr2.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    1
  5058 ;; This function calls:
  5059 ;;		Absolute function
  5060 ;;		_TMR2_DefaultInterruptHandler
  5061 ;;		_TMR2_Tick
  5062 ;; This function is called by:
  5063 ;;		_TMR2_ISR
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text39
  5068  0011FE                     __ptext39:
  5069                           	opt stack 0
  5070  0011FE                     _TMR2_CallBack:
  5071                           	opt stack 21
  5072                           
  5073                           ;tmr2.c: 145: if(TMR2_InterruptHandler)
  5074                           
  5075                           ;incstack = 0
  5076  0011FE  0100               	movlb	0	; () banked
  5077  001200  51B7               	movf	_TMR2_InterruptHandler& (0+255),w,b
  5078  001202  0100               	movlb	0	; () banked
  5079  001204  11B8               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  5080  001206  B4D8               	btfsc	status,2,c
  5081  001208  0012               	return	
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;tmr2.c: 146: {
  5085                           ;tmr2.c: 147: TMR2_InterruptHandler();
  5086  00120A  D801               	call	i2u187_48
  5087  00120C  0012               	return	
  5088  00120E                     i2u187_48:
  5089  00120E  0005               	push	
  5090  001210  0100               	movlb	0	; () banked
  5091  001212  6EFA               	movwf	pclath,c
  5092  001214  51B7               	movf	_TMR2_InterruptHandler& (0+255),w,b
  5093  001216  6EFD               	movwf	tosl,c
  5094  001218  51B8               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  5095  00121A  6EFE               	movwf	tosh,c
  5096  00121C  50F8               	movf	tblptru,w,c
  5097  00121E  6EFF               	movwf	tosu,c
  5098  001220  50FA               	movf	pclath,w,c
  5099  001222  0012               	return		;indir
  5100  001224                     __end_of_TMR2_CallBack:
  5101                           	opt stack 0
  5102                           tosu	equ	0xFFF
  5103                           tosh	equ	0xFFE
  5104                           tosl	equ	0xFFD
  5105                           pclatu	equ	0xFFB
  5106                           pclath	equ	0xFFA
  5107                           tblptru	equ	0xFF8
  5108                           tblptrh	equ	0xFF7
  5109                           tblptrl	equ	0xFF6
  5110                           tablat	equ	0xFF5
  5111                           prodh	equ	0xFF4
  5112                           prodl	equ	0xFF3
  5113                           intcon	equ	0xFF2
  5114                           intcon2	equ	0xFF1
  5115                           postinc0	equ	0xFEE
  5116                           fsr0h	equ	0xFEA
  5117                           fsr0l	equ	0xFE9
  5118                           wreg	equ	0xFE8
  5119                           fsr1h	equ	0xFE2
  5120                           fsr1l	equ	0xFE1
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8
  5124                           
  5125 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5126 ;; Defined at:
  5127 ;;		line 155 in file "mcc_generated_files/tmr2.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		None
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;Total ram usage:        0 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_TMR2_Initialize
  5151 ;;		_TMR2_CallBack
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text40
  5156  001370                     __ptext40:
  5157                           	opt stack 0
  5158  001370                     _TMR2_DefaultInterruptHandler:
  5159                           	opt stack 21
  5160                           
  5161                           ;incstack = 0
  5162  001370  0012               	return		;funcret
  5163  001372                     __end_of_TMR2_DefaultInterruptHandler:
  5164                           	opt stack 0
  5165                           tosu	equ	0xFFF
  5166                           tosh	equ	0xFFE
  5167                           tosl	equ	0xFFD
  5168                           pclatu	equ	0xFFB
  5169                           pclath	equ	0xFFA
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           prodh	equ	0xFF4
  5175                           prodl	equ	0xFF3
  5176                           intcon	equ	0xFF2
  5177                           intcon2	equ	0xFF1
  5178                           postinc0	equ	0xFEE
  5179                           fsr0h	equ	0xFEA
  5180                           fsr0l	equ	0xFE9
  5181                           wreg	equ	0xFE8
  5182                           fsr1h	equ	0xFE2
  5183                           fsr1l	equ	0xFE1
  5184                           fsr2h	equ	0xFDA
  5185                           fsr2l	equ	0xFD9
  5186                           status	equ	0xFD8
  5187                           
  5188 ;; *************** function _TMR2_Tick *****************
  5189 ;; Defined at:
  5190 ;;		line 47 in file "tasks.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;		None
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;		None
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      void 
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;Total ram usage:        1 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_InitHardware
  5214 ;;		_TMR2_CallBack
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text41
  5219  000AEC                     __ptext41:
  5220                           	opt stack 0
  5221  000AEC                     _TMR2_Tick:
  5222                           	opt stack 21
  5223                           
  5224                           ;tasks.c: 49: TempCounter++;
  5225                           
  5226                           ;incstack = 0
  5227  000AEC  0100               	movlb	0	; () banked
  5228  000AEE  4BB2               	infsnz	_TempCounter& (0+255),f,b
  5229  000AF0  2BB3               	incf	(_TempCounter+1)& (0+255),f,b
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;tasks.c: 50: static volatile unsigned uint16_t seg = 0;
  5233                           ;tasks.c: 51: static volatile unsigned uint16_t min = 0;
  5234                           ;tasks.c: 52: static volatile unsigned uint16_t Hard_ON = 0;
  5235                           ;tasks.c: 53: static volatile unsigned uint16_t Hard_OFF = 0;
  5236                           ;tasks.c: 54: static volatile unsigned uint16_t State = 0;
  5237                           ;tasks.c: 56: if (++seg >= 1000)
  5238  000AF2  4A4A               	infsnz	TMR2_Tick@seg,f,c	;volatile
  5239  000AF4  2A4B               	incf	TMR2_Tick@seg+1,f,c	;volatile
  5240  000AF6  0EE8               	movlw	232
  5241  000AF8  5C4A               	subwf	TMR2_Tick@seg,w,c	;volatile
  5242  000AFA  0E03               	movlw	3
  5243  000AFC  584B               	subwfb	TMR2_Tick@seg+1,w,c	;volatile
  5244  000AFE  A0D8               	btfss	status,0,c
  5245  000B00  D048               	goto	i2l2059
  5246                           
  5247                           ; BSR set to: 0
  5248                           
  5249                           ; BSR set to: 0
  5250                           
  5251                           ;tasks.c: 57: {
  5252                           ;tasks.c: 58: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  5253  000B02  A089               	btfss	3977,0,c	;volatile
  5254  000B04  D002               	goto	i2u174_40
  5255  000B06  0E01               	movlw	1
  5256  000B08  D001               	goto	i2u174_46
  5257  000B0A                     i2u174_40:
  5258  000B0A  0E00               	movlw	0
  5259  000B0C                     i2u174_46:
  5260  000B0C  0AFF               	xorlw	255
  5261  000B0E  6E01               	movwf	??_TMR2_Tick& (0+255),c
  5262  000B10  5089               	movf	3977,w,c	;volatile
  5263  000B12  1801               	xorwf	??_TMR2_Tick,w,c
  5264  000B14  0BFE               	andlw	-2
  5265  000B16  1801               	xorwf	??_TMR2_Tick,w,c
  5266  000B18  6E89               	movwf	3977,c	;volatile
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;tasks.c: 59: if ((++Hard_OFF >= 10))
  5270  000B1A  4A44               	infsnz	TMR2_Tick@Hard_OFF,f,c	;volatile
  5271  000B1C  2A45               	incf	TMR2_Tick@Hard_OFF+1,f,c	;volatile
  5272  000B1E  5045               	movf	TMR2_Tick@Hard_OFF+1,w,c	;volatile
  5273  000B20  E104               	bnz	i2u175_40
  5274  000B22  0E0A               	movlw	10
  5275  000B24  5C44               	subwf	TMR2_Tick@Hard_OFF,w,c	;volatile
  5276  000B26  A0D8               	btfss	status,0,c
  5277  000B28  D00E               	goto	i2l2045
  5278  000B2A                     i2u175_40:
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;tasks.c: 60: {
  5282                           ;tasks.c: 61: if (State == 0)
  5283  000B2A  5042               	movf	TMR2_Tick@State,w,c	;volatile
  5284  000B2C  1043               	iorwf	TMR2_Tick@State+1,w,c	;volatile
  5285  000B2E  A4D8               	btfss	status,2,c
  5286  000B30  D006               	goto	i2l308
  5287                           
  5288                           ; BSR set to: 0
  5289                           
  5290                           ;tasks.c: 62: {
  5291                           ;tasks.c: 63: do { LATDbits.LATD6 = 0; } while(0);
  5292  000B32  9C8C               	bcf	3980,6,c	;volatile
  5293                           
  5294                           ; BSR set to: 0
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;tasks.c: 64: do { LATDbits.LATD7 = 0; } while(0);
  5298  000B34  9E8C               	bcf	3980,7,c	;volatile
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;tasks.c: 65: State = 1;
  5302                           
  5303                           ; BSR set to: 0
  5304  000B36  0E00               	movlw	0
  5305  000B38  6E43               	movwf	TMR2_Tick@State+1,c	;volatile
  5306  000B3A  0E01               	movlw	1
  5307  000B3C  6E42               	movwf	TMR2_Tick@State,c	;volatile
  5308  000B3E                     i2l308:
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;tasks.c: 66: }
  5312                           ;tasks.c: 67: Hard_OFF = 0;
  5313  000B3E  0E00               	movlw	0
  5314  000B40  6E45               	movwf	TMR2_Tick@Hard_OFF+1,c	;volatile
  5315  000B42  0E00               	movlw	0
  5316  000B44  6E44               	movwf	TMR2_Tick@Hard_OFF,c	;volatile
  5317  000B46                     i2l2045:
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;tasks.c: 69: }
  5321                           ;tasks.c: 70: if (++min >= 60)
  5322  000B46  4A48               	infsnz	TMR2_Tick@min,f,c	;volatile
  5323  000B48  2A49               	incf	TMR2_Tick@min+1,f,c	;volatile
  5324  000B4A  5049               	movf	TMR2_Tick@min+1,w,c	;volatile
  5325  000B4C  E104               	bnz	i2u177_40
  5326  000B4E  0E3C               	movlw	60
  5327  000B50  5C48               	subwf	TMR2_Tick@min,w,c	;volatile
  5328  000B52  A0D8               	btfss	status,0,c
  5329  000B54  D01A               	goto	i2l313
  5330  000B56                     i2u177_40:
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;tasks.c: 71: {
  5334                           ;tasks.c: 72: if ((++Hard_ON >= 60))
  5335  000B56  4A46               	infsnz	TMR2_Tick@Hard_ON,f,c	;volatile
  5336  000B58  2A47               	incf	TMR2_Tick@Hard_ON+1,f,c	;volatile
  5337  000B5A  5047               	movf	TMR2_Tick@Hard_ON+1,w,c	;volatile
  5338  000B5C  E104               	bnz	i2u178_40
  5339  000B5E  0E3C               	movlw	60
  5340  000B60  5C46               	subwf	TMR2_Tick@Hard_ON,w,c	;volatile
  5341  000B62  A0D8               	btfss	status,0,c
  5342  000B64  D00E               	goto	i2l314
  5343  000B66                     i2u178_40:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;tasks.c: 73: {
  5347                           ;tasks.c: 74: Hard_ON=0;
  5348  000B66  0E00               	movlw	0
  5349  000B68  6E47               	movwf	TMR2_Tick@Hard_ON+1,c	;volatile
  5350  000B6A  0E00               	movlw	0
  5351  000B6C  6E46               	movwf	TMR2_Tick@Hard_ON,c	;volatile
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;tasks.c: 75: if(State == 1)
  5355  000B6E  0442               	decf	TMR2_Tick@State,w,c	;volatile
  5356  000B70  1043               	iorwf	TMR2_Tick@State+1,w,c	;volatile
  5357  000B72  A4D8               	btfss	status,2,c
  5358  000B74  D006               	goto	i2l314
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;tasks.c: 76: {
  5362                           ;tasks.c: 77: State = 0;
  5363  000B76  0E00               	movlw	0
  5364  000B78  6E43               	movwf	TMR2_Tick@State+1,c	;volatile
  5365  000B7A  0E00               	movlw	0
  5366  000B7C  6E42               	movwf	TMR2_Tick@State,c	;volatile
  5367                           
  5368                           ; BSR set to: 0
  5369                           
  5370                           ; BSR set to: 0
  5371                           
  5372                           ;tasks.c: 78: do { LATDbits.LATD6 = 1; } while(0);
  5373  000B7E  8C8C               	bsf	3980,6,c	;volatile
  5374                           
  5375                           ; BSR set to: 0
  5376                           
  5377                           ; BSR set to: 0
  5378                           
  5379                           ;tasks.c: 79: do { LATDbits.LATD7 = 1; } while(0);
  5380                           
  5381                           ; BSR set to: 0
  5382  000B80  8E8C               	bsf	3980,7,c	;volatile
  5383  000B82                     i2l314:
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;tasks.c: 80: }
  5387                           ;tasks.c: 81: }
  5388                           ;tasks.c: 82: min = 0;
  5389  000B82  0E00               	movlw	0
  5390  000B84  6E49               	movwf	TMR2_Tick@min+1,c	;volatile
  5391  000B86  0E00               	movlw	0
  5392  000B88  6E48               	movwf	TMR2_Tick@min,c	;volatile
  5393  000B8A                     i2l313:
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;tasks.c: 83: }
  5397                           ;tasks.c: 84: seg = 0;
  5398  000B8A  0E00               	movlw	0
  5399  000B8C  6E4B               	movwf	TMR2_Tick@seg+1,c	;volatile
  5400  000B8E  0E00               	movlw	0
  5401  000B90  6E4A               	movwf	TMR2_Tick@seg,c	;volatile
  5402  000B92                     i2l2059:
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;tasks.c: 85: }
  5406                           ;tasks.c: 87: if (DutyPeltier == 0)
  5407  000B92  0100               	movlb	0	; () banked
  5408  000B94  51B0               	movf	_DutyPeltier& (0+255),w,b
  5409  000B96  0100               	movlb	0	; () banked
  5410  000B98  11B1               	iorwf	(_DutyPeltier+1)& (0+255),w,b
  5411  000B9A  A4D8               	btfss	status,2,c
  5412  000B9C  D002               	goto	i2l2061
  5413                           
  5414                           ; BSR set to: 0
  5415                           
  5416                           ;tasks.c: 88: {
  5417                           ;tasks.c: 89: do { LATAbits.LATA4 = 0; } while(0);
  5418  000B9E  9889               	bcf	3977,4,c	;volatile
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;tasks.c: 90: }
  5422  000BA0  0012               	return	
  5423  000BA2                     i2l2061:
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;tasks.c: 91: else
  5427                           ;tasks.c: 92: {
  5428                           ;tasks.c: 93: static unsigned int PeltierCounter;
  5429                           ;tasks.c: 94: if (PeltierCounter++ == 0)
  5430  000BA2  4A40               	infsnz	TMR2_Tick@PeltierCounter,f,c
  5431  000BA4  2A41               	incf	TMR2_Tick@PeltierCounter+1,f,c
  5432  000BA6  0440               	decf	TMR2_Tick@PeltierCounter,w,c
  5433  000BA8  1041               	iorwf	TMR2_Tick@PeltierCounter+1,w,c
  5434  000BAA  A4D8               	btfss	status,2,c
  5435  000BAC  D002               	goto	i2l2063
  5436                           
  5437                           ; BSR set to: 0
  5438                           
  5439                           ;tasks.c: 95: {
  5440                           ;tasks.c: 96: do { LATAbits.LATA4 = 1; } while(0);
  5441  000BAE  8889               	bsf	3977,4,c	;volatile
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;tasks.c: 97: }
  5445  000BB0  0012               	return	
  5446  000BB2                     i2l2063:
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;tasks.c: 98: else if (PeltierCounter == DutyPeltier)
  5450  000BB2  0100               	movlb	0	; () banked
  5451  000BB4  51B0               	movf	_DutyPeltier& (0+255),w,b
  5452  000BB6  1840               	xorwf	TMR2_Tick@PeltierCounter,w,c
  5453  000BB8  E107               	bnz	i2l2065
  5454  000BBA  0100               	movlb	0	; () banked
  5455  000BBC  51B1               	movf	(_DutyPeltier+1)& (0+255),w,b
  5456  000BBE  1841               	xorwf	TMR2_Tick@PeltierCounter+1,w,c
  5457  000BC0  A4D8               	btfss	status,2,c
  5458  000BC2  D002               	goto	i2l2065
  5459                           
  5460                           ; BSR set to: 0
  5461                           
  5462                           ;tasks.c: 99: {
  5463                           ;tasks.c: 100: do { LATAbits.LATA4 = 0; } while(0);
  5464  000BC4  9889               	bcf	3977,4,c	;volatile
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;tasks.c: 101: }
  5468  000BC6  0012               	return	
  5469  000BC8                     i2l2065:
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;tasks.c: 102: else if (PeltierCounter > 100)
  5473  000BC8  5041               	movf	TMR2_Tick@PeltierCounter+1,w,c
  5474  000BCA  E104               	bnz	i2u183_40
  5475  000BCC  0E65               	movlw	101
  5476  000BCE  5C40               	subwf	TMR2_Tick@PeltierCounter,w,c
  5477  000BD0  A0D8               	btfss	status,0,c
  5478  000BD2  0012               	return	
  5479  000BD4                     i2u183_40:
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;tasks.c: 103: {
  5483                           ;tasks.c: 104: PeltierCounter = 0;
  5484  000BD4  0E00               	movlw	0
  5485  000BD6  6E41               	movwf	TMR2_Tick@PeltierCounter+1,c
  5486  000BD8  0E00               	movlw	0
  5487  000BDA  6E40               	movwf	TMR2_Tick@PeltierCounter,c
  5488                           
  5489                           ; BSR set to: 0
  5490                           
  5491                           ; BSR set to: 0
  5492                           
  5493                           ; BSR set to: 0
  5494  000BDC  0012               	return	
  5495  000BDE                     __end_of_TMR2_Tick:
  5496                           	opt stack 0
  5497                           tosu	equ	0xFFF
  5498                           tosh	equ	0xFFE
  5499                           tosl	equ	0xFFD
  5500                           pclatu	equ	0xFFB
  5501                           pclath	equ	0xFFA
  5502                           tblptru	equ	0xFF8
  5503                           tblptrh	equ	0xFF7
  5504                           tblptrl	equ	0xFF6
  5505                           tablat	equ	0xFF5
  5506                           prodh	equ	0xFF4
  5507                           prodl	equ	0xFF3
  5508                           intcon	equ	0xFF2
  5509                           intcon2	equ	0xFF1
  5510                           postinc0	equ	0xFEE
  5511                           fsr0h	equ	0xFEA
  5512                           fsr0l	equ	0xFE9
  5513                           wreg	equ	0xFE8
  5514                           fsr1h	equ	0xFE2
  5515                           fsr1l	equ	0xFE1
  5516                           fsr2h	equ	0xFDA
  5517                           fsr2l	equ	0xFD9
  5518                           status	equ	0xFD8
  5519                           
  5520 ;; *************** function _ADC_ISR *****************
  5521 ;; Defined at:
  5522 ;;		line 129 in file "mcc_generated_files/adc.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		None
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;Total ram usage:        0 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_INTERRUPT_InterruptManager
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text42
  5550  00136A                     __ptext42:
  5551                           	opt stack 0
  5552  00136A                     _ADC_ISR:
  5553                           	opt stack 23
  5554                           
  5555                           ;adc.c: 132: PIR1bits.ADIF = 0;
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;incstack = 0
  5559  00136A  9C9E               	bcf	3998,6,c	;volatile
  5560  00136C  0012               	return		;funcret
  5561  00136E                     __end_of_ADC_ISR:
  5562                           	opt stack 0
  5563  0000                     tosu	equ	0xFFF
  5564                           tosh	equ	0xFFE
  5565                           tosl	equ	0xFFD
  5566                           pclatu	equ	0xFFB
  5567                           pclath	equ	0xFFA
  5568                           tblptru	equ	0xFF8
  5569                           tblptrh	equ	0xFF7
  5570                           tblptrl	equ	0xFF6
  5571                           tablat	equ	0xFF5
  5572                           prodh	equ	0xFF4
  5573                           prodl	equ	0xFF3
  5574                           intcon	equ	0xFF2
  5575                           intcon2	equ	0xFF1
  5576                           postinc0	equ	0xFEE
  5577                           fsr0h	equ	0xFEA
  5578                           fsr0l	equ	0xFE9
  5579                           wreg	equ	0xFE8
  5580                           fsr1h	equ	0xFE2
  5581                           fsr1l	equ	0xFE1
  5582                           fsr2h	equ	0xFDA
  5583                           fsr2l	equ	0xFD9
  5584                           status	equ	0xFD8
  5585                           tosu	equ	0xFFF
  5586                           tosh	equ	0xFFE
  5587                           tosl	equ	0xFFD
  5588                           pclatu	equ	0xFFB
  5589                           pclath	equ	0xFFA
  5590                           tblptru	equ	0xFF8
  5591                           tblptrh	equ	0xFF7
  5592                           tblptrl	equ	0xFF6
  5593                           tablat	equ	0xFF5
  5594                           prodh	equ	0xFF4
  5595                           prodl	equ	0xFF3
  5596                           intcon	equ	0xFF2
  5597                           intcon2	equ	0xFF1
  5598                           postinc0	equ	0xFEE
  5599                           fsr0h	equ	0xFEA
  5600                           fsr0l	equ	0xFE9
  5601                           wreg	equ	0xFE8
  5602                           fsr1h	equ	0xFE2
  5603                           fsr1l	equ	0xFE1
  5604                           fsr2h	equ	0xFDA
  5605                           fsr2l	equ	0xFD9
  5606                           status	equ	0xFD8
  5607                           
  5608                           	psect	text43
  5609  000000                     __ptext43:
  5610                           	opt stack 0
  5611                           tosu	equ	0xFFF
  5612                           tosh	equ	0xFFE
  5613                           tosl	equ	0xFFD
  5614                           pclatu	equ	0xFFB
  5615                           pclath	equ	0xFFA
  5616                           tblptru	equ	0xFF8
  5617                           tblptrh	equ	0xFF7
  5618                           tblptrl	equ	0xFF6
  5619                           tablat	equ	0xFF5
  5620                           prodh	equ	0xFF4
  5621                           prodl	equ	0xFF3
  5622                           intcon	equ	0xFF2
  5623                           intcon2	equ	0xFF1
  5624                           postinc0	equ	0xFEE
  5625                           fsr0h	equ	0xFEA
  5626                           fsr0l	equ	0xFE9
  5627                           wreg	equ	0xFE8
  5628                           fsr1h	equ	0xFE2
  5629                           fsr1l	equ	0xFE1
  5630                           fsr2h	equ	0xFDA
  5631                           fsr2l	equ	0xFD9
  5632                           status	equ	0xFD8
  5633                           
  5634                           	psect	rparam
  5635  0000                     tosu	equ	0xFFF
  5636                           tosh	equ	0xFFE
  5637                           tosl	equ	0xFFD
  5638                           pclatu	equ	0xFFB
  5639                           pclath	equ	0xFFA
  5640                           tblptru	equ	0xFF8
  5641                           tblptrh	equ	0xFF7
  5642                           tblptrl	equ	0xFF6
  5643                           tablat	equ	0xFF5
  5644                           prodh	equ	0xFF4
  5645                           prodl	equ	0xFF3
  5646                           intcon	equ	0xFF2
  5647                           intcon2	equ	0xFF1
  5648                           postinc0	equ	0xFEE
  5649                           fsr0h	equ	0xFEA
  5650                           fsr0l	equ	0xFE9
  5651                           wreg	equ	0xFE8
  5652                           fsr1h	equ	0xFE2
  5653                           fsr1l	equ	0xFE1
  5654                           fsr2h	equ	0xFDA
  5655                           fsr2l	equ	0xFD9
  5656                           status	equ	0xFD8
  5657                           
  5658                           	psect	temp
  5659  000050                     btemp:
  5660                           	opt stack 0
  5661  000050                     	ds	1
  5662  0000                     int$flags	set	btemp
  5663                           tosu	equ	0xFFF
  5664                           tosh	equ	0xFFE
  5665                           tosl	equ	0xFFD
  5666                           pclatu	equ	0xFFB
  5667                           pclath	equ	0xFFA
  5668                           tblptru	equ	0xFF8
  5669                           tblptrh	equ	0xFF7
  5670                           tblptrl	equ	0xFF6
  5671                           tablat	equ	0xFF5
  5672                           prodh	equ	0xFF4
  5673                           prodl	equ	0xFF3
  5674                           intcon	equ	0xFF2
  5675                           intcon2	equ	0xFF1
  5676                           postinc0	equ	0xFEE
  5677                           fsr0h	equ	0xFEA
  5678                           fsr0l	equ	0xFE9
  5679                           wreg	equ	0xFE8
  5680                           fsr1h	equ	0xFE2
  5681                           fsr1l	equ	0xFE1
  5682                           fsr2h	equ	0xFDA
  5683                           fsr2l	equ	0xFD9
  5684                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         56
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      79
    BANK0           160     45      89
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_Tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TempAcquisition->___ftmul
    ___awdiv->___wmul
    _PID_Control->___ftmul
    ___fttol->___ftmul
    ___ftadd->___ftmul
    _PID_SetTunings->___ftmul
    ___ftneg->___ftmul
    _PID_SetSampleTime->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    _PID_SetPoint->___awtoft
    _PID_SetOutputLimits->___ftge
    _PID_Initialize->___ftge
    ___ftge->___awtoft
    ___awtoft->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_CallBack->_TMR2_Tick

Critical Paths under _main in BANK0

    _TempUpdate->_TempAcquisition
    _TempAcquisition->_PID_Control
    _PID_Control->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftneg
    _InitHardware->_PID_SetTunings
    _PID_SetTunings->___ftneg

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69481
                       _InitHardware
                           _MainTask
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     150
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     150
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MainTask                                             0     0      0   28498
                         _TempUpdate
 ---------------------------------------------------------------------------------
 (2) _TempUpdate                                           0     0      0   28498
                    _TempAcquisition
 ---------------------------------------------------------------------------------
 (3) _TempAcquisition                                      2     2      0   28498
                                             43 BANK0      2     2      0
                  _ADC_GetConversion
                      _EUSART1_Write
                        _PID_Control
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     543
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     428
                                             21 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PID_Control                                         13    11      2   15020
                                             30 BANK0     13    11      2
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     380
                                             15 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4687
                                              3 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversion                                    5     3      2      22
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _InitHardware                                         0     0      0   40833
                  _ADC_SelectChannel
                _ADC_StartConversion
         _PID_SetControllerDirection
                        _PID_SetMode
                _PID_SetOutputLimits
                       _PID_SetPoint
                  _PID_SetSampleTime
                     _PID_SetTunings
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     150
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PID_SetTunings                                      12     3      9   13058
                                              3 BANK0     12     3      9
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     527
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _PID_SetSampleTime                                    5     3      2   12284
                                              0 BANK0      5     3      2
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    3990
                                             48 COMRAM    15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3768
                                             33 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _PID_SetPoint                                         2     0      2    4399
                                             33 COMRAM     2     0      2
                           ___awtoft
 ---------------------------------------------------------------------------------
 (2) _PID_SetOutputLimits                                  5     1      4    5473
                                             42 COMRAM     5     1      4
                           ___awtoft
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _PID_SetMode                                          3     1      2    5368
                                             42 COMRAM     3     1      2
                     _PID_Initialize
 ---------------------------------------------------------------------------------
 (3) _PID_Initialize                                       0     0      0    5195
                           ___awtoft
                             ___ftge
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     904
                                             33 COMRAM     9     3      6
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    4291
                                             29 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2464
                                             15 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PID_SetControllerDirection                           2     0      2      86
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      15
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0       0
                                              1 COMRAM    14    14      0
                            _ADC_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                          _TMR2_Tick *
 ---------------------------------------------------------------------------------
 (10) _TMR2_Tick                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitHardware
     _ADC_SelectChannel
     _ADC_StartConversion
     _PID_SetControllerDirection
     _PID_SetMode
       _PID_Initialize
         ___awtoft
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
     _PID_SetOutputLimits
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftge
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
     _PID_SetPoint
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
     _PID_SetSampleTime
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
     _PID_SetTunings
       ___awtoft
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
     _TMR2_SetInterruptHandler
   _MainTask
     _TempUpdate
       _TempAcquisition
         _ADC_GetConversion
         _EUSART1_Write
         _PID_Control
           ___awtoft
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
           ___ftmul
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
           ___fttol
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___awdiv (ARG)
                         ___wmul (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
         ___awdiv
           ___wmul (ARG)
         ___awtoft
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___fttol
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
         ___wmul
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _TMR2_Tick *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      59       5       55.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8      12        0.0%
DATA                 0      0      A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jan 26 11:26:21 2018

        __end_of_TMR2_SetInterruptHandler 134E                           PID_SetMode@Mode 002B  
                            ___awdiv@sign 001B                    __end_of_PID_Initialize 0D80  
                     ___wmul@multiplicand 0012                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 006E  
                            ___ftadd@exp2 006D                     ??_PID_SetOutputLimits 002F  
                             __CFG_LVP$ON 000000                              ___ftadd@sign 006C  
                                     l224 133A                                       l178 1164  
                                     l372 01BE                                       l661 03A4  
                                     l638 0EBC                                       l718 119E  
                                     l665 03DE                                       l667 0406  
                                     l676 04DC                                       l685 0506  
                                     l696 0C92                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 136E                           _TMR2_Initialize 1224  
                                     tosl 000FFD                                       wreg 000FE8  
                         _CCP5_Initialize 1304                              ___ftdiv@cntr 002B  
                            ___ftdiv@sign 0030                                      l2011 104A  
                                    l2003 102C                                      l2021 106A  
                                    l2013 104E                                      l2009 1042  
                                    l2025 1074                                      l2301 0488  
                                    l2029 1082                                      l2311 04D0  
                                    l2303 0494                                      l2241 0E8A  
                                    l2233 0E4C                                      l2401 00B8  
                                    l2243 0EA8                                      l2235 0E56  
                                    l2245 0EB2                                      l2237 0E74  
                                    l2229 0E3E                                      l2317 0530  
                                    l2309 04C2                                      l2413 02D0  
                                    l2405 017A                                      l2343 0A48  
                                    l2327 057E                                      l2361 0A8A  
                                    l2337 0A20                                      l2281 03FC  
                                    l2417 02F8                                      l2435 0C2E  
                                    l2371 0AB2                                      l2291 043E  
                                    l2275 03EC                                      l2533 09B2  
                                    l2525 0948                                      l2429 0C06  
                                    l2357 0A7A                                      l2269 03B2  
                                    l1831 0FA8                                      l2455 0C6C  
                                    l2367 0AA2                                      l1841 1004  
                                    l2529 096C                                      l2297 046C  
                                    l2387 1128                                      l1835 0FD8  
                                    l2491 0D3A                                      l2299 047A  
                                    l2571 1324                                      l1855 05DE  
                                    l1873 0670                                      l1891 06D6  
                                    l1883 06A0                                      l1885 06B0  
                                    l1877 0684                                      l1887 06BA  
                                    l1997 101C                                      u2201 0370  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    u2401 0A08                                      _LATE 000F8D  
                                    u2421 0A30                                      u2191 0352  
                                    u1471 05BA                                      u1490 0604  
                                    u2531 0BEE                                      u2700 11B8  
                                    u2710 11BA                                      u2551 0C16  
                                    u1495 05FA                                      u2720 11C8  
                                    u2640 0D94                                      u2730 11CA  
                                    _TMR2 000FBC                                      _WPUB 000F61  
                           ?_InitHardware 0001                             _EUSART1_Write 1338  
                                    _main 1318                              ___ftpack@arg 0010  
                            ___ftpack@exp 0013                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0050  
                  PID_SetOutputLimits@Max 002D                             __CFG_BORV$190 000000  
                  PID_SetOutputLimits@Min 002B                    __end_of_PID_SetTunings 08FE  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 009A                             __CFG_IESO$OFF 000000  
                 TMR2_Tick@PeltierCounter 0040                              ___ftmul@cntr 003E  
                            ___param_bank 000000                              ___ftmul@sign 003F  
                 __end_of_TempAcquisition 07FA                              ___fttol@exp1 007D  
                            ___fttol@lval 0079                           ?_PID_Initialize 0001  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 1338  
                                   ?_main 0001                           __end_of___awdiv 108C  
                         __end_of___ftadd 05A4                           __end_of___ftdiv 0CC4  
                         __end_of___ftneg 11AC                           __end_of___ftmul 0AEC  
                         ___awdiv@divisor 0018                           __end_of___fttol 06E8  
                                   _T2CON 000FBA                            __CFG_DEBUG$OFF 000000  
                                   i2l100 0052                                     i2l104 005E  
                                   i2l313 0B8A                                     i2l314 0B82  
                                   i2l308 0B3E                           ___awdiv@counter 001A  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     _ITerm 00A0  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                       PID_Control@dInput 0082                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                                     _Input 00AA  
              __size_of_PID_SetSampleTime 00AE                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR2_ISR 1286                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                             ___awtoft@sign 0021  
                      __size_of_TMR2_Tick 00F2            PID_SetSampleTime@newSampleTime 0060  
                      PID_SetMode@newAuto 002D                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 0014                            ??_InitHardware 0040  
                          ?_EUSART1_Write 0001                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 135E  
                         ?_PID_SetTunings 0063                            __CFG_PBADEN$ON 000000  
                            ?_PID_Control 007E                           __initialization 10D6  
                        __end_of_MainTask 135E                __end_of_EUSART1_Initialize 1304  
                            __end_of_main 132A                              ?_PID_SetMode 002B  
                 __end_of_TMR2_Initialize 1246                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                  _TMR2_SetInterruptHandler 1344  
                                  ??_main 0040                             ___fttol@sign1 0078  
                 __end_of_CCP5_Initialize 1318                             __activetblptr 000002  
                        PID_SetTunings@Kd 0069                          PID_SetTunings@Ki 0066  
                        PID_SetTunings@Kp 0063                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                     _controllerDirection 00A6                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                          ___awdiv@dividend 0016  
                        __end_of___awtoft 114C                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                        __end_of___ftpack 0EDC                                _SampleTime 004E  
                                  i2l2061 0BA2                                    i2l2045 0B46  
                                  i2l2063 0BB2                                    i2l2065 0BC8  
                                  i2l2059 0B92                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                              _TempUpdate 1246                            __CFG_XINST$OFF 000000  
                                  _Output 00A8                                    ___ftge 0F78  
                        ?_TempAcquisition 0001                         __end_of_TMR2_Tick 0BDE  
                                  ___wmul 11D8                                 ??___awdiv 001A  
                               ??___ftadd 0069                            __CFG_STVREN$ON 000000  
                               ??___ftdiv 0028                                 ??___ftneg 0040  
                               ??___ftmul 0037                                 ??___fttol 0073  
                                  _inAuto 00B4                                    clear_0 10F4  
                                  clear_1 1100                          ___awdiv@quotient 001C  
                   ___ftmul@f3_as_product 003B                              __pdataCOMRAM 004E  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                  ADC_GetConversion@channel 0014  
                         ??_EUSART1_Write 0010                   __end_of_TMR2_StartTimer 1362  
TMR2_SetInterruptHandler@InterruptHandler 0010             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 1286                                __accesstop 0060  
                 __end_of__initialization 1106                                ___ftadd@f1 0063  
                              ___ftadd@f2 0066                     __end_of_TMR2_CallBack 1224  
                              ___ftge@ff1 0022                                ___ftge@ff2 0025  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                              ___ftdiv@f1 0022                                ___ftdiv@f2 0025  
                              ___ftdiv@f3 002C                                ___ftneg@f1 0060  
                              ___awtoft@c 001E                                ___ftmul@f1 0031  
                              ___ftmul@f2 0034                                ___fttol@f1 006F  
            __size_of_ADC_StartConversion 0004                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0012                                 ?_TMR2_ISR 0001  
                           ?_PID_SetPoint 0022                          ?_TMR2_Initialize 0001  
                    __end_of_InitHardware 0F78                          ?_CCP5_Initialize 0001  
                             _DutyPeltier 00B0                 __end_of_SYSTEM_Initialize 12A4  
                               ?_MainTask 0001                                __pbssBANK0 008D  
                         __CFG_PLLCFG$OFF 000000                               ?_TempUpdate 0001  
                      __CFG_CCP2MX$PORTC1 000000                          ??_PID_Initialize 002B  
                                 ?___ftge 0022               __end_of_PID_SetOutputLimits 09F8  
                                 ?___wmul 0010                                ??_TMR2_ISR 0002  
                    __size_of_PID_Control 029E                        __CFG_CCP3MX$PORTB5 000000  
                  PID_SetSampleTime@ratio 0062                            ??_PID_SetPoint 0024  
                                 _CCP5CON 000F54                                   _ADC_ISR 136A  
                    __size_of_PID_SetMode 002C                                 ?___awtoft 001E  
                               ?___ftpack 0010                   __size_of_ADC_Initialize 0018  
                        TMR2_Tick@Hard_ON 0046                                   _OSCCON2 000FD2  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                        ?_TMR2_StartTimer 0001                                ??_MainTask 0040  
                        ??_PID_SetTunings 0040                               _TempCounter 00B2  
              TempAcquisition@TEMPERATURA 00B5                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                   PID_SetPoint@newSetPoint 0022  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0012  
            ??_PID_SetControllerDirection 0012       PID_SetControllerDirection@Direction 0010  
                         __size_of___ftge 0090                                   ___awdiv 1008  
                                 ___ftadd 033C                                   ___ftdiv 0BDE  
                                 ___ftneg 117C                           __size_of___wmul 0026  
                                 ___ftmul 09F8                                   ___fttol 05A4  
                                 __pcinit 10D6                                ??___awtoft 0021  
                              ??___ftpack 0015                                   __ramtop 1000  
                                 __ptext0 1318                                   __ptext1 1286  
                                 __ptext2 1224                                   __ptext3 135E  
                                 __ptext4 108C                                   __ptext5 132A  
                                 __ptext6 1362                                   __ptext7 12EE  
                                 __ptext8 1304                                   __ptext9 12BE  
                   _OSCILLATOR_Initialize 132A                                 _T2CONbits 000FBA  
                      _EUSART1_Initialize 12EE                  ??_PIN_MANAGER_Initialize 0010  
                     __size_of_TempUpdate 0020                       PID_Control@newInput 007E  
              __size_of_SYSTEM_Initialize 001E                      end_of_initialization 1106  
                     ?_EUSART1_Initialize 0001       __size_of_PID_SetControllerDirection 000A  
                           __Lmediumconst 0000                                 _PIDConfig 008D  
                   __size_of_InitHardware 009C                                   postinc0 000FEE  
                    _TempAcquisition$1502 008B                      ??_EUSART1_Initialize 0010  
                               _TMR2_Tick 0AEC                       _ADC_StartConversion 1366  
                     EUSART1_Write@txData 0010                      __end_of_PID_SetPoint 12BE  
                            _InitHardware 0EDC                               ___ftdiv@exp 002F  
                             ___ftmul@exp 003A                      ?_ADC_StartConversion 0001  
            __end_of_INTERRUPT_Initialize 1366      __end_of_TMR2_DefaultInterruptHandler 1372  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 1370  
                          __end_of___ftge 1008                            __end_of___wmul 11FE  
                           __pidataCOMRAM 136E                         __size_of_TMR2_ISR 0020  
                    TempAcquisition@TEMPH 00AE                      TempAcquisition@TEMPL 00AC  
                          _ADC_Initialize 12BE                                ?_TMR2_Tick 0001  
                  ?_OSCILLATOR_Initialize 0001                          PID_Control@error 0088  
                __size_of_TempAcquisition 0112                       start_initialization 10D6  
         __size_of_PIN_MANAGER_Initialize 004A                     __end_of_EUSART1_Write 1344  
                       __size_of_MainTask 0006                            TMR2_Tick@State 0042  
                            ??_TempUpdate 0040        __end_of_PID_SetControllerDirection 1358  
              _PID_SetControllerDirection 134E                     ??_ADC_StartConversion 0010  
                                ??___ftge 0028                                  ??___wmul 0014  
                  __end_of_ADC_Initialize 12D6                                  ?_ADC_ISR 0001  
           ?_TMR2_DefaultInterruptHandler 0001                         __size_of___awtoft 0038  
                       __size_of___ftpack 00AE                    __size_of_TMR2_CallBack 0026  
                             __pbssCOMRAM 0040                             __pcstackBANK0 0060  
                __size_of_TMR2_Initialize 0022                        __end_of_TempUpdate 1266  
                __size_of_CCP5_Initialize 0014                                 __pnvBANK0 00B7  
                           ??_PID_Control 0080                    _PIN_MANAGER_Initialize 108C  
                               __pintcode 0008                             ??_PID_SetMode 002D  
                       _ADC_SelectChannel 12D6                                  ?___awdiv 0016  
                                ?___ftadd 0063                                  ?___ftdiv 0022  
                                ?___ftneg 0060                                  ?___ftmul 0031  
                        _PID_Control$1503 0085                                  ?___fttol 006F  
                         ?_ADC_Initialize 0001                        ?_ADC_SelectChannel 0001  
            ??_INTERRUPT_InterruptManager 0002                          __CFG_PRICLKEN$ON 000000  
                             ??_TMR2_Tick 0001              __size_of_PID_SetOutputLimits 00FA  
                                _BAUDCON1 000FB8                       ??_ADC_SelectChannel 0010  
                               _lastInput 009D                     __size_of_PID_SetPoint 001A  
                       TMR2_Tick@Hard_OFF 0044                         ??_TempAcquisition 0040  
                    _INTERRUPT_Initialize 1362                            ___wmul@product 0014  
                                _LATAbits 000F89                                  _LATDbits 000F8C  
                           _TMR2_CallBack 11FE                                  _PIE1bits 000F9D  
                __size_of_TMR2_StartTimer 0004                 __end_of_ADC_SelectChannel 12EE  
                                i2u204_40 1278       __size_of_INTERRUPT_InterruptManager 0092  
                                i2u174_40 0B0A                                  i2u174_46 0B0C  
                                i2u183_40 0BD4                                  i2u175_40 0B2A  
                                i2u177_40 0B56                                  _PIR1bits 000F9E  
                                i2u178_40 0B66                                  i2u187_48 120E  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR2_ISR 1266                              _PID_SetPoint 12A4  
                     __end_of_PID_Control 033C                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2                         ___wmul@multiplier 0010  
                     __end_of_PID_SetMode 11D8                  ADC_SelectChannel@channel 0011  
                 __size_of_PID_Initialize 00BC            ??_TMR2_DefaultInterruptHandler 0001  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 0010  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                                _MainTask 1358                         ??_TMR2_Initialize 0012  
                          ?_TMR2_CallBack 0001                         ??_CCP5_Initialize 0010  
                                __Hrparam 0000                                  __Lrparam 0000  
                       _ADC_GetConversion 114C                        __CFG_BOREN$SBORDIS 000000  
                 __size_of_PID_SetTunings 0104                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 0010                        ?_ADC_GetConversion 0010  
                        __size_of___awdiv 0084                          __size_of___ftadd 0268  
                        __size_of___ftdiv 00E6                          __size_of___ftneg 0030  
                        __size_of___ftmul 00F4                          __size_of___fttol 0144  
             __size_of_EUSART1_Initialize 0016                                  ___awtoft 1114  
                                ___ftpack 0E2E                       ??_ADC_GetConversion 0012  
                                __ptext10 1358                                  __ptext11 1246  
                                __ptext20 0EDC                                  __ptext12 06E8  
                                __ptext21 1344                                  __ptext13 11D8  
                                __ptext30 0CC4                                  __ptext22 07FA  
                                __ptext14 1008                                  __ptext31 0F78  
                                __ptext23 117C                                  __ptext15 009E  
                                __ptext40 1370                                  __ptext32 1114  
                                __ptext24 0D80                                  __ptext16 05A4  
                                __ptext41 0AEC                                  __ptext33 0E2E  
                                __ptext25 09F8                                  __ptext17 033C  
                                __ptext42 136A                                  __ptext34 134E  
                                __ptext26 0BDE                                  __ptext18 1338  
                                __ptext43 0000                                  __ptext35 1366  
                                __ptext27 12A4                                  __ptext19 114C  
                                __ptext36 12D6                                  __ptext28 08FE  
                                __ptext29 11AC                                  __ptext38 1266  
                                __ptext39 11FE                             __size_of_main 0012  
               __end_of_ADC_GetConversion 117C                __size_of_ADC_SelectChannel 0018  
                             _PID_Control 009E               ?_PID_SetControllerDirection 0010  
                             _PID_SetMode 11AC                                  int$flags 0050  
                       ??_TMR2_StartTimer 0010        __end_of_INTERRUPT_InterruptManager 009A  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                            TMR2_Tick@min 0048                              TMR2_Tick@seg 004A  
                  ??_INTERRUPT_Initialize 0010                         _PID_SetSampleTime 0D80  
                                intlevel2 0000                           ??_TMR2_CallBack 0002  
                      ?_PID_SetSampleTime 0060               __end_of_ADC_StartConversion 136A  
                 ?_PIN_MANAGER_Initialize 0001                       _PID_SetOutputLimits 08FE  
                              _RCSTA1bits 000FAB                          ??_ADC_Initialize 0010  
                     ??_PID_SetSampleTime 0040                                _TEMP_FLOAT 00A3  
                  __size_of_EUSART1_Write 000C                           _TempAcquisition 06E8  
                          _PID_Initialize 0CC4                      ?_PID_SetOutputLimits 002B  
                   TMR2_ISR@CountCallBack 004C                 __end_of_PID_SetSampleTime 0E2E  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 10D6  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 00B7  
           PID_SetTunings@SampleTimeInSec 006C                __size_of_ADC_GetConversion 0030  
                          _PID_SetTunings 07FA  
